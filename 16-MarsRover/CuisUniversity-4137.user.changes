

----QUIT----(6 May 2020 23:58:36) CuisUniversity-4137.image priorSource: 11314041!

----STARTUP---- (6 May 2020 23:58:38) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4137.image!


!testRun: #ArithmeticObjectIntervalStrategyTest #testSingleton stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testAccessing stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testAdd stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testAddToCollection stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testAt stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testComparing stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testCopyAndGrowBy stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testDeepCopy stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testDo stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testFirst stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testHash stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testIncludes stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testInvalidAt stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testInvalidCreation stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testLast stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testReject stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testRemoveIfAbsent stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testReverse stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testReverseDo stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testSelect stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testShallowCopy stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testSize stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #ArithmeticObjectIntervalTest #testStoreOn stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testBetweenAndNotInclusive stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testHash stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testMax stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testMin stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testNotInclusiveBetweenAnd stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testNotInclusiveBetweenAndNotInclusive stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testTo stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToBy stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToByDo stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToNegativeBy stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToReverse stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #IntervalAwareMagnitudeTest #testToYourself stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #NumberToArithmeticObjectAdapterTest #testPrintString stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #UndefinedArithmeticObjectValueExceptionTest #testSignal stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #EdgeTest #testAccessing stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #EdgeTest #testConverging stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #EdgeTest #testEqual stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #EdgeTest #testGoing stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #EdgeTest #testHash stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #EdgeTest #testIsIncidentTo stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #EdgeTest #testPrintString stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #EdgeTest #testStarting stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphPathFinderTest #testGraphPathNotFoundException stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphPathFinderTest #testInvalidPath stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphPathFinderTest #testPathToFarAwayPlaces stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphPathFinderTest #testPathToNeighborPlace stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphPathFinderTest #testSamePlace stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphPathFinderTest #testWithLoops stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testAccessImmutability stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testApplyUsingDepthFistSearch stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testConvergingEdges stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testCreateGraphWithInvalidEdge stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testCreateGraphWithUnconnectedNodes stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testCreateGraphWithoutEdges stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testCreationImmutability stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testEdgesConvergingToSelf stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testEqual stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testEqualsDifferentGraphs stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testGraphCreation stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testHash stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testIncludesNode stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testIsAcyclicWhenGraphIsAcyclic stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testIsAcyclicWhenGraphIsCyclic stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testIsEmpty stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testNodesAdjacentTo stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testNodesWithoutEdges stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testNotEmpty stamp: 'HAW 5/6/2020 23:58:42'!
PASSED!

!testRun: #GraphTest #testRemoveNode stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #GraphTest #testRemoveNodeWithInvalidNode stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #GraphTest #testRemoveNodes stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #GraphTest #testSameNodesAs stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #GraphTest #testStartingEdges stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #TopologicalSortTest #testCreateWithCyclicGraph stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #TopologicalSortTest #testValue stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #TopologicalSortTest #testValueWithAnotherGraph stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #TopologicalSortTest #testWithGraphWithoutEdges stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDenominator stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByDifferentBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByDifferentDomainDerivedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByDivideUnitSameBaseUnitNumerator stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByDivideUnitSameDomainDerivedUnitNumerator stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByInfinity stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByMinusInfinity stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByNullUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideByNumber stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideBySameBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testDivideBySameDomainDerivedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testEqualDerivedSameBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testEqualDifferentBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testEqualDividedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testEqualMultipliedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testEqualNullUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testEqualSameBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testFloatDividedByUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testFloatDividedByUnitTwice stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testFloatMultipliedByUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testFloatMultipliedByUnitTwice stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testIntegerDividedByUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testIntegerDividedByUnitTwice stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testIntegerMultipliedByUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testIntegerMultipliedByUnitTwice stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testMeasureCreation stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByDividedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByInfinity stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByMinusInfinity stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByNullUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyByNumber stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testName stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testNameFor stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testNameForMany stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testNameForOne stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testNameForUndefinedAmount stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testNothingAmount stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testNullMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testNumerator stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testReciprocal stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsDerivedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsDerivedUnitOfOtherDomain stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsDifferentBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsNullUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testSameDomainAsSameBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #BaseUnitTest #testSign stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testAtBegin stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testAtEnd stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testCurrent stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testDistanceFrom stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testDistanceFromTo stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testDistanceTo stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testDistanceToFrom stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testNext stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testNextANumberOfSomething stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testPrevious stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testPreviousANumberOfSomething stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CircularReadStreamTest #testRelativeDistanceFromTo stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAdd stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddAssociativity stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddBags stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddCommutativity stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddEquality stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddExistingUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddFloatWithMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddFractionWithMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddImmutability stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddIntegerWithMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAddNothing stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAtSameBaseUnitAsWithBaseUnits stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testAtSameBaseUnitAsWithDerivedUnits stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testCompoundMeasureImmutability stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testCreationWithMeasures stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testCreationWithMeasuresCopiesCollection stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testDivideByMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testDivision stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionDistributivity stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionFloatByMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionFractionByMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionIntegerByMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testDivisionMeasureByCompoundMeasure stamp: 'HAW 5/6/2020 23:58:43'!
PASSED!

!testRun: #CompoundMeasureTest #testEqual stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualAllNothing stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualNumber stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualOneNothing stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualWithDifferentBagSizeButRepresentSameEntity stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testEqualWithDifferentBagSizeIsNothing stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testHash stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testHashAllNothing stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testHashOneNothing stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testInvalidTruncated stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testIsCompoundMeasurement stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testIsFraction stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testIsNothing stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testLessThan stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMeasures stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testModulo stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloCompoundMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloFloatByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloFractionByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloIntegerByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testModuloMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplication stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplicationByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplicationByZero stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplicationCommutativity stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplicationDistributivity stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplyFloatByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplyFractionByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplyIntegerByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testMultiplyMeasureByCompoundMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testNegated stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testNegatedDistribution stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testNegatedZeroBag stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testNotEqual stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testNumberOfMeasures stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testPrintingForMany stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testPrintingForOne stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testRemFrom stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainder stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainderCompoundMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainderFloatByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainderIntegerByMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testRemainderMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testRoundTo stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtract stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractBags stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractEquality stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractExistingUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractFloatWithMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractFractionWithMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractIntegerWithMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractMeasureByCompoundMeasure stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testSubtractNothing stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testTheZeroOfTheDomainIsEqualToZero stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testTruncated stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testUnitNameOf stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testWithWithBaseUnits stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testWithWithDerivedUnits stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testZeroDivision stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #CompoundMeasureTest #testZeroEqualsTheZeroOfTheDomain stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testAccessing stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testAccessingImmutability stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testAddUnitConversionRule stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testBreakEquivalence stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testConvertsTo stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testDerivedUnitIsEquivalentTo stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testFromToUse stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testGraph stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testGraphChange stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testIsEquivalentTo stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testNoUnitConversionRule stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testRemove stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #ConversionTableTest #testUnitConversionRuleUniqueness stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDenominator stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDivideByDividedUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDivideByFloat stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDivideByInfinity stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDivideByInteger stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDivideByMinusInfinity stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDivideBySimpleUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDividedByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testDividedByNullUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testEqualDividedUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testEqualMultipliedUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testEqualNullUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testEqualSimpleUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testFloatDividedByUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testFloatDividedByUnitTwice stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testFloatMultipliedByUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testFloatMultipliedByUnitTwice stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testIntegerDividedByUnit stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testIntegerDividedByUnitTwice stamp: 'HAW 5/6/2020 23:58:44'!
PASSED!

!testRun: #DividedUnitTest #testIntegerMultipliedByUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testIntegerMultipliedByUnitTwice stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMeasureCreation stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByDividedUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByFloat stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByInfinity stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByInteger stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByMinusInfinity stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyByNullUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testName stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testNameForMany stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testNameForOne stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testNothingAmount stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testNullMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testNumerator stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testReciprocal stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testSameDomainAsNullUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testSameDomainAsSameSimpleUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #DividedUnitTest #testSign stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testAdd stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testDivide stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testIsCompoundMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testModulo stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testMultiply stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testNegated stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testRemainder stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testSubtract stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #EvaluationTest #testTruncated stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MeasureConverterTest #testCanConvertTo stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MeasureConverterTest #testCompoundMeasureConversion stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MeasureConverterTest #testConvertToUsing stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MeasureConverterTest #testDefaultGraphPathFinder stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MeasureConverterTest #testDirectSearching stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MeasureConverterTest #testIndirectSearching stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MeasureConverterTest #testInvalidConversion stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MeasureConverterTest #testSameDomainConversion stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testAdd stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testAmount stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testBagCreationWithNumber stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testBetweenAnd stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testCompoundMeasureCreationWithMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testConvertTo stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testDenominator stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testDivide stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testDivideByUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testDivideMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testEqualsCompoundMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testEqualsMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testIsCompoundMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testIsNothing stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testMax stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testMin stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testModulo stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testModuloMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testMultiplication stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testMultiplyByUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testMultiplyMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testNegated stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testNegative stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testNumerator stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testPositive stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testRemainder stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testRemainderMeasure stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testRoundTo stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testSameDomainAs stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testSameUnitAs stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testSubtract stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testToBy stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testToFromFixed stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testToInfinity stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testToToFixed stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testTruncated stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MinusInfinityTest #testUnitNameOf stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDenominator stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByDividedUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByFloat stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByInfinity stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByInteger stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideByMinusInfinity stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDivideBySimpleUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDividedByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testDividedByNullUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testEqualDividedUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testEqualMultipliedUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testEqualNullUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testEqualSimpleUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testFloatDividedByUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testFloatDividedByUnitTwice stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testFloatMultipliedByUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testFloatMultipliedByUnitTwice stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testIntegerDividedByUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testIntegerDividedByUnitTwice stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testIntegerMultipliedByUnit stamp: 'HAW 5/6/2020 23:58:45'!
PASSED!

!testRun: #MultipliedUnitTest #testIntegerMultipliedByUnitTwice stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMeasureCreation stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByDividedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByFloat stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByInfinity stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByInteger stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByMinusInfinity stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyByNullUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testName stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testNameForMany stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testNameForOne stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testNothingAmount stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testNullMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testNumerator stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testReciprocal stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testSameDomainAsNullUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testSameDomainAsSameSimpleUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #MultipliedUnitTest #testSign stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testDenominator stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testName stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNameForMany stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNameForOne stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNothingAmount stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNullMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testNumerator stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testReciprocal stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testSameDomainAs stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NotProportionalDerivedUnitTest #testSign stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testDenominator stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testDivideByDividedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testDivideByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testDivideByNullUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testDivideBySimpleUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testEqualBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testEqualDerivedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testEqualDividedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testEqualMultipliedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testEqualNullUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testMeasureCreation stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testMultiplyByDividedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testMultiplyByNullUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testName stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testNameForMany stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testNameForOne stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testNumerator stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testReciprocal stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsDerivedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testSameDomainAsNullUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NullUnitTest #testSign stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testAmount stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testConvertTo stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testConvertToIfSuccessfullDoIfFails stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testIsNothing stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #NumberMeasureProtocolTest #testUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testAdd stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testAmount stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testBagCreationWithNumber stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testBetweenAnd stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testCompoundMeasureCreationWithMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testConvertTo stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testDenominator stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testDivide stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testDivideByUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testDivideMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testEqualsCompoundMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testEqualsMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testIsCompoundMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testIsNothing stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testMax stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testMin stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testModulo stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testModuloMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testMultiplication stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testMultiplyByUnit stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testMultiplyMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testNegated stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testNegative stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testNumerator stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testPositive stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testRemainder stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testRemainderMeasure stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testRoundTo stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testSameDomainAs stamp: 'HAW 5/6/2020 23:58:46'!
PASSED!

!testRun: #PlusInfinityTest #testSameUnitAs stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #PlusInfinityTest #testSubtract stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #PlusInfinityTest #testToBy stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #PlusInfinityTest #testToFromFixed stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #PlusInfinityTest #testToInfinity stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #PlusInfinityTest #testToToFixed stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #PlusInfinityTest #testTruncated stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #PlusInfinityTest #testUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #PlusInfinityTest #testUnitNameOf stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testConversionFactor stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDenominator stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByDifferentBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByDifferentDomainDerivedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByDivideUnitSameDerivedUnitNumerator stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByDividedUnitSameBaseUnitNumerator stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideByNullUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideBySameBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testDivideBySameDomainDerivedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualDerivedSameBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualDifferentBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualDividedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualMultipliedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualNullUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualSameBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testEqualSameDerivedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMeasureCreation stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMultiplyByDividedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMultiplyByMultipliedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMultiplyByNullUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testMultiplyBySimpleUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testName stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNameForMany stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNameForOne stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNothingAmount stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNullMeasure stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testNumerator stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testReciprocal stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsDerivedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsDerivedUnitOfOtherDomain stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsDifferentBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsDividedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsMultipliedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsNullUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsSameBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSameDomainAsUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalDerivedUnitTest #testSign stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testAccessing stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testEqual stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testHash stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testInvalidValues stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #ProportionalUnitConversionFunctionTest #testValidValues stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAbs stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddAssociativity stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddBaseUnitAndDerivedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddCommutativity stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddDerivedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddDifferentBaseUnits stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddDifferentUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddDividedMeasure stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddFloatWithMeasure stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddFractionWithMeasure stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddInfinity stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddIntegerWithMeasure stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddMinusInfinity stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddMultipliedMeasure stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAddNumber stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAmount stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAmountCanBeConvertedToFloat stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAmountCanBeConvertedToFraction stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAmountCanBeConvertedToInteger stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testAtBaseUnitIfNone stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testBetweenAnd stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testBetweenAndNotInclusive stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testCompareGreaterThan stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testConvertAmountToBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testConvertNothing stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testConvertTo stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testConvertToBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDenominator stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivideInfinity stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivideMinusInfinity stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByDividedMeasure stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByMeasureBaseUnitOverBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByMeasureBaseUnitOverDerivedUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByMeasureDerivedUnitOverBaseUnit stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByNumber stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionByZero stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionFloatByMeasure stamp: 'HAW 5/6/2020 23:58:47'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionFractionByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionIntegerByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionOfBaseUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testDivisionOfDerivedUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testEqual stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testEqualDifferentBaseUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testEqualNothingWhenRepresentSameEntity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testEqualNumber stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testGreaterThanEquals stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testHash stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testIntegerDivideCompoundMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidBetweenAnd stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidBetweenAndNotInclusive stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidConvertTo stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidGreaterThan stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidGreaterThanAgainstScalar stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidGreaterThanEquals stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidLessThan stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidLessThanEquals stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidMax stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidMin stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidNotInclusiveBetweenAnd stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testInvalidNotInclusiveBetweenAndNotInclusive stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testIsFraction stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testIsNothing stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testLessThan stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testLessThanEquals stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMax stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMeasures stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMin stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloByZero stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloFloatByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloFractionByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloInfinity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloIntegerByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloMinusInfinity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloOfBaseUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testModuloOfDerivedUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplicationOfBaseUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplicationOfDerivedUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByDividedMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByMeasureAssociativity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByMultipliedMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyByNumber stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyFloatByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyFractionByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyInfinity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyIntegerByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testMultiplyMinusInfinity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testNegated stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testNegative stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testNotEqual stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testNotInclusiveBetweenAnd stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testNotInclusiveBetweenAndNotInclusive stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testNumerator stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testPositive stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testPrintingForMany stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testPrintingForOne stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemFrom stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderByZero stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderCompoundMeasureByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderFloatByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderInfinity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderIntegerByMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderMinusInfinity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderOfBaseUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRemainderOfDerivedUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testRoundTo stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSameDomainAs stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSimplificationsAddingWithZero stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSimplificationsDividingFromZero stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractAssociativity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractBaseUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractDerivedUnit stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractDividedMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractFloatWithMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractFractionWithMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractInfinity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractIntegerWithMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractMinusInfinity stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testSubtractMultipliedMeasure stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testTheZeroOfTheDomainIsEqualToZero stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testTo stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testToAt stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testToAtByNegative stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testToBy stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testToByDo stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testToCollect stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testToFirst stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testToLast stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testToSize stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testTruncated stamp: 'HAW 5/6/2020 23:58:48'!
PASSED!

!testRun: #SimpleMeasureTest #testUnit stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #SimpleMeasureTest #testUnitNameOf stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #SimpleMeasureTest #testZeroIsEqualToTheZeroOfTheDomain stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleTest #testAccessing stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleTest #testConvert stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleTest #testEqual stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleTest #testHash stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testAccessing stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testEdgeProtocol stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testEdgeProtocolBehavior stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testEqual stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #UnitConversionRuleToEdgeAdapterTest #testHash stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #AllDatesUniverseTest #testDo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #AllDatesUniverseTest #testFrom stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #AllDatesUniverseTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #AllDatesUniverseTest #testTo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testCreation stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testIncludesDayMovesToTheNextMonday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testIncludesDayMovesToThePreviousMonday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testIncludesDayWhenDayIsMonday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testIncludesDayWhenDayIsSaturday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #ArgentineLaw23555RuleTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #CardinalDayMonthRuleTest #testDifferentMonth stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #CardinalDayMonthRuleTest #testIncludesDayMovesToTheThirdMonday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #CardinalDayMonthRuleTest #testIncludesDayWhenDayIsSaturday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #CardinalDayMonthRuleTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DayOfMonthRuleTest #testAccessing stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DayOfMonthRuleTest #testIncludes stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testAdd stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testAddRules stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testAlwaysFulfills stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testAsOrderedCollection stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testAsSortedCollection stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testComposite stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testCreation stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testDo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testExcludedFromTo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testExcludedIn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testExcludes stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testExcludesAll stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testIncludedFromTo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testIncludedIn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testIncludes stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testIncludesAll stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testInvalidDo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testIsEmpty stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testRemoveAllRules stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testRemoveIfAbsent stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testRemoveRule stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testRulesCopy stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testRulesThatInclude stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testSize stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #DefinedByRulesTest #testSpecies stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testAccessing stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testEquals stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testImmutableValue stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testMonday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testMonth stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testNext stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testNextFiltered stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testPreviousFiltered stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testSaturday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testSunday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #FilteredGregorianDateTest #testToday stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testFrom stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testIncludes stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testInstanceCreating stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testPrintString stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #IntervalConstrainedInclusionRuleTest #testTo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testDaysBetween stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testExcludedFromTo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testExcludedIn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testExcludes stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testExcludesAll stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testIncludedFromTo stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testIncludedIn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testIncludes stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testIncludesAll stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testName stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testNegated stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testNextNegativeDuration stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testNextPositiveDuration stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #NegatedTimeLineFilterTest #testStream stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAbsoluteDate stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAcceptAVisitor stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAsSmalltalkDate stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAt stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAtMidnight stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAtNoon stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #RelativeGregorianDateTest #testAtTimeOfDay stamp: 'HAW 5/6/2020 23:58:49'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDay stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDayNumber stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDayOfMonth stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDaysFrom stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDaysTo stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testDefaultIntervalIncrement stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testEqual stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testHash stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIntervalStrategy stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIsFirstDayOfMonth stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIsFirstDayOfYear stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIsLastDayOfMonth stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testIsLastDayOfYear stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testLessThan stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testMonth stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testMonthOfYear stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNext stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNextDay stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysFromBaseDate stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysFromBeginningOfMonth stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysToEndOfMonth stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testNumberOfDaysToEndOfYear stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testPrevious stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testPreviousDay stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testToEvery stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testToEveryDay stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testToEveryDayNumber stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testToEveryDayNumbers stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #RelativeGregorianDateTest #testYear stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #SpecificDayRuleTest #testAccessing stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #SpecificDayRuleTest #testIncludes stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #SpecificObjectInclusionRuleTest #testAccessing stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #SpecificObjectInclusionRuleTest #testIncludes stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #SpecificObjectInclusionRuleTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterStreamTest #testAtEnd stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterStreamTest #testCurrent stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterStreamTest #testDo stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterStreamTest #testReset stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddArgentineLaw23555Rule stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddCardinalDayMonthRuleRule stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddDateRule stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddDayOfMonthRule stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddDayRule stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRuleFrom stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRuleFromTo stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRules stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRulesFrom stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testAddRulesFromTo stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testDateRule stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testDayOfMonthRule stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testDayRule stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testDaysBetween stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testExcludedFromTo stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testExcludedIn stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testExcludes stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testExcludesAll stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testFromString stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testHash stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testIncludedFromTo stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testIncludedIn stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testIncludes stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testIncludesAll stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testNegatedIncludes stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testNegatedNext stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testNextNegativeDuration stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testNextPositiveDuration stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testNumberOfDaysBetweenTwoDates stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testPrintOn stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testRemoveAllRules stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testRuleFromTo stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testRules stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testRulesThatIncludeADate stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #TimeLineFilterTest #testStream stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #UniverseTest #testDo stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testEqual stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testHash stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testLastDayNumber stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testLessThan stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testName stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testNext stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testNumber stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testNumberOfDaysFromBeginningOfYear stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testNumberOfDaysIn stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testPrevious stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FebruaryGregorianMonthTest #testPrintString stamp: 'HAW 5/6/2020 23:58:50'!
PASSED!

!testRun: #FixedGregorianDateTest #test29OfFebruaryToEveryDayOfMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testAsSmalltalkDate stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testAt stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testAtMidnight stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testAtNoon stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testAtTimeOfDay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testCreation stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testDay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testDayNumber stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testDayOfMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testDaysFrom stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testDaysTo stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testEqual stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testHash stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testImmutableValue stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIncludesDate stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIncludesDateTime stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIncludesMonthOfYear stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIncludesYear stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testInvalidCreation stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsApril stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsAugust stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsDecember stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsFebruary stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsFirstDayOfMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsFirstDayOfYear stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsFriday stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsJanuary stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsJuly stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsJune stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsLastDayOfMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsLastDayOfYear stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsMarch stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsMay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsMonday stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsNovember stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsOctober stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsSaturday stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsSeptember stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsSunday stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsThursday stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsTuesday stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testIsWednesday stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testLessThan stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testMonthOfYear stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNext stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextDay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextDayOfMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextInNumberOfDays stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextInWeeks stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNextMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysFromBaseDate stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysFromBeginningOfMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysToEndOfMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testNumberOfDaysToEndOfYear stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testPrevious stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testPreviousDay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testPreviousDayOfMonth stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testPreviousInNumberOfDays stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testPreviousInWeeks stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testPrintString stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testTheBeginningAndTheEndOfTime stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testTo stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToBy stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToByDo stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToByReverse stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryBeginningDifferentDay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryBeginningSameDay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayBeginningDifferentDay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayBeginningSameDay stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayNumber stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayNumbers stamp: 'HAW 5/6/2020 23:58:51'!
PASSED!

!testRun: #FixedGregorianDateTest #testToEveryDayOfMonth stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #FixedGregorianDateTest #testToNegativeBy stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #FixedGregorianDateTest #testTomorrow stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #FixedGregorianDateTest #testVisitorAccessing stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #FixedGregorianDateTest #testYear stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #FixedGregorianDateTest #testYesterday stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testAccessing stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testAdd stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testComparing stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testFirstTimeOfDay stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testHash stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testLastTimeOfDay stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testLessThan stamp: 'HAW 5/6/2020 23:58:52'!
PASSED!

!testRun: #GregorianDateTimeTest #testNow stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testPrintString stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testReverse stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testSameDateAs stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testSameTimeOfDayAs stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testSpecialDateTimes stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testSubtract stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testTimeFrom stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testTimeFromMidnight stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testTimeTo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testTimeToEndOfDay stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testTo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testToBy stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testToByDo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testToByMinutesDo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testToNegativeByDo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testWithDay stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDateTimeTest #testWithDayOfMonth stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testComma stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testComparing stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testCreation stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testDateOfYear stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testDaysFrom stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testDaysTo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testDivisionSymbolCanBeUseToCreateADate stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testEqual stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testHash stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testInvalidCreation stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testIsFirstDayOfMonth stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testIsFirstDayOfYear stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testIsLastDayOfMonth stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testIsLastDayOfYear stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNext stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNextANumberOfDays stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNumberOfDaysFromBeginningOfMonth stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNumberOfDaysToEndOfMonth stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testNumberOfDaysToEndOfYear stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testPrevious stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testPreviousANumberOfDays stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testPrintString stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testTo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToBy stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToByDo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToEveryDayNumber stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToEveryDayNumbers stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToNegativeBy stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToReverse stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayOfMonthTest #testToday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testCommonDaysMeasure stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testDayCreation stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testDayPositionedInWeek stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testDays stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testDaysFrom stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testDaysTo stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testEqual stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testGlobalVariables stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testInvalidNameCreation stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testIsFriday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testIsMonday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testIsSaturday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testIsSunday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testIsThursday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testIsTuesday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testIsWednesday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testName stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testNext stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testNextInANumberOfDays stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testNumberOfDaysSinceSunday stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testPrevious stamp: 'HAW 5/6/2020 23:58:53'!
PASSED!

!testRun: #GregorianDayTest #testPreviousInANumberOfDays stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianDayTest #testPrintString stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianDayTest #testSinceSunday stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianDayTest #testTo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianDayTest #testToBy stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianDayTest #testToDo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianDayTest #testToNegativeBy stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianDayTest #testToNegativeByDo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianDayTest #testToday stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testCardinalDay stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testCreation stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testCurrent stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testDates stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testEqual stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testFirstDate stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testFirstDay stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testHash stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testIncludesDate stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testIncludesDateTime stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testIncludesMonthOfYear stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testIncludesYear stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testInvalidCreation stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testLastDate stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testLastDay stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testLastDayNumber stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testLessThan stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testMonthsFrom stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testMonthsTo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testName stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testNext stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testNextANumberOfMonths stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testNextMonthDefinedAs stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testNumberOfDays stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testPrevious stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testPreviousANumberOfMonths stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testPreviousMonthDefinedAs stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testPrintString stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testTo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToBy stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToByDo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToByYearsDo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToNegativeBy stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthOfYearTest #testToReverse stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testApril stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testAugust stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testComma stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testCommonMonthsMeasure stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testCurrent stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testDayOfMonthCreation stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testDecember stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testDivisionSymbolCanBeUseToCreateADayOfMonth stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testFebruary stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testFirstDayOfMonth stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testGlobalVariables stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIdentity stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsApril stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsAugust stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsDecember stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsFebruary stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsJanuary stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsJuly stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsJune stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsMarch stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsMay stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsNovember stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsOctober stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testIsSeptember stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testJanuary stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testJuly stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testJune stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testLastDayOfMonth stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testLessThan stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testMarch stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testMay stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testMonthCreation stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testMonthsFrom stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testMonthsTo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testNamed stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testNext stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testNextInANumberOfMonths stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testNovember stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testNumberOfMonthsPerYear stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testOctober stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testOf stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testOfYear stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testPrevious stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testPreviousInANumberOfMonths stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testSeptember stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testTo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testToBy stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testToByDo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testToNegativeByDo stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianMonthTest #testToReverse stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianTimespanTest #testAccessing stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianTimespanTest #testAsInterval stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianTimespanTest #testCanCreateATimespanAfterATimeMeasure stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianTimespanTest #testCanCreateATimespanBeforeATimeMeasure stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianTimespanTest #testEqual stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianTimespanTest #testFromInterval stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianTimespanTest #testHash stamp: 'HAW 5/6/2020 23:58:54'!
PASSED!

!testRun: #GregorianTimespanTest #testPrintString stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianTimespanTest #testTo stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testCurrent stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testDates stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testDaysInFebruary stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testDistanceTo stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testEqual stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testFirstDate stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testFirstDay stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testFirstMonth stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testHash stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testIncludesDate stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testIncludesDateTime stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testIncludesMonthOfYear stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testIncludesYear stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testInvalidNextANumberOfYears stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testInvalidPreviousANumberOfYears stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testInvalidYear stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testIsLeap stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testLastDate stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testLastDay stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testLastMonth stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testLessThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testMonths stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testMonthsOfYearsAccessing stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testNext stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testNextANumberOfYears stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testNextLeapYear stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testNumber stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testNumberOfDays stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testNumberOfDaysFromBaseDate stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testPrevious stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testPreviousANumberOfYears stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testPreviousLeapYear stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testPrintString stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testTo stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testToBy stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testToByDo stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testToByReverse stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testToNegativeBy stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testYearsFrom stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testYearsTo stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #GregorianYearTest #testZeroYears stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testEqual stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testHash stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testLastDayNumber stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testLessThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testName stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testNext stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testNumber stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testNumberOfDaysFromBeginningOfYear stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testNumberOfDaysIn stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testPrevious stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #JanuaryGregorianMonthTest #testPrintString stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #MoreThanOnePointInTimeIntervalStrategyTest #testIsValidIntervalFromToBy stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testEqual stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testGreaterThanFebruary stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testHash stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testLastDayNumber stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testLessThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testLessThanFebruary stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testName stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testNumber stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testNumberOfDaysIn stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #NonSpecificThirtyOneDaysGregorianMonthTest #testPrintString stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testDayOfMonthCreation stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testEqual stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testGreaterThanFebruary stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testHash stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testLastDayNumber stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testLessThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testLessThanFebruary stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testName stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testNumber stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testNumberOfDaysFromJanuaryFirst stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testNumberOfDaysIn stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyDaysGregorianMonthTest #testPrintString stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyOneDaysGregorianMonthTest #testThirtieth stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #ThirtyOneDaysGregorianMonthTest #testThirtyfirst stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testAdd stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testCanCreateAsWrittenInEnglish stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testCanNotCreateTimeOfDayWithSemiColonWhenReceiverHasSeconds stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testComparing stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testCreation stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testCreationHour stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testCreationMilliseconds stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testCreationMinute stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testCreationSecond stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testFirstTimeOfDay stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testGreaterThan stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testHash stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testInvalidCreation stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testLastTimeOfDay stamp: 'HAW 5/6/2020 23:58:55'!
PASSED!

!testRun: #TimeOfDayTest #testLessThan stamp: 'HAW 5/6/2020 23:58:56'!
PASSED!

!testRun: #TimeOfDayTest #testNow stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testOneMillisecond stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testOneSecond stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testPrintString stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testReverse stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testSubtract stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testTimeFrom stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testTimeFromMidnight stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testTimeTo stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testTimeToEndOfDay stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testTo stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testToBy stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testToByDo stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testToNegativeByDo stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testTwentyFourHours stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeOfDayTest #testZeroHours stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testAllUnits stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testDay stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testHour stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testMillisecond stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testMinute stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testMonth stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testSecond stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testWeek stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TimeUnitsTest #testYear stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #BinarySearchTest #testquickFindFirst stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #BinarySearchTest #testquickFindLast stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #BinarySearchTest #testquickIndexOf stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #BinarySearchTest #testquickIndexOfWithSemistableOrder stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectTest #testIdentitySet stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectTest #testOrderedCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectTest #testSet stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectTest #testSortedCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testAsCommaSeparatedOnWorksAsCommaStringAnd stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testAsCommaStringAndDoesNotAddAnythingWhenEmpty stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testAsCommaStringAndDoesNotAddAnythingWhenHasOneElement stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testAsCommaStringAndSeparatesWithAndWhenTwoOneElements stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testAsCommaStringAndSeparatesWithCommaButLastOneWithAndWhenMoreThanTwoElements stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testAverageFailsWhenTheCollectionIsEmpty stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testAverageIfEmptyCalculatesItAsUsualWhenTheCollectionIsNotEmpty stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testAverageIfEmptyEvaluatesEmptyBlockWhenTheCollectionIsEmpty stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testGroupByHavingSelectsTheResultOfGroupBy stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testGroupByReturnsADictionaryThatGroupsACollectionByThePluggableKey stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testIsCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testItMaintainsTheSameCollectionSpecies stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testSetEquality stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsASingleLevelOfElementsItReturnsTheSameCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsMoreThanTwoLevelsltReturnsTheElementsOfAllNestedCollections stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsStringCollectionsItDoesNotFlattenTheStrings stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsStringsItReturnsTheSameCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionContainsTwoLevelsOfElementsItReturnsTheElementsOfAllNestedCollections stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testWhenCollectionIsEmptyItReturnsTheSameCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #CollectionTest #testsAverageWorksWithABlock stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #DictionaryTest #testIsCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #DictionaryTest #testKeyNotFoundSignalTheRightMessage stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testAt stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testDoesNotIncludeNumbersOutsideTheInInterval stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testDoesNotIncludeObjectsThatAreNotNumbers stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testDoesNotIncludedNumbersThatAreInRangeButNotReachedByTheStep stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testDoesNotIncludedNumbersThatAreInRangeButNotReachedByTheStepWithReversedIntervals stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testFloatInterval stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testFloatToByDo stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIncludedNumbersRespectAStepDifferentToOne stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIncludedNumbersRespectNegativeSteps stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIncludesNumbersInsideTheInterval stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIncludesNumbersInsideTheIntervalEvenForReversedIntervals stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIntegerInterval stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIntegerToByDo stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIntervalWithOneNumberAndNegativeStepBiggerThanOneIncludeOnlyThatNumber stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIntervalWithOneNumberAndNegativeStepIncludeOnlyThatNumber stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIntervalWithOneNumberAndStepBiggerThanOneIncludesOnlyTheNumber stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #IntervalTest #testIntervalWithOneNumberIncludesOnlyTheNumber stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #OrderedCollectionTest #testIsCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #OrderedCollectionTest #testStreamContentsWorksAsExpected stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #OrderedCollectionTest #testWriteStreamOnOrderedCollectionGrowsAsExpected stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #OrderedDictionaryTest #testOrder stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #OrderedDictionaryTest #testRemove stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #SequenceableCollectionTest #testCombinationsAtATimeDoShouldEvaluateBlockWithEmptyCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #SequenceableCollectionTest #testCombinationsAtATimeDoWorksAsExpected stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #SequenceableCollectionTest #testDoSeparatedByDoesNotValueSeparatedBlockForCollectionsOfOneElement stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #SequenceableCollectionTest #testDoSeparatedByDoesNotValueSeparatedBlockOnLastElement stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #SequenceableCollectionTest #testDoSeparatedByDoesNothingForEmptyCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #SequenceableCollectionTest #testWithIndexDoSeparatedByDoesNotValueSeparatedBlockForCollectionsOfOneElement stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #SequenceableCollectionTest #testWithIndexDoSeparatedByDoesNotValueSeparatedBlockOnLastElement stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #SequenceableCollectionTest #testWithIndexDoSeparatedByDoesNothingForEmptyCollection stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #TextTest #testIsText stamp: 'HAW 5/6/2020 23:58:57'!
PASSED!

!testRun: #WeakIdentitySetTest #test stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testAllAccessToInstVarReturnsAccessInSiblingsToo stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testAllAccessToIsEmptyForVariableNotDefinedInClass stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testAllSuperclassesUpToFailsWhenWantsToStopOnInvalidSuperclass stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testAllSuperclassesUpToPutsFirstSuperclassesFirst stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testAllSuperclassesUpToStopsOnRightClass stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testAllUnreferencedInstanceVariablesReturnsOnlyUnreferencedVariables stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testHasReferencesToInstanceVariableNamedLooksInClassOnly stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testHighestClassImplementingReturnsReceiverWhenNoOtherSuperclassImplementsSelector stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testHighestClassImplementingReturnsTheTopSuperclassImplementingSelector stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testHighestClassImplementingValuesIfNoneBlockWhenSelectorIsNotImplemented stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testIsInstanceVariableNamedReferencedInHierarchyLooksReferencesInHierarchy stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testUnreferencedInstanceVariablesReturnsOnlyUnreferencedVariables stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #BehaviorTest #testWithAllSuperclassesUpToIncludesReceiverClass stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #ClassTest #testDefinitionReplacingCategoryWithReplacesTheCategoryWithTheGivenOne stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #ClassTest #testDefinitionReplacingCategoryWithWorksWhenCategoryIsNil stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateAndTimeTest #testCreation stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateAndTimeTest #testDayOfWeek stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateAndTimeTest #testInvalidOperations stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateAndTimeTest #testIsDateAndTime stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateAndTimeTest #testLessDateAndTime stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateAndTimeTest #testOperations stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateAndTimeTest #testToByDo stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateTest #testCreation stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateTest #testInvalidOperations stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateTest #testLessDate stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DateTest #testLessDuration stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #DurationTest #testPrintString stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #MonthTest #testCreation stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #MonthTest #testPrintString stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #TimeTest #testCreation stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #TimeTest #testEqual stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #TimeTest #testSqueakInquiries stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #TimeTest #testTimePartsArePositive stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #TimespanTest #testIsTimespan stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #WeekTest #testCreation stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #WeekTest #testIncluding stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #WeekTest #testInvalidOperations stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #WeekTest #testPrintString stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #WeekTest #testWeekDayNames stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #YearTest #testCreation stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #YearTest #testIncluding stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test01isGetterWhenSameSelectorAsInstanceVariableAndOnlyReturnsThatVariable stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test01withPropertiesDoIfSelectorEvaluatesFirstBlockWhenMethodHasProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test02isNotGetterWhenDifferentSelectorAsInstanceVariable stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test02removePropertiesRestoresPenultimalLiteralToSelector stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test03isNotGetterWhenSameSelectorAsInstanceVariableButDoesOtherThingBesidesReturningVariable stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test03removePropertiesKeepsSelectorIfMethodDoesNotHaveProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test04isSetterWhenSameKeywordSelectorAsInstanceVariableAndOnlySetsTheVariable stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test04withPropertiesDoIfSelectorEvaluatesSecondBlockWhenMethodHasNoProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test05hasLiteralSuchThatTravelsListeralsWhenMethodHasProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test05isNotSetterWhenDifferentKeywordSelectorAsInstanceVariable stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test06hasLiteralSuchThatTravelsListeralsWhenMethodHasNoProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test06isNotSetterWhenSameKeywordSelectorAsInstanceVariableButDoesNotAssignParameter stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test0701withPropertiesDoReturnsNilIfMethodHasNoProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test07AccessorDescriptionIsGetterForAGetter stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test07withPropertiesDoEvaluatesBlockOnlyWhenMethodHasProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test08AccessorDescriptionIsSetterForASetter stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test08hasLiteralThoroughReturnTrueWhenMethodHasPropertiesAndHasLiteral stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test09AccessorDescriptionIsReadForMethodThatReadsInstanceVariable stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test09hasLiteralThoroughReturnFalseWhenMethodHasPropertiesAndHasNoLiteral stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test10AccessorDescriptionIsWriteForMethodThatWritesInstanceVariable stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test10hasLiteralThoroughReturnTrueWhenMethodHasNoPropertiesAndHasLiteral stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test11AccessorDescriptionIsWriteReadForMethodThatWritesAndReadInstanceVariable stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test11hasLiteralThoroughReturnFalseWhenMethodHasNoPropertiesAndHasNoLiteral stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test12pragmaAtReturnsPragmaIfExist stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test13pragmaAtReturnsNilIfPragmaDoesNotExist stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test14pragmasReturnsCollectionOfMethodPragmas stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test15pragmasReturnsEmptyCollectionWhenMethodHasNoProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test16propertiesReturnsAnNewAdditionalMethodStateWhenNoPropertiesHasBeenSet stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test17propertiesReturnsTheAlreadySetAdditionalMethodStateWhenHasProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test18propertyKeysAndValuesDoIteratesOverProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test19propertyKeysAndValuesDoDoesNotEvaluateBlockWhenMethodHasNoProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test20propertyValueAtReturnsPropertyValueWhenSetted stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test21propertyValueAtReturnsNilWhenPropertyIsNotFound stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test22propertyValueAtReturnsNilWhenMethodHasNoProperties stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test23propertyValueAtIfAbsetReturnsPropertyValueWhenFound stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test24propertyValueAtIfAbsetEvaluatesIfAbsentBlockWhenNotFound stamp: 'HAW 5/6/2020 23:58:58'!
PASSED!

!testRun: #CompiledMethodTest #test25propertyValueAtIfAbsetEvaluatesIfAbsentBlockWhenMethodHasNoProperties stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CompiledMethodTest #test26propertyValueAtPutCreatesPropertiesWithNewOne stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CompiledMethodTest #test27propertyValueAtPutReplacesPropertyIfAlreadyExisted stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CompiledMethodTest #test28propertyValueAtPutAddsNewPropertyIfPropertiesExisted stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CompiledMethodTest #test29selectorReturnsMethodSelectorWhenNoProperties stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CompiledMethodTest #test30selectorReturnsMethodSelectorWhenHasProperties stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CompiledMethodTest #test31SettingSelectorWhenHasNoProperties stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CompiledMethodTest #test32SettingSelectorWhenHasProperties stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #DelayTest #testBounds stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #DelayTest #testMultiProcessWaitOnSameDelay stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #DelayTest #testMultiSchedule stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #MonitorTest #testExample1 stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #MonitorTest #testExample2 stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #MonitorTest #testMonitorNotGainingUnwantedSignalsDuringUnwinding stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #ProcessTest #testAtomicSuspend stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #SemaphoreTest #testCritical stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #SemaphoreTest #testCriticalIfError stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #SemaphoreTest #testSemaAfterCriticalWait stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #SemaphoreTest #testSemaInCriticalWait stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #SemaphoreTest #testWaitAndWaitTimeoutTogether stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #SemaphoreTest #testWaitTimeoutMSecs stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!classDefinition: #BecomeTestExperiment category: #'BaseImageTests-Kernel' stamp: 'HAW 5/6/2020 23:58:59'!
Object subclass: #BecomeTestExperiment
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BaseImageTests-Kernel'!

!testRun: #BecomeTest #testBecome stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!classDefinition: #BecomeTestExperiment category: #'BaseImageTests-Kernel' stamp: 'HAW 5/6/2020 23:58:59'!
Object subclass: #BecomeTestExperiment
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'BaseImageTests-Kernel'!

!testRun: #BecomeTest #testShapeMutation stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #BooleanTest #testAndAndAndAndTrueTable stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #BooleanTest #testAndAndAndTrueTable stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #BooleanTest #testAndAndTrueTable stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #BooleanTest #testIsBoolean stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #BooleanTest #testOrOrOrOrTrueTable stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #BooleanTest #testOrOrOrTrueTable stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #BooleanTest #testOrOrTrueTable stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterSetTest #testIncludesReturnsFalseForCharacterNotIncluded stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterSetTest #testIncludesReturnsFalseForObjectsThatAreNotCharacters stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterSetTest #testIncludesReturnsTrueForCharacterIncluded stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterTest #testCaseConversion stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterTest #testFromUtf8 stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterTest #testIsCharacter stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterTest #testSomeLatinCharsFromUtf8 stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterTest #testSomeLatinCharsToUtf8 stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterTest #testSorting stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterTest #testTestingMethods stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #CharacterTest #testToUtf8 stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNilIfNotNil0Arg stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNilIfNotNil0ArgAsVar stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNilIfNotNil1Arg stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNilIfNotNil1ArgAsVar stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNil0Arg stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNil0ArgAsVar stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNil1Arg stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNil1ArgAsVar stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNilIfNil0Arg stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNilIfNil0ArgAsVar stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNilIfNil1Arg stamp: 'HAW 5/6/2020 23:58:59'!
PASSED!

!testRun: #IfNotNilTests #testIfNotNilIfNil1ArgAsVar stamp: 'HAW 5/6/2020 23:59:00'!
PASSED!

!testRun: #ProcessorTest #testGrabProcessor stamp: 'HAW 5/6/2020 23:59:01'!
PASSED!

!testRun: #ProcessorTest #testGrabProcessorOnlyForNoTimeout stamp: 'HAW 5/6/2020 23:59:03'!
PASSED!

!testRun: #ProcessorTest #testGrabProcessorOnlyForTimeout stamp: 'HAW 5/6/2020 23:59:04'!
PASSED!

!testRun: #ProcessorTest #testValueUnpreemptively stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #SpecialSelectorsTest #testCollectionAtSymbol stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #SpecialSelectorsTest #testNumberAtSymbol stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StrikeFontTest #testBaseAndDerivedFont stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StrikeFontTest #testBaseAndDerivedFontSanity stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testAfterBlanksEndsWith stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testArticle stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testAsUtf8 stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testAsUtf8WithNCRs stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testBase64 stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testCaseConversion stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testEncompassParagraph1 stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testEncompassParagraph2 stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testEncompassParagraph3 stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testEncompassParagraph4 stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testEncompassParagraph5 stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testFirstNoBlankIndex stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testIsString stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testLastNoBlankIndex stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testLineSeparators stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testSorting stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testWithBlanksTrimmed stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testWithoutLeadingBlanks stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testWithoutSeparators stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #StringTest #testWithoutTrailingBlanks stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testAntepenultimateIfAbsentReturnsAntepenultimateIfExists stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testAntepenultimateIfAbsentValuesIfAbsentBlockWhenNoAntepenultimate stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testAntepenultimateReturnsAntepenultimateIfExists stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testAntepenultimateSignalsErrorWhenCollectionIsNotBigEnough stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testCanNotInsertShiftingRightWhenInsertionPointIsBiggerThanSize stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testCanNotInsertShiftingRightWhenInsertionPointIsLessThanOne stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testInsertShiftingRightLoosesLastElementAndKeepsPreviousOnes stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testInsertShiftingRightReplacesElementWhenSizeIsOne stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testInsertShiftingRightReplacesLastElementWhenInsertingAtLastIndex stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testIsArray stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testIsCollection stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testLastIfEmptyReturnsLastWhenExist stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testLastIfEmptyValuesEmptyBlockWhenEmpty stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testLastSignalsErrorWhenEmpty stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testPenultimateIfAbsentReturnsPenultimateIfExists stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testPenultimateIfAbsentValuesIfAbsentBlockWhenNoPenultimate stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testPenultimateReturnsPenultimateIfExists stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ArrayTest #testPenultimateSignalsErrorWhenCollectionIsNotBigEnough stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArray64Test #testIsCollection stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArray64Test #testZeroArrayDividend stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArray64Test #testZeroArrayDivisor stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArray64Test #testZeroDividend stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArray64Test #testZeroDivisor stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArrayTest #testIsType stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArrayTest #testZeroArrayDividend stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArrayTest #testZeroArrayDivisor stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArrayTest #testZeroDividend stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #FloatArrayTest #testZeroDivisor stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testBlockClosuresCanBeUsedAsHandlingCondition stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithExceptionTypeAndExceptionType stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithExceptionTypeAndFilterCondition stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithExceptionTypeAndOrCondition stamp: 'HAW 5/6/2020 23:59:06'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithFilterConditionAndExceptionType stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithFilterConditionAndFilterCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithFilterConditionAndOrCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithOrConditionAndExceptionType stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithOrConditionAndFilterCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateFilterConditionWithOrConditionAndOrCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithExceptionTypeAndExceptionType stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithExceptionTypeAndFilterCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithExceptionTypeAndOrCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithFilterConditionAndExceptionType stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithFilterConditionAndFilterCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithFilterConditionAndOrCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithOrConditionAndExceptionType stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithOrConditionAndFilterCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testCanCreateOrConditionWithOrConditionAndOrCondition stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testExceptionsFollowTheExpectedHierarchy stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testFilterConditionWorksAsExcpetedWhenHandlingException stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionHandlingConditionTest #testOrConditionWorksAsExcpetedWhenHandlingException stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testDoubleOuterPass stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testDoublePassOuter stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testDoubleResume stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testHandlerFromAction stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testNoTimeout stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testNonResumableFallOffTheEndHandler stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testNonResumableOuter stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testNonResumablePass stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testResignalAs stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testResignalAsUnwinds stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testResumableFallOffTheEndHandler stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testResumableOuter stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testResumablePass stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSignalFromHandlerActionTest stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleEnsure stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleEnsureTestWithError stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleEnsureTestWithNotification stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleEnsureTestWithUparrow stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleIsNested stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleOuter stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimplePass stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleResignalAs stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleResume stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleRetry stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleRetryUsing stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testSimpleReturn stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ExceptionTests #testTimeoutWithZeroDuration stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ProcessTerminateBug #testSchedulerTermination stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ProcessTerminateBug #testTerminationDuringUnwind stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ProcessTerminateBug #testUnwindFromActiveProcess stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ProcessTerminateBug #testUnwindFromForeignProcess stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ArrayLiteralTest #testIsArray stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ArrayLiteralTest #testReservedIdentifiers stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ArrayLiteralTest #testSymbols stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test01isAtSuperclassWhenIndexIsInSuperclass stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test02isNotAtSuperclassWhenIndexIsOutsideSuperclass stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test03isAtClassNameWhenIndexIsInClassName stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test04isNotAtClassNameWhenIndexIsOutsideClassName stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test05isAtInstanceVariablesWhenIndexIsInInstanceVariablesString stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test06isNotAtInstanceVariablesWhenIndexIsOutsideInstanceVariablesString stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test07CanAccessSuperclass stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test08isAtCategoryWhenIndexIsInCategoryString stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test09isNotAtCategoryWhenIndexIsOutsideCategoryString stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test10InstanceVariablesIsTheSecondParameter stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClassDefinitionNodeAnalyzerTest #test11CategoryIsTheFifthParameter stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockDoitDecompilation stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockNumbering stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testBlockNumberingForInjectInto stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testDebuggerTempAccess stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testInjectIntoDecompilationsEncoderForV3PlusClosures stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testInjectIntoDecompiledDebugs stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionEM1 stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR1 stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR2 stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionLR3 stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testInlineBlockCollectionSD1 stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testSourceRangeAccessForClosureBytecodeInjectInto stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testSourceRangeAccessForInjectInto stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureCompilerTest #testTempNameAccessForInjectInto stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureSerializationTest #testSample01 stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureSerializationTest #testSample02 stamp: 'HAW 5/6/2020 23:59:07'!
PASSED!

!testRun: #ClosureSerializationTest #testSample03 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureSerializationTest #testSample04 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureSerializationTest #testSample05 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureSerializationTest #testSample06 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureSerializationTest #testSample07 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureSerializationTest #testSample08 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureSerializationTest #testSample09 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureSerializationTest #testSample10 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureSerializationTest #testSample11 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testBlockArgument stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testBlockTemp stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testCopyNonLocalReturn stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testIsTrivialClosure stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testMethodArgument stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testMethodTemp stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testToDoArgument stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testToDoArgumentNotInlined stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testToDoInsideTemp stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testToDoInsideTempNotInlined stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testToDoOutsideTemp stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testToDoOutsideTempNotInlined stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testWhileModificationAfter stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testWhileModificationAfterNotInlined stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testWhileModificationBefore stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testWhileModificationBeforeNotInlined stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testWhileWithTemp stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ClosureTests #testWhileWithTempNotInlined stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ContextCompilationTest #testVariablesAndOffsetsDo stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorAt stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorClass stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorEqEq stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorInstVarAt stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorPerform stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #MirrorPrimitiveTests #testMirrorSize stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ParserTest #testItGeneratesATempDeclarationNodeForEachTempInABlock stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ParserTest #testItGeneratesATempDeclarationNodeForEachTempInAMethod stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ParserTest #testItGeneratesAnEmptyTempsDeclarationNodeForAMethodWithoutTemps stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ParserTest #testRangesAreOkWhenReturningAVariableWithoutSpaceAfterThat stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #PrettyPrintingTest #test1 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #PrettyPrintingTest #test2 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #PrettyPrintingTest #test3 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #PrettyPrintingTest #test4 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #PrettyPrintingTest #test5 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #PrettyPrintingTest #test6 stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #ScannerTest #testLiteralSymbols stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileIOAccessorTest #testDirectoryExists stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testAbsolutePath stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testAtPut stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testConcatenation stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testCopy stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testDefaultDirectory stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testFileContents stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testIsAbsolutePathName stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testIsRelativePathName stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testPathComponents stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testPipe stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testRecursiveDelete stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testRefresh stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testRename stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testRoot stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #FileManTest #testStream stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testAddressRange stamp: 'HAW 5/6/2020 23:59:08'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testChangesFileAddressRange stamp: 'HAW 5/6/2020 23:59:09'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testFileIndexFromSourcePointer stamp: 'HAW 5/6/2020 23:59:09'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testFilePositionFromSourcePointer stamp: 'HAW 5/6/2020 23:59:09'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testSourcePointerFromFileIndexAndPosition stamp: 'HAW 5/6/2020 23:59:09'!
PASSED!

!testRun: #CuisSourceFileArrayTest #testSourcesFileAddressRange stamp: 'HAW 5/6/2020 23:59:09'!
PASSED!

!testRun: #SystemConsistencyTest #testMethodsWithUnboundGlobals stamp: 'HAW 5/6/2020 23:59:09'!
PASSED!

!testRun: #TrieTest #testAllMesssagesLikeDicionary stamp: 'HAW 5/6/2020 23:59:13'!
PASSED!

!testRun: #TrieTest #testAllMesssagesLikeSet stamp: 'HAW 5/6/2020 23:59:17'!
PASSED!

!testRun: #TrieTest #testIncludesReturnsFalseForObjectsThatAreNotString stamp: 'HAW 5/6/2020 23:59:17'!
PASSED!

!testRun: #TrieTest #testIncludesReturnsFalseForStringsNotIncluded stamp: 'HAW 5/6/2020 23:59:17'!
PASSED!

!testRun: #TrieTest #testIncludesReturnsTrueForIncludedStrings stamp: 'HAW 5/6/2020 23:59:17'!
PASSED!

!testRun: #TrieTest #testKeyNotFoundSignalTheRightMessage stamp: 'HAW 5/6/2020 23:59:17'!
PASSED!

!testRun: #TrieTest #testPrefixIteration stamp: 'HAW 5/6/2020 23:59:17'!
PASSED!

!testRun: #TrieTest #testPrefixIteration2 stamp: 'HAW 5/6/2020 23:59:17'!
PASSED!

!testRun: #TrieTest #testRemoveLikeDicionary stamp: 'HAW 5/6/2020 23:59:21'!
PASSED!

!testRun: #TrieTest #testRemoveLikeSet stamp: 'HAW 5/6/2020 23:59:24'!
PASSED!

!testRun: #TrieTest #testSetProtocol stamp: 'HAW 5/6/2020 23:59:24'!
PASSED!

!testRun: #ReferenceStreamTest #testDiskProxy stamp: 'HAW 5/6/2020 23:59:24'!
PASSED!

!testRun: #ReferenceStreamTest #testSortedCollection stamp: 'HAW 5/6/2020 23:59:24'!
PASSED!

!testRun: #ReferenceStreamTest #testWeakDumps stamp: 'HAW 5/6/2020 23:59:24'!
PASSED!

!testRun: #SmartRefStreamTest #testDiskProxy stamp: 'HAW 5/6/2020 23:59:24'!
PASSED!

!testRun: #SmartRefStreamTest #testSortedCollection stamp: 'HAW 5/6/2020 23:59:24'!
PASSED!

!testRun: #SmartRefStreamTest #testWeakDumps stamp: 'HAW 5/6/2020 23:59:24'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbAdd stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbMax stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbMin stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbMinInvert stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbMul stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #BitBltTest #testAllAlphasRgbSub stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #BitBltTest #testAlphaCompositing stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #BitBltTest #testAlphaCompositing2 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test16bpp stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test16bpp61 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test16bpp62 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test16bpp63 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test16bppLE stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test16bppLE61 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test16bppLE62 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test16bppLE63 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test32bpp stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test32bpp63 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #test32bppLE63 stamp: 'HAW 5/6/2020 23:59:25'!
PASSED!

!testRun: #JpegTest #testBA16bpp stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA16bpp61 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA16bpp62 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA16bpp63 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA16bppLE stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA16bppLE61 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA16bppLE62 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA16bppLE63 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA32bpp stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testBA32bpp63 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testGray stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testGray61 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testGray62 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testGray63 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testGrayBA stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testGrayBA61 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testGrayBA62 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #JpegTest #testGrayBA63 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #AffineTransformationTest #testComposition stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #AffineTransformationTest #testDisplayBounds stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #AffineTransformationTest #testFloatInverseTransform stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #AffineTransformationTest #testFloatTransform stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #AffineTransformationTest #testInverseTransformation stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #LayoutMorphTest #testLayout1 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #LayoutMorphTest #testLayout2 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #LayoutMorphTest #testLayout3 stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #MorphicLocationTest #testComposition stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #MorphicTranslationTest #testComposition stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #MorphicTranslationTest #testDisplayBounds stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #MorphicTranslationTest #testInverseTransform stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #MorphicTranslationTest #testInverseTransformation stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #MorphicTranslationTest #testTransform stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #WorldTest #testDamageRecorder stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #WorldTest #testDoOneCycleWorksWithDeferredQueue stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TaskbarTest #testClassSingleton stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TaskbarTest #testHorizontalAlignment stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TaskbarTest #testVerticalAlignment stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TaskbarTest #testWidth stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesByPassesWhenActionChangesConditionByTheSpecifiedAmount stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesFromToPassesWhenActionChangesConditionFromAndToTheSpecifiedValues stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertChangesPassesWhenConditionIsAlteredByAction stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertDoeNotChangePassesWhenConditionIsNotAlteredByAction stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertIncludesFailsWhenElementIsNotIncludedInCollection stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertIncludesShouldNotFailWhenElementIsInCollection stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesForSameNumberDifferentToZero stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesWhenBothAreZero stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToPassesWithSameCalculatedNumber stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToWithPrecisionPassesWhenDifferenceIsNegativeAndLessThanPrecision stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertIsCloseToWithPrecisionPassesWhenDifferenceIsPositiveAndLessThanPrecision stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testAssertIsNotCloseWithPrecisionPassesWhenDifferenceIsBiggerThanPrecision stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testIsTestCase stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testShouldFailErrorsWhenNoErrorIsSignaled stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testShouldFailPassesWhenAnErrorIsSignaled stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testShouldNotTakeMoreThanFailsWhenClosureTakesMoreThanTheLimit stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testShouldNotTakeMoreThanPassesWhenClosureTakesLessThanTheLimit stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoCanExpectException stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoFailsWhenNoExceptionIsSignaled stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoFailsWhenOtherExceptionTypeIsSignaled stamp: 'HAW 5/6/2020 23:59:26'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoPassSignaledExceptionToAssertionsBlock stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithExceptionDoValuesAssertionsBlockWhenExceptionIsRaised stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithMessageTextDoesNotFailWithRightMessageText stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestCaseTest #testShouldRaiseWithMessageTextFailsWithDifferentMessageText stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestCaseTest #testShoulndFailErrorsWhenAnErrorIsSignaled stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestCaseTest #testShoulndFailPassesWhenNoErrorIsSignaled stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test01SuiteForTestCaseClassHasTheSameTestAsCreatingTheSuiteFromTheTestCaseClass stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test02SuiteForNoTestCaseClassUsesTestClassWithSameNameEndingWithTest stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test03SuiteForNoTestCaseClassAndNoTestClassLooksForReferencesInTests stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test04SuiteForTestMethodIncludesOnlyTheMethod stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test05SuiteForNoTestMethodIncludesTestCaseSendingTheCompiledMethodSelector stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test06ForSystemCategoryWithTestCasesIncludesOnlyTestCasesClasses stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test07ForSystemCategoryWithNoTestCasesIncludesTestClassesTests stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test08ForMessageCategoryContainingTestCasesIncludesThoseTestCases stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test09ForMessageCategoryWihoutTestIsEmpty stamp: 'HAW 5/6/2020 23:59:27'!
PASSED!

!testRun: #TestSuiteTest #test10CanNotDebugAsFailureQuickMethods stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #DifferenceFinderTest #testCharacters stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #DifferenceFinderTest #testCharacters2 stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #DifferenceFinderTest #testCode stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #DifferenceFinderTest #testLines stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #DifferenceFinderTest #testWords stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #UnicodeTest #test1ReadBinary stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #UnicodeTest #test2ReadWithOutBinary stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #UnicodeTest #test3ReadUtf8 stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #UnicodeTest #test4BackConversion stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #UnicodeTest #test5ReadWriteUtf8 stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinNonLocalReturnFixReal stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinNonLocalReturnFixSimply stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinTimingBasic stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinTimingNestedInner stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinTimingNestedOuter stamp: 'HAW 5/6/2020 23:59:28'!
PASSED!

!testRun: #TestValueWithinFix #testValueWithinTimingRepeat stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testIsStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testNewLineTabWhenConditionIsFalseDoesNotPutANewLineTabInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testNewLineTabWhenConditionIsTruePutsANewLineTabInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testNewLineWhenConditionIsFalseDoesNotPutANewLineInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testNewLineWhenConditionIsTruePutsANewLineInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testNextPutAllWhenConditionIsFalseDoesNotPutCollectionInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testNextPutAllWhenConditionIsTruePutsCollectionInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testNextPutWhenConditionIsFalseDoesNotPutObjectInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testNextPutWhenConditionIsTruePutsObjectInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testPrintWhenConditionIsFalseDoesNotPrintObjectInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testPrintWhenConditionIsTruePrintsObjectInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testSpaceManyTimesWhenConditionIsFalseDoesNotPutASpaceInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testSpaceManyTimesWhenConditionIsTruePutSpacesInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testSpaceWhenConditionIsFalseDoesNotPutASpaceInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testSpaceWhenConditionIsTruePutsASpaceInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testTabManyTimesWhenConditionIsFalseDoesNotPutATabInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testTabManyTimesWhenConditionIsTruePutsTabsInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testTabWhenConditionIsFalseDoesNotPutATabInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WriteStreamTest #testTabWhenConditionIsTruePutsATabInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testNewLineWhenConditionIsFalseDoesNotPutANewLineInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testNewLineWhenConditionIsTruePutsANewLineInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testNextPutAllWhenConditionIsFalseDoesNotPutCollectionInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testNextPutAllWhenConditionIsTruePutsCollectionInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testNextPutWhenConditionIsFalseDoesNotPutObjectInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testNextPutWhenConditionIsTruePutsObjectInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testPrintWhenConditionIsFalseDoesNotPrintObjectInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testPrintWhenConditionIsTruePrintsObjectInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testSpaceWhenConditionIsFalseDoesNotPutASpaceInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testSpaceWhenConditionIsTruePutsASpaceInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testTabWhenConditionIsFalseDoesNotPutATabInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #TranscriptTest #testTabWhenConditionIsTruePutsATabInStream stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #ColorTest #testIsColor stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #RectangleTest #testIsRectangle stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #ColorFormTest #testIsColorForm stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #GrayFormTest #testIsGrayForm stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #ObjectTest #testErrorSignalsTheRightException stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #ObjectTest #testShouldNotHappenBecauseSignalsTheRightError stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #ObjectTest #testShouldNotHappenSignalsTheRightError stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #WeakMessageSendTest #testIsMessageSend stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #test01DefaultStringVersionIsClassAndSelector stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #test02CanPrefixStringVersion stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassIfAbsentEvaluatesBlockIfClassDoesNotExist stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassIfAbsentReturnsClassIfClassExists stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassReturnNilWhenClassDoesNotExist stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testActualClassReturnsClassIfExists stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentEvaluatesAbsentBlockWhenActualClassIsNil stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentEvaluatesAbsentBlockWhenSelectorIsNotImplemented stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testCompiledMethodIfAbsentReturnsImplementedMethodWhenItExists stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testReferencesParameterAtReturnsFalseWhenInvalid stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testReferencesParameterAtReturnsTrueWhenTheParameterIsReferenced stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentEvaluatesBlockIfClassDoesNotExist stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentEvaluatesBlockIfMethodDoesNotExist stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeIfAbsentReturnsSourceCodeIfExists stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeReturnsSourceCodeIfMethodExist stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeSignalExceptionIfClassDoesNotExist stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #MethodReferenceTest #testSourceCodeSignalExceptionIfMethodDoesNotExist stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #SymbolTest #testIsNotValidBinarySelectorIfItContainsACharacterNotAllowed stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #SymbolTest #testIsNotValidKeywordSelectorIfItContainsSeparators stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #SymbolTest #testIsNotValidUnarySelectorIfItContainsCharactersUsedInBinarySelectors stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #SymbolTest #testIsNotValidUnarySelectorIfItStartsWithALetterAndContainsSeparators stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #SymbolTest #testIsValidBinarySelectorIfItContainsAnAllowedCharacterOrSequenceOfCharacters stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #SymbolTest #testIsValidKeywordSelectorIfItContainsKeywordsWithColons stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #SymbolTest #testIsValidUnarySelectorIfItStartsWithALetterAndDoesNotContainSeparators stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #ActualImplementorsTest #test01WhenIsImplementedOnlyInRootReturnsThatImplementorOnly stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #ActualImplementorsTest #test02ReturnsImplementorsOfSuperclasses stamp: 'HAW 5/6/2020 23:59:29'!
PASSED!

!testRun: #ActualImplementorsTest #test03IfNotImplementedInRootOrSuperclassesDoesNotIncludeSubclassesImplementations stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualImplementorsTest #test04IncludesSubclassesImplementations stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualImplementorsTest #test05DoesNotIncludeImplementorsOfSubclassesNotDefinedInSuperclass stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualImplementorsTest #test06DoesNotIncludeImplementorsOfSiblingsWhenNotDefinedInSuperclass stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualImplementorsTest #test07ReturnsAllSubclassesImplementorsOfTheHighestImplementorClass stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualImplementorsTest #test08highestClassImplementingSelectorReturnsHighgestClass stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualImplementorsTest #test09WhenNoHighestClassImplementingSelectorIfNoneBlockIsEvaluated stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test01SurelyRecognizeTypeSenderWhenSentToInstanceVariable stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test02SurelyRecognizeTypeSenderWhenSentToTemporaryVariable stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test03SurelyRecognizeTypeSenderInACollaboration stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test04RecognizeTypeSendersToInstancesOfSubClasses stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test05RecognizeTypeSendersToLiteralTrue stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test06RecognizeTypeSendersToLiteralFalse stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test07RecognizeTypeSendersToThisContext stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test08RecognizeTypeSendersToSelf stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test09RecognizeTypeSendersToSuper stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test09_01 stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test10RecognizeTypeSendersToSelfOfMessageImplementedInSuperclass stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test11RecognizeTypeSendersToReturnsOfMessageSend stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test12RecognizeTypeSendersOfChainedMessageSends stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test13RecognizeTypeSendersToReturnOfMessageSendNoMatterThePrecedence stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test14RecognizeTypeSendersToClasses stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test15RecognizeTypeSendersToVariablesReferencingClasses stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test16RecognizeTypeSendersToAnyLiteral stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test17CanRecognizePossibleTypeSenders stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test18RecognizeTypeSendersWhenReturnTypeIsSelfType stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test19RecognizeTypeSendersWhenReturnTypeIsClassType stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test20SurelySendWhenReceiverTypeIsSuperclassOfImplementorType stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ActualSendersTest #test21ActualSendersWorksWithCascadeMessageSends stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test01topBlockTempsMapReturnsTheTempsMapOfTheMethod stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test02MethodWithNoParametersNoTemporariesAreInitializedCorrectly stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test03MethodWithOnlyOneArgumentAreInitializedCorrectly stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test04rawTypesOfInvalidVariableNameEvaluatesIfAbsentBlock stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test05MethodWithOnlyOneTempTwoArgumentsAreInitializedCorrectly stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test06MethodWithRemoveVectorVariablesAreInitializedCorrectly stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test07RemoteVectorRawTypesIsNilWhenMethodHasNoVariableInRemoteVector stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test08VariableRawTypesIsNilWhenMethodHasNoVariableButHasInRemoteVector stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #AdditionalMethodStateTest #test09CanGetRawTypesWhenMethodHasNoVariableButHasInRemoteVector stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #ClosureVariablesTest #testOneArrayForTypesIsCreatedWhenAMethodHasNoClosures stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #DynamicTypesTest #test01TypeConvertionForAClassReturnsSameClass stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #DynamicTypesTest #test02TypeConvertionForSelfTypeReturnsReceiversType stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #DynamicTypesTest #test03TypeConvertionForClassTypeReturnsReceiversTypeClass stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #DynamicTypesTest #test04ClassMessageSendChainsClassType stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #DynamicTypesTest #test05TypeConvertionForInstanceTypeReturnsMetaclassSoleInstance stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #DynamicTypesTest #test06newTypeIsMetaclassSoleInstance stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #DynamicTypesTest #test07InstanceTypeReturnsClassWhenIsKindOfOfBehaviorButNotMeta stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #DynamicTypesTest #test08InstanceTypeErrorsWhenUsedWithNoBehavior stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test01TypeCollectionOfInstanceVariableDefinedInLeafClassDoesNotTraverseHierarchy stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test02TypeCollectionIncludesSubclasses stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test03TypeCollectionDoesNotIncludeSuperclassesAndSiblings stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test05TypeCollectionIncludesAllSubclasses stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test06IsNotMegamorphicIfTypesSizeIsLessToTheMaxOfWithAllSubclassesRawTypesSize stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test07IsMegamorphicIfTypesSizeIsEqualToTheMaxOfWithAllSubclassesRawTypesSize stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test08IsNotMegamorphicIfDoesNotFillRawTypesForLocalTypeInfo stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test09IsMegamorphicIfFillsRawTypesOfDefiningClassForLocalTypeInfo stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test10IsMegamorphicIfFillsRawTypesOfNotDefiningClassForLocalTypeInfo stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test11IsTypesEmptyOfNonLocalTypeInfoTakesCareOfHierarchy stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test12IsTypesEmptyForLocalTypeInfoOnlyCheckOnLocalRawTypes stamp: 'HAW 5/6/2020 23:59:30'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 5/6/2020 23:59:30'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 5/6/2020 23:59:31'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #InstanceVariableTypeInfoTest #test13RemovingAClassRemovesItAndItsClassFromInstanceVariableRawTypes stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariableTypeInfoTest #test14InstVarAtPutKeepTypeInfo stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test01InstanceVariablesTypesIsInitializedWithAnArrayOfClassInstSize stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test02InitializeInstanceVariablesTypesWithAllInstancesStoreCurrentClassInstancesTypes stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test03TypesOfDifferentInstVarsAreStoredCorrectly stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test04MoreThanOneTypeAreStoredCorrectlyInDifferentInstVars stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test05TypesAreStoredUpToInstVarTypesSize stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test06NoTypesAreStoredWhenInstVarTypesIsNil stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test07CommonSupertypeOfReturnsSupertypeOfStoredTypes stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test08CommonSupertypeIfNoTypesEvaluatesAlternativeBlockWhenNoTypeHasBeenStore stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #InstanceVariablesTypesTest #test09EvaluatesIfAbsentBlockWhenAskTypeInfoForNonExistingInstVar stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test01KeepTypesOfLocalTemporariesI stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test02KeepTypesOfRemoteTemporaries stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test03KeepTypesOfParameters stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test04KeepReturnTopTypes stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test05KeepReturnConstantTypes stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test06KeepReturnReceiverTypes stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test07KeepReturnFromClosureTypes stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test08KeepReturnTypeWhenUnwind stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test09BlockReturnDoesNotAffectMethodReturn stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test10KeepTypesOfParametersWhenSendingValueWithArguments stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #LiveTypingCodeSimulationTest #test11BlockWithParametersDoNotAffectMethodParameters stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #MethodNotAnnotatingTypesTest #test01CanSignalItWithAMethod stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!testRun: #MethodNotAnnotatingTypesTest #test02IsResumable stamp: 'HAW 5/6/2020 23:59:31'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 5/6/2020 23:59:31'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 5/6/2020 23:59:32'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #MethodVariableTypeInfoTest #test01RemovingAClassRemovesItFromMethodVariableRawTypesForParameter stamp: 'HAW 5/6/2020 23:59:32'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 5/6/2020 23:59:32'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 5/6/2020 23:59:32'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #MethodVariableTypeInfoTest #test02RemovingAClassRemovesItsClassFromMethodVariableRawTypesForParameter stamp: 'HAW 5/6/2020 23:59:32'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 5/6/2020 23:59:33'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 5/6/2020 23:59:33'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #MethodVariableTypeInfoTest #test03RemovingAClassRemovesItFromMethodVariablesRawTypes stamp: 'HAW 5/6/2020 23:59:33'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 5/6/2020 23:59:33'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 5/6/2020 23:59:33'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #MethodVariableTypeInfoTest #test04RemovingAClassRemovesItFromMethodVariableRemoteVectorRawTypes stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test01ActualSendersIsEmpty stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test02CategoryIsNil stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test03CompiledMethodSignalsError stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test04CompiledMethodIfAbsentEvaluatesIfAbsentBlock stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test05doesOnlySurelySendReturnsFalse stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test06dynamicTypingAutoCompleterDocumentationReturnsEmptyText stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test07IsNotValid stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test08liveTypingAutoCompleterDocumentationReturnsEmptyText stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test09rangesOASentSelectorWhenSendToReceiverTypesIsEmpty stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test10FailsWhenAsItsSourceCode stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #NotImplementedMethodTest #test11StringVersionStartsWithNotImplemented stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #PossibleSenderTest #test01StringVersionBeginsWithPossible stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test01QuickReturnSelfMethodsReturnSelfTypeAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test02QuickReturnTrueMethodsReturnTrueReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test03QuickReturnFalseMethodsReturnFalseAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test04QuickReturnNilMethodsReturnUndefinedObjectAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test05QuickReturnMinusOneMethodsReturnSmallIntegerAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test06QuickReturnZeroMethodsReturnSmallIntegerAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test07QuickReturnOneMethodsReturnSmallIntegerAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test08QuickReturnTwoMethodsReturnSmallIntegerAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test09QuickReturnOfFirstInstanceVariableMethodsReturnInstanceVariableTypesAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test10QuickReturnOfSecondInstanceVariableMethodsReturnInstanceVariableTypesAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test11classMethodReturnsClassTypeAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test12newMethodReturnsInstanceTypeAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!testRun: #ReturnTypeInfoTest #test13yourselfMethodReturnsSelfTypeAsReturnType stamp: 'HAW 5/6/2020 23:59:34'!
PASSED!

!classDefinition: #LiveTypingClassToBeRemoved category: #'__LiveTyping-TestData__' stamp: 'HAW 5/6/2020 23:59:34'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!classRemoval: #LiveTypingClassToBeRemoved stamp: 'HAW 5/6/2020 23:59:34'!
Object subclass: #LiveTypingClassToBeRemoved
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__LiveTyping-TestData__'!

!testRun: #ReturnTypeInfoTest #test14RemovingAClassRemovesItAndItsClassFromMethodReturnType stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #ReturnTypeInfoTest #test15ReturnTypesOfAbstractMethodsIncludesSubclassesImplementationsTypes stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #ReturnTypeInfoTest #test16ReturnTypesOfAbstractMethodWorksWhenNotImplementedInAllSubclasses stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test01IsEmptyWhenAllTypesAreNil stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test02StoresAddedTypes stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test03StoresSameTypeOnce stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test04StoresMoreThanOneTypeCorrectly stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test05DoesNotStoreTypesWhenContainerIsNil stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test06CommonSupertypeOfSiblingsClassesReturnsRightSuperclass stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test07CommonSupertypeOnSameHierarchyIsMostTopClass stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test08CommonSupertypeOnSameHierarchyIsNotAffectedByAddingOrder stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test09ObjectIsCommonSupertypeWhenClassesAreNotSiblings stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test10ProtoObjectIsCommonSupertypeWhenThereAreNoTypesStored stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test11ProtoObjectIsCommonSupertypeWhenCointainerIsNil stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test12CommonSupertypeIfNoTypesReturnsAlternativeClosureValueWhenIsEmpty stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test13CommonSupertypeIfNoTypesReturnsAlternativeClosureValueWhenContainerIsNil stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test14UndefinedObjectIsNotConsideredWhenLookingForCommonSupertype stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test15StoresTypesIsTrueWhenContainerIsNotNil stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test16StoresTypesIsFalseWhenContainerIsNil stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test17IsMegamorphicWhenContainerIsFull stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test18IsNotMegamorphicWhenContainerIsNotFull stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test19CommonSelectorsPreviousToSameOnlyTypeIsEmpty stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test20CommonSelectorsPreviousToSuperclassOfOnlyAddedTypeAreAddedTypeSelectors stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test21CommonSelectorsPreviousToSuperclassSuperclassOfOnlyAddedTypeAreAddedTypeUpToSuperclassSelectors stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test22CommonSelectorsPreviousToInvalidSuperclassRaisesError stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test23CommonSelectorsPreviousToSuperclassOfSiblingTypesAreSiblingsCommonSelectors stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test24CommonSelectorsPreviousToOnSameHierarchyReturnsCommonSuperclassesSelectors stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test25CommonSelectorsPreviousToAddedSSupertypeOnSameHierarchyIsEmpty stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test26CommonSelectorsPreviousToWhenNotStoringTypesIsEmpty stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test27CommonSelectorsPreviousToIfInvalidSupertypeEvaluatesInvalidBlock stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test28CommonSelectorsPreviousToIfInvalidSupertypeWithManyTypesEvaluatesInvalidBlock stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test29CommonSelectosGoesUpToIncludingProtoObject stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test30CommonSupertypeIfGenericEvaluatesIfGenericBlockForObject stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test31CommonSupertypeIfGenericEvaluatesIfGenericBlockForProtoObject stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test32WithCommonSupertypeDoIfGenericEvaluatesDoBlockWhenNoGenericSupertype stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test33WithCommonSupertypeDoIfGenericEvaluatesGenericBlockWhenGenericSupertype stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test34AddingATypeWhenNoMoreSpaceEvaluatesIsFullBlock stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test35TypeIsNotMoreInTypesWhenRemoved stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test36RemovingTypeWhenTypesIsEmptyEvaluatesIfAbsent stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test37RemovingNotIncludedTypeEvaluatesIfAbsent stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test38RemovingLastAddedTypeWorksAsExpected stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test39RemoveTypeSignalExceptionWhenTypeNotFound stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #VariableTypeInfoTest #test40TypesDoEvaluatesBlockOnEachType stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #AutocompleteExample #testAutoCompleteExample stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #AutocompleteExample #testExample stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #AutocompleteExample #testExampleMessagesOfDifferentSubclasses stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #AutocompleteExample #testExampleWithNoCommonSupertype stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #CustomerTest #test01 stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #CustomerTest #test02 stamp: 'HAW 5/6/2020 23:59:35'!
PASSED!

!testRun: #CustomerTest #test03 stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test01ManyMethodsCanBeTypeChecked stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test02ClassesCanBeTypeChecked stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test03MethodsWithoutTypeAnnotationsLogsAProblem stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test04ProblemsDetectIfNone stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test05ProblemsDetectIfNoneValuesIfNoneWhenNoProblemFound stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test06WarningsCollectsAllTypeCheckersWarnings stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test07ErrorsDetectIfNone stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test08ErrorsDetectIfNoneValuesIfNoneWhenNoProblemFound stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test09ProblemsCollectsTypeCheckersProblems stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test10WarningsDetectIfNone stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test11WarningsDetectIfNoneValuesIfNoneWhenNoProblemFound stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test12HasErrorsReturnsTrueIfATypeCheckerHasErrors stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test13HasErrorsReturnsFalseWhenNoErrorFound stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test14ErrorsCollectsAllTypeCheckersErrors stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #ManyMethodsTypeCheckerTest #test15HasErrorsOrWarnings stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test01MethodNotAnnotatingTypesGeneratesWarning stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test02EmptyMethodDoesNotGenerateWarningsOrErrors stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test03MessageSendNotUnderstoodByReceiverGeneratesError stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test04MessageUnderstooodByReceiverDoesNotGenerateErrors stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test05ErrorsWhenNoTypeImplementMessageSent stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test06DifferentErrorsAreReported stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test07ReceiverWithoutTypesGeneratesWarning stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test08GivesAWarningWhenReceiversTypeHasAnError stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test09WhenMethodHasNoReturnTypesAProblemIsAdded stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test10PrimitiveMethodsAreNotTypedChecked stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test11IfNotNilFiltersUndefinedObjectType stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test12IfNotNilDoesNotFiltersUndefinedObjectTypeForNotCheckedObject stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test13ComparingForNilWithIfTrueIfFalse stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test14ComparingForNilWithIfTrueIfFalseWhenNilFiltersOtherTypes stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test15ComparingForNilWithIfTrueIfFalseWhenNilKeepsUndefinedObject stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test16NestedIfNotNilFiltersUndefinedObjectType stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test17NestedIfNotNilDoesNotFilterUndefinedObjectWhenOutsideRightIfNotNil stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test18IfNilAssumesUndefinedObjectAsType stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test19NestedIfNilAssumesUndefinedObjectAsType stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test20NestedIfNilDoesUseUndefinedObjectWhenOutsideRightIfNil stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test21IfNilIfNotNilWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test22IfNotNilIfNilWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test23EqualsNilIfTrueIfFalseWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test24EqualsNilIfTrueWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test25IdenticalToNilIfTrueWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test26EqualsNilIfFalseWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test27IdenticalToNilIfFalseWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test28EqualsToNilIfFalseIfTrueWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test29IdenticalToNilIfFalseIfTrueWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test30nilEqualsToIfTrueIfFalseOrIfFalseIfTrueWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test31nilEqualsToIfTrueOrIfFalseWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test32nilIdenticalToWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test32_01_nilNotIdenticalOrEqualToWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test33NotEqualToNilWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test34NotIdenticalToNilWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test35isNilWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test36notNilWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test37TypeCastWithEqualOrIdenticalToWorksAsExpected stamp: 'HAW 5/6/2020 23:59:36'!
PASSED!

!testRun: #MethodTypeCheckerTest #test38TypeCastWithNotEqualOrNotIdenticalToWorksAsExpected stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test39TypeCastToUsingEqualOrIdenticalToWorksAsExpected stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test40TypeCastToUsingNotEqualOrNotIdenticalToWorksAsExpected stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test41TypeCastUsingIsKindOfToWorksAsExpected stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test42TypeCheckMessageWorksAsExpected stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test43TypeCheckMessageSentToSelfWorksAsExpected stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test44TypeCheckMessageWorksAsExpected stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test46TypeCastRejectsCanBeNested stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test47IsKindOfCastingAllowsSubtypes stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test48IfNotNilWithBlockArgumentFiltersUndefinedObject stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test49TypeCastWithBlockInRejectBlockKeepsCastingStrategy stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test50TypeCastWithoutBlockShouldFail stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test51NotNilAndFiltersUndefinedObject stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test52CascasdeMessageSendAreTypeChecked stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test53TypeCastWorksOnCascadeMessageSends stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test54IfNilWithReturnRejectsNilInNextColaborations stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test55TypeCheckMessageWithSubclassesReturningFalse stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test56Float_store_on_hasNoTypeErrors stamp: 'HAW 5/6/2020 23:59:37'!
FAILURE!

!testRun: #MethodTypeCheckerTest #test57TypeCheckMessageWithFalse_True_False_InSubclassesCastCorrectly stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test58TypeCheckMessageWithReturnOnIfTrueRejectsTypeInNextColaborations stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test59TypeCheckMessageWithReturnOnIfFalseRejectsTypeInNextColaborations stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test60TypeCastWithReturnOnIfTrueRejectsTypeInNextColaborations stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test61TypeCastWithReturnOnIfFalseRejectsTypeInNextColaborations stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test62ifNotNilifNotNilWithMoreThanAMessageSendAndNilAsValue stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test63orCheck stamp: 'HAW 5/6/2020 23:59:37'!
FAILURE!

!testRun: #MethodTypeCheckerTest #test64notNilAndIfTrue stamp: 'HAW 5/6/2020 23:59:37'!
FAILURE!

!testRun: #MethodTypeCheckerTest #test65isNilOr stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test66DoesNotFailsWithMessageSendAsConditionOfIfTrueWithCascadeSend stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test66orWithoutMessageAsReceiverShouldNotError stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test67andWithoutMessageAsReceiverShouldNotError stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #MethodTypeCheckerTest #test68DoesNotFailsWithIfTrueSendInCascadeMode stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #DenotativeObjectRenameMethodApplierTest #test01ScopeOptionsAreTheSame stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #DenotativeObjectTest #test01IsDenotativeObjectNamedReturnsTrueForADenotativeObject stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #DenotativeObjectTest #test02IsDenotativeObjectNamedReturnsFalseForANoDenotativeObject stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #TestChangesTest #testDataClassName stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #test32bitConversion stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #test32bitConversion2 stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #test32bitGradualUnderflow stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #test32bitInfinities stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #test32bitNaN stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #test32bitRoundingMode stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #test32bitZeros stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #testAdd stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #testArCosh stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #testArSinh stamp: 'HAW 5/6/2020 23:59:37'!
PASSED!

!testRun: #FloatTest #testArTanh stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testArcTan stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testArcTanNonPrimitive stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testAsTrueFraction stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testCeiling stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testCharacterization stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testComparisonWhenPrimitiveFails stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testComparisonWithFraction stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testCopy stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testCopySign stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testCos stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testCosh stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testDegreeCos stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testDegreeCosForExceptionalValues stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testDegreeSin stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testDegreeSinForExceptionalValues stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testDivide stamp: 'HAW 5/6/2020 23:59:38'!
ERROR!

!testRun: #FloatTest #testDivide stamp: 'HAW 5/6/2020 23:59:38'!
ERROR!

!testRun: #FloatTest #testDivide stamp: 'HAW 5/6/2020 23:59:38'!
ERROR!

!testRun: #FloatTest #testDivide stamp: 'HAW 5/6/2020 23:59:38'!
ERROR!

!testRun: #FloatTest #testDivide stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testE stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testEqualityComparison stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testEquals stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testExactAsString stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testExactAsString2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testExactStoreString stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testExactStoreString2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testExp stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testExpNonPrimitive stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFloatRounded stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFloatTruncated stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFloatsAwayFrom stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFloatsAwayFromWithPowersOfTwo stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFloor stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFloorLog2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFractionAsFloat stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFractionAsFloat2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFractionAsFloatRoundsHalfToEven stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFractionAsFloatWithUnderflow stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testFromStringDoesNotUnderflow stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithBigNegativeSmallInteger stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithBigSmallInteger stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithFraction stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithLargeNegativeInteger stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithLargePositiveInteger stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithSmallishLargeNegativeInteger stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithSmallishLargeNegativeInteger2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithSmallishLargePositiveInteger stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHashWithSmallishLargePositiveInteger2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testHugeValues stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testInfinity1 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testInfinity2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testIntegerAsFloat stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testIsDenormalized stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testIsZero stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testLiteralEqualityOfNan stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testLiteralEqualityOfZeroAndNegativeZero stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testLn stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testLnForExceptionalValues stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testLnNonPrimitive stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testMaxExactInteger stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testMinimalAsString stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testMixedTypeArithmetic stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testMixedTypeComparison stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testMultiply stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNaN1 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNaN2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNaN3 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNaN4 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNaNCompare stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNaNPropagationBinary stamp: 'HAW 5/6/2020 23:59:38'!
FAILURE!

!testRun: #FloatTest #testNaNPropagationUnary stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNaNisLiteral stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNextAwayFromZero stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNextTowardsZero stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testNoIntegerHash stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testPartBits stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testPi stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testPositiveAndNegativeZero stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testPredecessorSuccessor stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testPredecessorSuccessor2 stamp: 'HAW 5/6/2020 23:59:38'!
PASSED!

!testRun: #FloatTest #testPrimAdd stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimArcTan stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimDivideBy stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimEqual stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimExpAndLn stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimExponent stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimGreater stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimGreaterEqual stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimLess stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimLessEqual stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimMultiplyBy stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimNotEqual stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimSin stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimSmallIntegerAsFloat stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimSqrt stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimSubtract stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimTimesTwoPower stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrimTruncated stamp: 'HAW 5/6/2020 23:59:39'!
FAILURE!

!testRun: #FloatTest #testPrintShowingDecimalPlaces4 stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testPrintStringStress stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testReadFromManyDigits stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testReciprocal stamp: 'HAW 5/6/2020 23:59:39'!
ERROR!

!testRun: #FloatTest #testReciprocal stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testRoundHalfToEven stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testRounded stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testSetOfFloat stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testSignificandAndExponent stamp: 'HAW 5/6/2020 23:59:39'!
PASSED!

!testRun: #FloatTest #testSignificandAsInteger stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testSin stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testSinNonPrimitive stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testSinh stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testSomeNines stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testSqrt stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testSqrtNonPrimitive stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testStoreBase16 stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testStoreOn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testStringAsFloatRoundsHalfToEven stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testStringAsFloatRoundsHalfToEven2 stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testStringAsNumber stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testStringAsNumber2 stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testSubtract stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testTanh stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testTimesTwoPowerGradualUnderflow stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testTimesTwoPowerOverflow stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testTimesTwoPowerUnderflow stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testTruncated stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testUlp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testZeroAbs stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroDividedByZero stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 5/6/2020 23:59:40'!
ERROR!

!testRun: #FloatTest #testZeroRaisedToNegativePower stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testZeroSign stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FloatTest #testZeroSignificandAsInteger stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testCeiling stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testDegreeCos2 stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testDegreeSin2 stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testExactRaisedTo stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testExactSqrt stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testFloor stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testFloorLog stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testFloorLogExactness stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testFractionPrinting stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testHash stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testInexactRaisedTo stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testInexactSqrt stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testIntegerWholeDivision stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testIntegerWholeMultiplication stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testIsType stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testLn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testLog stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testNthRoot stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testReciprocal stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testRoundHalfToEven stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testRounded stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testThatFractionDenominatorIsPositive stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testThatFractionIsReduced stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testTruncated stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testWholeDifference stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testWholeDivision stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testWholeMultiplication stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #FractionTest #testWholeSum stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerDigitLogicTest #testAndSingleBitWithMinusOne stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerDigitLogicTest #testLargeShift stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerDigitLogicTest #testMixedSignDigitLogic stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerDigitLogicTest #testNBitAndNNegatedEqualsN stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerDigitLogicTest #testNNegatedEqualsNComplementedPlusOne stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerDigitLogicTest #testShiftMinusOne1LeftThenRight stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerDigitLogicTest #testShiftOneLeftThenRight stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #test01readFromWithEmptyStringRaisesAnError stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #test02readFromWithInvalidStringRaisesAnError stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnLn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnLp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnSn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLnSp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpLn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpLp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpSn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashLpSp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnLn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnLp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnSn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSnSp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpLn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpLp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpSn stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBackslashBackslashSpSp stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBenchFib stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBigReceiverInexactNthRoot stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBigReceiverInexactSqrt stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBitAt stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBitLogic stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testBitReversal stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testCrossSumBase stamp: 'HAW 5/6/2020 23:59:40'!
PASSED!

!testRun: #IntegerTest #testDifferentBases stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivLnLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivLnLp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivLnSn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivLnSp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivLpLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivLpLp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivLpSn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivLpSp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivSnLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivSnLp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivSnSn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivSnSp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivSpLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivSpLp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivSpSn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testDivSpSp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testEven stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testExactRaisedTo stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testExactSqrt stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testFloorLog stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testFloorLogExactness stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testGCDAndLCM stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testGCDExample stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testGCDProperties stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testHighBit stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testHighBitOfMagnitude stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testIntegerDivision stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testIntegerPadding stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testIntegerReadFrom stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testIsInteger stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testIsPowerOfTwo stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testIsPowerOfTwoM6873 stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testIsPrime stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testIsProbablyPrime stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testLCMExample stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testLCMProperties stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testLargePrimesUpTo stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testLog stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testLowBit stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModLnLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModLnLp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModLnSn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModLnSp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModLpLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModLpLp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModLpSn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModLpSp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModSnLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModSnLp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModSnSn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModSnSp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModSpLn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModSpLp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModSpSn stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testModSpSp stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testMontgomeryMultiplication stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testNegativeIntegerPrinting stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testNew stamp: 'HAW 5/6/2020 23:59:41'!
ERROR!

!testRun: #IntegerTest #testNew stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testNthRoot stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testNthRootErrorConditions stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testNthRootExactness stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testNthRootExactnessForHugeValue stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testNthRootImmuneToDoubleRounding stamp: 'HAW 5/6/2020 23:59:41'!
PASSED!

!testRun: #IntegerTest #testNthRootTruncated stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testNumberOfDigits stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testPositiveIntegerPrinting stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testPrimesUpTo stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testPrintOnBaseShowRadix stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testPrintStringBase stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoLnLn stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoLnLp stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoLnSn stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoLnSp stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoLpLn stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoLpLp stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoLpSn stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoLpSp stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoRem stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoSnLn stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoSnLp stamp: 'HAW 5/6/2020 23:59:42'!
PASSED!

!testRun: #IntegerTest #testQuoSnSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testQuoSnSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testQuoSpLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testQuoSpLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testQuoSpSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testQuoSpSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRaisedToModulo stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRange stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testReadFrom stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemLnLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemLnLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemLnSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemLnSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemLpLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemLpLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemLpSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemLpSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemSnLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemSnLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemSnSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemSnSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemSpLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemSpLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemSpSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRemSpSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testRomanPrinting stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLnSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashLpSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSnSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpLn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpLp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpSn stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSlashSlashSpSp stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testSqrtFloor stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testStringAsNumber stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testTwoComplementBitLogicWithCarry stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #IntegerTest #testTwoComplementRightShift stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testCompactClassIndex stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testDenormalizedPrintString stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testDigitAt stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testDigitAtPut stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testDigitLength stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testEmptyTemplate stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testMinimumNegativeIntegerArithmetic stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargeNegativeIntegerTest #testReplaceFromToWithStartingAt stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testBitShift stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testCompactClassIndex stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testDenormalizedPrintString stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testDigitAt stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testDigitAtPut stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testDigitLength stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testEmptyTemplate stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testLargeSqrtFloor stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testMultDicAddSub stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testNormalize stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #LargePositiveIntegerTest #testReplaceFromToWithStartingAt stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test01readFromWhenTheInitilValueIsNaNTheResultIsNaN stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test02readFromWhenTheInitilValueIsInfinityTheResultIsInfinity stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test03readFromWhenTheInitilValueIsMinusInfinityTheResultIsNegativeInfinity stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test04readFromWhenTheInitilValueIsANegativeNumberTheResultIsThatNumberNegated stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test05readFromWhenTheInitilValueIsJustANumberTheResultIsThatNumber stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test06readFromWhenTheInitialValueIncludesRadixItIsConvertedWithTheIndicatedRadixBase stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test07readFromWhenTheInitialValueIncludesAnInvalidRadixItRaisesAnError stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test08readFromWhenTheInitialValueIncludesANegativeRadixItConvertsTheNumberWithTheIndicatedRadixBase stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #test09readFromWhenTheInitialValueIsEmptyItRaisesAnError stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testFractionPart stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testHash1 stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testHash2 stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testHash3 stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testIntegerPart stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testOne stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testPrintShowingDecimalPlaces stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testPrintShowingDecimalPlaces2 stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testPrintShowingDecimalPlaces3 stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testRaisedTo stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testRaisedToInteger stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testRaisedToIntegerWithFloats stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testReadFrom stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testReciprocal stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #NumberTest #testZeroDivideHandler stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testBasicNew stamp: 'HAW 5/6/2020 23:59:43'!
ERROR!

!testRun: #SmallIntegerTest #testBasicNew stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testDivide stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testEven stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testMaxVal stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testMinVal stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testNew stamp: 'HAW 5/6/2020 23:59:43'!
ERROR!

!testRun: #SmallIntegerTest #testNew stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testOdd stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testPrintPaddedWith stamp: 'HAW 5/6/2020 23:59:43'!
PASSED!

!testRun: #SmallIntegerTest #testPrintString stamp: 'HAW 5/6/2020 23:59:44'!
PASSED!

!testRun: #SmallIntegerTest #testZeroRaisedToNegativePower stamp: 'HAW 5/6/2020 23:59:44'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNext stamp: 'HAW 5/6/2020 23:59:44'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNextBits stamp: 'HAW 5/6/2020 23:59:44'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNextBitsInvalid stamp: 'HAW 5/6/2020 23:59:44'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNextInteger stamp: 'HAW 5/6/2020 23:59:44'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testNextIntegerInvalid stamp: 'HAW 5/6/2020 23:59:44'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testRandomLargeInteger1 stamp: 'HAW 5/6/2020 23:59:44'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testRandomLargeInteger2 stamp: 'HAW 5/6/2020 23:59:45'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testSeedAndRepeatability stamp: 'HAW 5/6/2020 23:59:45'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testSetAtRandom stamp: 'HAW 5/6/2020 23:59:46'!
PASSED!

!testRun: #LaggedFibonacciRandomTest #testSimpleBuckets stamp: 'HAW 5/6/2020 23:59:46'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNext stamp: 'HAW 5/6/2020 23:59:46'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNextBits stamp: 'HAW 5/6/2020 23:59:46'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNextBitsInvalid stamp: 'HAW 5/6/2020 23:59:46'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNextInteger stamp: 'HAW 5/6/2020 23:59:46'!
PASSED!

!testRun: #ParkMiller88RandomTest #testNextIntegerInvalid stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testParkMillerCorrectness stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testParkMillerInitialValues stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testParkMillerSeedCornerCases stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testParkMillerSeedRange stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testRandomLargeInteger1 stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testRandomLargeInteger2 stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testSeedAndRepeatability stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testSetAtRandom stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller88RandomTest #testSimpleBuckets stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNext stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNextBits stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNextBitsInvalid stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNextInteger stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller93RandomTest #testNextIntegerInvalid stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller93RandomTest #testRandomLargeInteger1 stamp: 'HAW 5/6/2020 23:59:47'!
PASSED!

!testRun: #ParkMiller93RandomTest #testRandomLargeInteger2 stamp: 'HAW 5/6/2020 23:59:48'!
PASSED!

!testRun: #ParkMiller93RandomTest #testSeedAndRepeatability stamp: 'HAW 5/6/2020 23:59:48'!
PASSED!

!testRun: #ParkMiller93RandomTest #testSetAtRandom stamp: 'HAW 5/6/2020 23:59:48'!
PASSED!

!testRun: #ParkMiller93RandomTest #testSimpleBuckets stamp: 'HAW 5/6/2020 23:59:48'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesAAtoAM stamp: 'HAW 5/6/2020 23:59:49'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesANtoAZ stamp: 'HAW 5/6/2020 23:59:49'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesBAtoBM stamp: 'HAW 5/6/2020 23:59:50'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesBNtoBZ stamp: 'HAW 5/6/2020 23:59:51'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesCAtoCM stamp: 'HAW 5/6/2020 23:59:51'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesCNtoCZ stamp: 'HAW 5/6/2020 23:59:52'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesDAtoDM stamp: 'HAW 5/6/2020 23:59:53'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesDNtoDZ stamp: 'HAW 5/6/2020 23:59:53'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesEAtoEM stamp: 'HAW 5/6/2020 23:59:53'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesENtoEZ stamp: 'HAW 5/6/2020 23:59:54'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesFAtoFM stamp: 'HAW 5/6/2020 23:59:55'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesFNtoFZ stamp: 'HAW 5/6/2020 23:59:56'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesGAtoGM stamp: 'HAW 5/6/2020 23:59:56'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesGNtoGZ stamp: 'HAW 5/6/2020 23:59:57'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesHAtoHM stamp: 'HAW 5/6/2020 23:59:57'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesHNtoHZ stamp: 'HAW 5/6/2020 23:59:57'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesIAtoIM stamp: 'HAW 5/6/2020 23:59:57'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesINtoIZ stamp: 'HAW 5/6/2020 23:59:58'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesJAtoJM stamp: 'HAW 5/6/2020 23:59:58'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesJNtoJZ stamp: 'HAW 5/6/2020 23:59:58'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesKAtoKM stamp: 'HAW 5/6/2020 23:59:58'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesKNtoKZ stamp: 'HAW 5/6/2020 23:59:58'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesLAtoLM stamp: 'HAW 5/6/2020 23:59:58'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesLNtoLZ stamp: 'HAW 5/6/2020 23:59:58'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesMAtoMM stamp: 'HAW 5/6/2020 23:59:58'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesMNtoMZ stamp: 'HAW 5/6/2020 23:59:59'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesNAtoNM stamp: 'HAW 5/7/2020 00:00:00'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesNNtoNZ stamp: 'HAW 5/7/2020 00:00:00'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesOAtoOM stamp: 'HAW 5/7/2020 00:00:00'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesONtoOZ stamp: 'HAW 5/7/2020 00:00:01'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesPAtoPM stamp: 'HAW 5/7/2020 00:00:02'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesPNtoPZ stamp: 'HAW 5/7/2020 00:00:02'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesQAtoQM stamp: 'HAW 5/7/2020 00:00:02'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesQNtoQZ stamp: 'HAW 5/7/2020 00:00:02'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesRAtoRM stamp: 'HAW 5/7/2020 00:00:03'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesRNtoRZ stamp: 'HAW 5/7/2020 00:00:03'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesSAtoSM stamp: 'HAW 5/7/2020 00:00:04'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesSNtoSZ stamp: 'HAW 5/7/2020 00:00:04'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesTAtoTM stamp: 'HAW 5/7/2020 00:00:04'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesTNtoTZ stamp: 'HAW 5/7/2020 00:00:05'!
FAILURE!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesTNtoTZ stamp: 'HAW 5/7/2020 00:00:05'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesUAtoUM stamp: 'HAW 5/7/2020 00:00:05'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesUNtoUZ stamp: 'HAW 5/7/2020 00:00:05'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesVAtoVM stamp: 'HAW 5/7/2020 00:00:05'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesVNtoVZ stamp: 'HAW 5/7/2020 00:00:05'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesWAtoWM stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesWNtoWZ stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesXAtoXM stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesXNtoXZ stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesYAtoYM stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesYNtoYZ stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesZAtoZM stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testDecompilerInClassesZNtoZZ stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #DecompilerTestFailuresCollector #testRemoteTemp stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test000_AutocompletesMessagesFor_GlobalVariables_WithSelectorsFromTheirClasses stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test001_AutocompletesMessagesFor_Self_WithSelectorsFromTheBrowsedClass stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test002_AutocompletesMessagesFor_Super_WithSelectorsFromTheBrowsedClass stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test003_AutocompletesMessagesFor_Super_WithSelectorsForUnknownClassesWhenTheBrowsedClassDoesNotHaveASuperclass stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test004_AutocompletesMessagesFor_True_WithSelectorsFromTrue stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test005_AutocompletesMessagesFor_False_WithSelectorsFromFalse stamp: 'HAW 5/7/2020 00:00:06'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test006_AutocompletesMessagesFor_Nil_WithSelectorsFromUndefinedObject stamp: 'HAW 5/7/2020 00:00:07'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test007_AutocompletesMessagesFor_Characters_WithSelectorsFromCharacter stamp: 'HAW 5/7/2020 00:00:07'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test008_AutocompletesMessagesFor_Numbers_WithSelectorsFromTheirClass stamp: 'HAW 5/7/2020 00:00:07'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test009_AutocompletesMessagesFor_Strings_WithSelectorsFromString stamp: 'HAW 5/7/2020 00:00:07'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test010_AutocompletesMessagesFor_Symbols_WithSelectorsFromSymbol stamp: 'HAW 5/7/2020 00:00:07'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test011_AutocompletesMessagesFor_StringSymbol_WithSelectorsFromSymbol stamp: 'HAW 5/7/2020 00:00:07'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test012_AutocompletesMessagesFor_InstanceVariables stamp: 'HAW 5/7/2020 00:00:07'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test012_AutocompletesMessagesFor_InstanceVariables_WithSelectorsOfInstVarTypes stamp: 'HAW 5/7/2020 00:00:07'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test013_AutocompletesMessagesFor_MethodArguments_WithSelectorsForUnknownClasses stamp: 'HAW 5/7/2020 00:00:08'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test014_AutocompletesMessagesFor_TemporaryVariables_WithSelectorsForUnknownClasses stamp: 'HAW 5/7/2020 00:00:09'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test014_AutocompletesMessagesFor_TemporaryVariables_WithSelectorsOfTempVarTypes stamp: 'HAW 5/7/2020 00:00:09'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test015_AutocompletesMessagesFor_BlockArguments_WithSelectorsForUnknownClasses stamp: 'HAW 5/7/2020 00:00:09'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test016_AutocompletesMessagesFor_BlockTemporaryVariables_WithSelectorsForUnknownClasses stamp: 'HAW 5/7/2020 00:00:10'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test017_AutocompletesMessagesFor_NilWorkspaceVariables_WithSelectorsForUnknownClasses stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test017_AutocompletesMessagesFor_NonNilWorkspaceVariables_WithSelectorsFromTheirClasses stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test018_AutocompletesMessagesFor_ThisContext_WithSelectorsFromMethodContext stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test019_AutocompletesMessagesFor_ClassVariables_WithSelectorsFromTheirClasses stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test020_AutocompletesMessagesFor_PoolConstants_WithSelectorsFromTheirClasses stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test021_AutocompletesMessagesFor_BlockEndings_WithSelectorsFromBlockClosure stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test022_AutocompletesMessagesFor_ArrayEnds_WithSelectorsFromArray stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test023_AutocompletesMessagesFor_RightBraces_WithSelectorsFromArray stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test023_AutocompletingMessagesFor_UnaryMessages stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test024_AutocompletingMessagesFor_RightParenthesis stamp: 'HAW 5/7/2020 00:00:11'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test025_AutocompletesMessagesFor_UnknownIdentifiers_WithSelectorsForUnknownClasses stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test026_AutocompletingMessagesFor_Cascade stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test027_AutocompletesEntriesFor_GlobalVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test028_AutocompletesEntriesFor_PoolConstants_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test029_AutocompletesEntriesFor_WorkspaceVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test030_AutocompletesEntriesFor_ClassVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test031_AutocompletesEntriesFor_InstanceVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test032_AutocompletesEntriesFor_MethodArguments_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test033_AutocompletesEntriesFor_TemporaryVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test034_AutocompletesEntriesFor_BlockArguments_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test035_AutocompletesEntriesFor_BlockTemporaryVariables_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test036_AutocompletesEntriesFor_IncompleteIdentifiers_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test037_AutocompletesEntriesFor_ReservedNames_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test038_DoesNotAutocompleteEntriesFor_UndefinedIdentifiers stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test039_AutocompletesEntriesFor_BinaryMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test040_AutocompletesEntriesFor_IncompleteBinaryMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test041_AutocompletesEntriesFor_UnaryMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test042_AutocompletesEntriesFor_IncompleteUnaryMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test043_AutocompletesEntriesFor_KeywordMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test044_AutocompletesEntriesFor_IncompleteKeywordMessages_WithIdentifiersBegginingWithThem stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #testMessages stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ArrayWithArrayAndOtherObjects stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArray stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArrayOfArray stamp: 'HAW 5/7/2020 00:00:12'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndArrayWithManyElements stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBinaryInParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlock stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlockOfBlock stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndBlockOfEvaluatedBlock stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndExpresionInParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndLiteralArray stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndMoreThanOneUnaryAfterExpresionInParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterBlock stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterBrace stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterCharacter stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterLiteralArray stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterStringSymbol stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndOneUnaryAfterSymbol stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUnaryInProtoObject stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteKeywordAfterParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteKeywordAfterUnary stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryAndUncompleteMessageAfterUnary stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryInParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryWithMoreThanOneUnary stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_BinaryWithOneUnary stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ClosedAndUnclosedParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ExpressionInManyParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_ExpressionWithMoreThanOneParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_LFBeforeParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_SpaceBeforeParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnaryAfterExpresionInParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedArrayAfterClosedArray stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedBlockAfterBlock stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_UnclosedDoubleParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Browser_selfInProtoObject stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_ExpresionInParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_MoreThanOneUnaryMessage stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!testRun: #LiveTypingSmalltalkCompleterTest #test_Workspace_OnlyRightParenthesis stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:13'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:13'!
griffle [ var1 := 1. goo := 1. ^goo + var1 ]! !

!testRun: #CompilerExceptionsTest #testAddsMoreThanOneUndeclaredVariableCorrectlyInBlock stamp: 'HAW 5/7/2020 00:00:13'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:14'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:14'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:14'!
griffle [|var1| var1 := 1.goo := 1.^ goo + var1]! !

!testRun: #CompilerExceptionsTest #testAddsUndeclaredVariableCorrectlyInBlockWhenNoSpaceBetweenLastOneAndPipe stamp: 'HAW 5/7/2020 00:00:14'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:14'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:14'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:14'!
griffle [ :var1 | goo := 1.^ goo + var1]! !

!testRun: #CompilerExceptionsTest #testAddsUndeclaredVariableCorrectlyInBlockWhenTheresAnArgumentAlready stamp: 'HAW 5/7/2020 00:00:14'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:15'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:15'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:15'!
griffle [ :var1 | | | goo := 1.^ goo + var1]! !

!testRun: #CompilerExceptionsTest #testAddsUndeclaredVariableCorrectlyInBlockWhenTheresArgumentsAndTempDeclarationPipesWithNoTemps stamp: 'HAW 5/7/2020 00:00:15'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:16'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:16'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:16'!
griffle var1 := 1. [ goo := 1. ^goo + var1 ]! !

!testRun: #CompilerExceptionsTest #testAddsUndeclaredVariableCorrectlyInMethodAndInBlock stamp: 'HAW 5/7/2020 00:00:16'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:16'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:16'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:16'!
griffle |var1| var1 := 1.goo := 1.^ goo + var1! !

!testRun: #CompilerExceptionsTest #testAddsUndeclaredVariableCorrectlyInMethodWhenNoSpaceBetweenLastOneAndPipe stamp: 'HAW 5/7/2020 00:00:16'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:17'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:17'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:17'!
griffle [|goo| goo := 1. ^goo ]. [goo1:=1.^ goo1]! !

!testRun: #CompilerExceptionsTest #testAddsUndeclaredVariableInRightBlock stamp: 'HAW 5/7/2020 00:00:17'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:18'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:18'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:18'!
griffle [ :var1 | | foo | foo := 2. goo := 1.^ goo + var1 + foo ]! !

!testRun: #CompilerExceptionsTest #testAddsUndeclaredVariableWithAnArgumentAndTempAlreadyInBlock stamp: 'HAW 5/7/2020 00:00:18'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:18'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:18'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:18'!
griffle [ | goo | ]. [ | goo | ]! !

!testRun: #CompilerExceptionsTest #testDoesNotConfusesVariablesWithSameNameOfDifferentBlocksWhenRemoving stamp: 'HAW 5/7/2020 00:00:18'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:19'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:19'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:19'!
griffle | goo |! !

!testRun: #CompilerExceptionsTest #testDoesNotRemoveUnusedVariableIfSaidSo stamp: 'HAW 5/7/2020 00:00:19'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:19'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:19'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:19'!
griffle | goo a | a := 1. ^a! !

!testRun: #CompilerExceptionsTest #testKeepsVariableDefinitionWhenThereAreUsedTemporaries stamp: 'HAW 5/7/2020 00:00:19'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:20'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:20'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:20'!
griffle [ | goo | ]! !

!testRun: #CompilerExceptionsTest #testRemovesUnusedVariablesFromBlocks stamp: 'HAW 5/7/2020 00:00:20'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:21'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:21'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:21'!
griffle | goo |! !

!testRun: #CompilerExceptionsTest #testRemovesVariableDefinitionWhenNoMoreUnusedTemporaries stamp: 'HAW 5/7/2020 00:00:21'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:21'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:21'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:21'!
griffle [ || goo := 1.^ goo ]! !

!testRun: #CompilerExceptionsTest #testReusesBlockTempDeclarationWhenEmptyForUndeclaredVariable stamp: 'HAW 5/7/2020 00:00:21'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:22'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:22'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!CompilerTestDataClass__ methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:00:22'!
griffle || goo := 1.^ goo! !

!testRun: #CompilerExceptionsTest #testReusesMethodTempDeclarationWhenEmptyForUndeclaredVariable stamp: 'HAW 5/7/2020 00:00:22'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:22'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:23'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerExceptionsTest #testUndeclaredVariableIsSignaledForUndeclaredVariables stamp: 'HAW 5/7/2020 00:00:23'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:23'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:23'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerExceptionsTest #testUndefinedVariableIsSignaledForVariablesDefinedButNotInitialized stamp: 'HAW 5/7/2020 00:00:23'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:24'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:24'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerExceptionsTest #testUnknownSelectorIsSignalForMessagesSendNotImplemented stamp: 'HAW 5/7/2020 00:00:24'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:24'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #CompilerTestDataClass__ category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:00:24'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #CompilerExceptionsTest #testUnusedVariableIsSignaledForUnusedVariables stamp: 'HAW 5/7/2020 00:00:24'!
PASSED!

!classRemoval: #CompilerTestDataClass__ stamp: 'HAW 5/7/2020 00:00:25'!
RefactoringClassTestData subclass: #CompilerTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test01AddingAClassShouldBeLogged stamp: 'HAW 5/7/2020 00:00:25'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 5/7/2020 00:00:26'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test01ScanNewClassChange stamp: 'HAW 5/7/2020 00:00:26'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 5/7/2020 00:00:26'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test02AddingANewMethodShouldBeLogged stamp: 'HAW 5/7/2020 00:00:26'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 5/7/2020 00:00:27'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test02ScanNewMethodChange stamp: 'HAW 5/7/2020 00:00:27'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 5/7/2020 00:00:27'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test03ChangingAMethodShouldBeLogged stamp: 'HAW 5/7/2020 00:00:27'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 5/7/2020 00:00:28'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test03ScanMethodModifiedChange stamp: 'HAW 5/7/2020 00:00:28'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 5/7/2020 00:00:29'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test04RemovingAMethodShouldBeLogged stamp: 'HAW 5/7/2020 00:00:29'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 5/7/2020 00:00:29'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test04ScanMethodRemovalChange stamp: 'HAW 5/7/2020 00:00:29'!
PASSED!

!classRemoval: #LogChangesTestClass__ stamp: 'HAW 5/7/2020 00:00:30'!
RefactoringClassTestData subclass: #LogChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test05RemovingAClassShouldBeLogged stamp: 'HAW 5/7/2020 00:00:30'!
PASSED!

!testRun: #ChangesTest #test05ScanClassRemovalChange stamp: 'HAW 5/7/2020 00:00:31'!
PASSED!

!testRun: #ChangesTest #test06RenamingAClassShouldBeLogged stamp: 'HAW 5/7/2020 00:00:31'!
PASSED!

!classRemoval: #NewTestClass__ stamp: 'HAW 5/7/2020 00:00:32'!
RefactoringClassTestData subclass: #NewTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #test06ScanClassRenamedChange stamp: 'HAW 5/7/2020 00:00:32'!
PASSED!

!classRemoval: #NewTestClass__ stamp: 'HAW 5/7/2020 00:00:32'!
RefactoringClassTestData subclass: #NewTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangesTest #testDataClassName stamp: 'HAW 5/7/2020 00:00:32'!
PASSED!

!testRun: #GreenTest #test01WhenANewTestIsAddedThenIsWritingAFailingTest stamp: 'HAW 5/7/2020 00:00:33'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:00:33'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test02WhenAProductionMethodIsAddedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:33'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 5/7/2020 00:00:34'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test03WhenAProductionMethodIsChangedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:34'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 5/7/2020 00:00:35'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test04WhenAProductionClassIsAddedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:35'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 5/7/2020 00:00:35'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test05WhenAProductionClassIsRemovedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:36'!
PASSED!

!testRun: #GreenTest #test06WhenATestIsChangedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:36'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:00:37'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test07WhenATestPassesNothingHappens stamp: 'HAW 5/7/2020 00:00:37'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:00:37'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test08WhenAMethodIsRemovedIsRefactoring stamp: 'HAW 5/7/2020 00:00:38'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 5/7/2020 00:00:38'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test09WhenATestHasAnErrorAnErrorIsReportedAndTransitionsToRed stamp: 'HAW 5/7/2020 00:00:38'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:00:39'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test10WhenATestIsRenamedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:39'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:00:39'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test11WhenATestFailsAnErrorIsReportedAndTransitionsToRed stamp: 'HAW 5/7/2020 00:00:40'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:00:40'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test12WhenATestIsRemovedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:40'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:00:41'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test13WhenATestClassIsRemovedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:41'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:42'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test14WhenATestClassIsAddedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:42'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:43'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #GreenTest #test15WhenATestClassIsRenamedThenIsRefactoring stamp: 'HAW 5/7/2020 00:00:43'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 5/7/2020 00:00:43'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test01WhenAClassIsRemovedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:44'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:44'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test02WhenTheLastOfTheTestsIsRemovedIsBackToWritingAFailingTest stamp: 'HAW 5/7/2020 00:00:44'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:45'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test03WhenTheFirstOfTheTestsIsRemovedIsBackToWritingAFailingTest stamp: 'HAW 5/7/2020 00:00:45'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:46'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test04WhenAnotherTestIsRemovedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:46'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 5/7/2020 00:00:46'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:47'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test05WhenAMethodIsRemovedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:47'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:00:47'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:48'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test06WhenAModelMethodIsChangedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:48'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:00:48'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:49'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test07WhenAModelClassIsAddedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:49'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:00:49'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:50'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test08WhenAModelMethodIsAddedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:50'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:00:50'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:51'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test09WhenATestIsAddedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:51'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:51'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test10WhenATestClassIsAddedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:52'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 5/7/2020 00:00:52'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:52'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test11WhenOneOfTheTestTheTestsIsChangedIsStillInThisState stamp: 'HAW 5/7/2020 00:00:53'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:53'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test12WhenAnotherTestIsChangedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:53'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:54'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test13WhenATestFailsAnErrorIsReportedAndGoesToRed stamp: 'HAW 5/7/2020 00:00:54'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:55'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test14WhenOneOfTheTestsPassesTwoErrorsAreReported stamp: 'HAW 5/7/2020 00:00:55'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:55'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test15WhenAllOfTheTestsPassErrorsAreReportedAndGoesToGreen stamp: 'HAW 5/7/2020 00:00:55'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:56'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test16WhenOneOfTheTestsIsRenamedIsStillInThisState stamp: 'HAW 5/7/2020 00:00:56'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:57'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test17WhenAnotherTestIsRenamedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:00:57'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:58'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #MoreThanOneTestWrittenTest #test18WhenATestUtilityIsChangedNothingHappens stamp: 'HAW 5/7/2020 00:00:58'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:00:58'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test01WhenAProductionClassIsAddedIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:00:58'!
PASSED!

!classRemoval: #ProdClassA stamp: 'HAW 5/7/2020 00:00:59'!
Object subclass: #ProdClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test02WhenAProductionMethodIsAddedIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:00:59'!
PASSED!

!classRemoval: #ProdClassA stamp: 'HAW 5/7/2020 00:01:00'!
Object subclass: #ProdClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test03WhenATestIsAddedIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:01:00'!
PASSED!

!classRemoval: #ProdClassA stamp: 'HAW 5/7/2020 00:01:00'!
TestCase subclass: #ProdClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test04WhenATestClassIsAddedIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:01:00'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:01'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test05WhenATestIsChangedIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:01:01'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:02'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test06WhenAProductionMethodIsChangedIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:01:02'!
PASSED!

!classRemoval: #ProductionClassA stamp: 'HAW 5/7/2020 00:01:03'!
Object subclass: #ProductionClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test07WhenAClassIsRemovedIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:01:03'!
PASSED!

!testRun: #NotDoingTDDTest #test08WhenThereIsOneTestAndPassesThenIsInGreen stamp: 'HAW 5/7/2020 00:01:03'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:04'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test09WhenOneOfTheTestFailsThenIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:01:04'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:05'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test10WhenOneOfTheTestIsNotRunThenIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:01:05'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:05'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test11WhenATestIsRenamedIsStillNotDoingTDD stamp: 'HAW 5/7/2020 00:01:06'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:06'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test12WhenThereIsMoreThanOneTestAndAllPassThenIsInGreen stamp: 'HAW 5/7/2020 00:01:06'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:07'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test13WhenATestIsRemovedIsNoLongerTakenIntoAccount stamp: 'HAW 5/7/2020 00:01:07'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:08'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test14WhenATestClassIsRemovedIsNoLongerTakenIntoAccount stamp: 'HAW 5/7/2020 00:01:08'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:09'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotDoingTDDTest #test15WhenAllTestAreRemovedThenGoesToGreen stamp: 'HAW 5/7/2020 00:01:09'!
PASSED!

!testRun: #NotStartedTest #test01WhenNoChangesAreDoneThenNothingHappens stamp: 'HAW 5/7/2020 00:01:09'!
PASSED!

!testRun: #NotStartedTest #test02WhenAModelClassIsAddedThenWeAsumeIsWritingAFailingTest stamp: 'HAW 5/7/2020 00:01:10'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:10'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test03WhenATestClassIsAddedThenIsWritingAFailingTest stamp: 'HAW 5/7/2020 00:01:11'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:01:11'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test04WhenAProductionMethodIsAddedResultShouldHaveAnError stamp: 'HAW 5/7/2020 00:01:11'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:12'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test05WhenAMethodIsChangedResultShouldHaveAnError stamp: 'HAW 5/7/2020 00:01:12'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:13'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test06WhenATestIsAddedThenIsWritingAFailingTest stamp: 'HAW 5/7/2020 00:01:13'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:13'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test07WhenAClassIsRemovedResultShouldHaveAnError stamp: 'HAW 5/7/2020 00:01:14'!
PASSED!

!testRun: #NotStartedTest #test08WhenAMethodIsRemovedResultShouldHaveAnError stamp: 'HAW 5/7/2020 00:01:14'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:15'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test09WhenAllTestsPassThenIsInGreenState stamp: 'HAW 5/7/2020 00:01:15'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:15'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test10WhenATestFailsThenIsInRedState stamp: 'HAW 5/7/2020 00:01:16'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:16'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test11WhenATestHasAnErrorThenIsInRedState stamp: 'HAW 5/7/2020 00:01:16'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:17'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test12WhenATestIsChangedThenIsWritingAFailingTest stamp: 'HAW 5/7/2020 00:01:17'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:18'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #NotStartedTest #test13WhenATestIsRenamedThenIsNotDoingTDD stamp: 'HAW 5/7/2020 00:01:18'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:18'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test01ShouldIgnoreDoIts stamp: 'HAW 5/7/2020 00:01:18'!
PASSED!

!testRun: #OtherTest #test02ResultKnowsTheChangesThatWereDone stamp: 'HAW 5/7/2020 00:01:19'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:01:19'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test03TDDStateForEachChange stamp: 'HAW 5/7/2020 00:01:19'!
PASSED!

!classRemoval: #TestClass stamp: 'HAW 5/7/2020 00:01:20'!
TestCase subclass: #TestClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test04TestRenamesAreGroupedInASingleChange stamp: 'HAW 5/7/2020 00:01:20'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:21'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test05TestsWithSameNameInDifferentClassesAreDifferent stamp: 'HAW 5/7/2020 00:01:21'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 5/7/2020 00:01:21'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:22'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test06WhenATestHasAnErrorThisTestDoesNotFail stamp: 'HAW 5/7/2020 00:01:22'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:22'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test07RunFromASpecificChange stamp: 'HAW 5/7/2020 00:01:23'!
PASSED!

!classRemoval: #ExampleClass stamp: 'HAW 5/7/2020 00:01:23'!
Object subclass: #ExampleClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:23'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test08ReRunTheWholeAnalysis stamp: 'HAW 5/7/2020 00:01:23'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:24'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test09ReRunFromASpecificChange stamp: 'HAW 5/7/2020 00:01:24'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:25'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:25'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #OtherTest #test10ChangeWhenAMethodWasAdded stamp: 'HAW 5/7/2020 00:01:25'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:26'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test01WhenAProductionClassIsAddedIsStillInRed stamp: 'HAW 5/7/2020 00:01:26'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 5/7/2020 00:01:26'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:27'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test02WhenAProductionMethodIsAddedIsStillInRed stamp: 'HAW 5/7/2020 00:01:27'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:27'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:28'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test03WhenTheTestPassesThenIsInGreen stamp: 'HAW 5/7/2020 00:01:28'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:28'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:29'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test04WhenTheTestFailsIsStillInRed stamp: 'HAW 5/7/2020 00:01:29'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:29'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:30'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test05WhenAProductionMethodIsChangedIsStillInRed stamp: 'HAW 5/7/2020 00:01:30'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:30'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:31'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test06WhenTheNewTestPassesButAnotherTestFailsThenIsStillInRed stamp: 'HAW 5/7/2020 00:01:31'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:31'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:32'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test07WhenAllTestsPassThenIsInGreen stamp: 'HAW 5/7/2020 00:01:32'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:32'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:33'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test08WhenATestIsAddedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:01:33'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:33'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test09WhenATestIsRenamedAndAllTestsPassThenIsInGreen stamp: 'HAW 5/7/2020 00:01:33'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:34'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:34'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test10WhenAModelMethodIsRemovedIsStillInRed stamp: 'HAW 5/7/2020 00:01:34'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:35'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:35'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test11WhenAModelClassIsRemovedIsStillInRed stamp: 'HAW 5/7/2020 00:01:36'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:36'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test11WhenATestClassIsAddedIsStillInRed stamp: 'HAW 5/7/2020 00:01:36'!
PASSED!

!classRemoval: #TestSomethingB stamp: 'HAW 5/7/2020 00:01:37'!
TestCase subclass: #TestSomethingB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:37'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test12WhenTheTestIsChangedIsStillInRed stamp: 'HAW 5/7/2020 00:01:37'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:38'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:38'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test13WhenAnotherTestIsChangedIsStillInRed stamp: 'HAW 5/7/2020 00:01:38'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:39'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test14WhenATestIsRemovedResultShouldHaveAnErrorAndIsNotDoingTDD stamp: 'HAW 5/7/2020 00:01:39'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:01:40'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RedTest #test15WhenATestClassIsRemovedResultShouldHaveAnErrorAndIsNotDoingTDD stamp: 'HAW 5/7/2020 00:01:40'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:40'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test01WhenAProductionMethodIsChangedIsStillRefactoring stamp: 'HAW 5/7/2020 00:01:41'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:41'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test02WhenAProductionMethodIsAddedIsStillRefactoring stamp: 'HAW 5/7/2020 00:01:41'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:01:42'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test03WhenAProductionClassIsAddedIsStillRefactoring stamp: 'HAW 5/7/2020 00:01:42'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 5/7/2020 00:01:43'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test04WhenATestIsChangedIsStillRefactoring stamp: 'HAW 5/7/2020 00:01:43'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:43'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test05WhenATestIsRenamedIsStillRefactoring stamp: 'HAW 5/7/2020 00:01:43'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:44'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test06WhenATestClassIsAddedIsStillRefactoring stamp: 'HAW 5/7/2020 00:01:44'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:45'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test07WhenATestIsAddedResultHasAnErrorAndIsWritingAFailingTest stamp: 'HAW 5/7/2020 00:01:45'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:45'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test08WhenAllTestPassThenIsInGreen stamp: 'HAW 5/7/2020 00:01:45'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:46'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test09WhenOneOfTheTestFailsThenIsStillRefactoring stamp: 'HAW 5/7/2020 00:01:46'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:47'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test10WhenAClassIsRemovedIsStillRefactoring stamp: 'HAW 5/7/2020 00:01:47'!
PASSED!

!testRun: #RefactorTest #test11WhenAProductionMethodIsRemovedStillRefactoring stamp: 'HAW 5/7/2020 00:01:48'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 5/7/2020 00:01:48'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test12WhenATestClassIsRemovedThoseTestsAreNoLongerTakenIntoAccount stamp: 'HAW 5/7/2020 00:01:49'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 5/7/2020 00:01:49'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test13WhenATestIsRemovedIsNoLongerTakenIntoAccount stamp: 'HAW 5/7/2020 00:01:49'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:50'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test14WhenAllTestAreRemovedThenGoesToGreen stamp: 'HAW 5/7/2020 00:01:50'!
PASSED!

!testRun: #RefactorTest #test15WhenAModelMethodIsAddedButNotUsedThereIsAnError stamp: 'HAW 5/7/2020 00:01:51'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:51'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:52'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test16WhenAModelMethodIsAddedAndThenUsedThereAreNoErrors stamp: 'HAW 5/7/2020 00:01:52'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:52'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:53'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test17WhenAModelMethodIsAddedAndRemovedAndIsNotUsedThereAreNoErrors stamp: 'HAW 5/7/2020 00:01:53'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:54'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:54'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test18WhenAModelMethodIsAddedAndIsOnlyMentionedInACommentThereIsAnError stamp: 'HAW 5/7/2020 00:01:54'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:55'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:55'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test19WhenTwoModelMethodsAreAddedBothHaveToBeUsedInAValidRefactor stamp: 'HAW 5/7/2020 00:01:55'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:56'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:56'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test20WhenTwoModelMethodsAreAddedAndNotUsedIsNotAValidRefactor stamp: 'HAW 5/7/2020 00:01:56'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:57'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:57'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test21WhenAModelMethodIsAddedAndIsUsedAsAVariableNameIsNotAValidRefactor stamp: 'HAW 5/7/2020 00:01:57'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:58'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:58'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test22WhenAModelMethodIsNotUsedWhenAnalysisIsFinishedThereIsAnError stamp: 'HAW 5/7/2020 00:01:58'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:01:59'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:01:59'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test23WhenATestClassIsRenamedThoseTestsAreStillTakenIntoAccount stamp: 'HAW 5/7/2020 00:01:59'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:02:00'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassB stamp: 'HAW 5/7/2020 00:02:00'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #RefactorTest #test24WhenAMethodIsOverridenItIsConsideredUsedAndRefactorIsValid stamp: 'HAW 5/7/2020 00:02:00'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:02:01'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:02:01'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test01WhenTheTestIsChangedThenIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:01'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:02'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test02WhenAModelClassIsAddedThenIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:02'!
PASSED!

!classRemoval: #ProductionClass stamp: 'HAW 5/7/2020 00:02:03'!
Object subclass: #ProductionClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test03WhenATestClassIsAddedThenIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:03'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:04'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test04WhenATestFailsThenIsInRedState stamp: 'HAW 5/7/2020 00:02:04'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:04'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test05WhenAModelMethodIsAddedAndNoTestIsBeingWrittenThenIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:05'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:02:05'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:06'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test06WhenTheTestIsRenamedThenIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:06'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:06'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test07WhenAModelMethodIsChangedThenIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:06'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:02:07'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:07'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test08WhenSetUpMethodIsAddedToTheTestClassThenIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:07'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:08'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test09WhenAMethodIsAddedToTheTestClassThenIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:08'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:09'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test10WhenASecondTestIsAddedIsInMoreThanOneTestWritten stamp: 'HAW 5/7/2020 00:02:09'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:10'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test11WhenATestWithTheSameNameIsChangedInOtherClassThenIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:10'!
PASSED!

!classRemoval: #TestSomethingB stamp: 'HAW 5/7/2020 00:02:10'!
TestCase subclass: #TestSomethingB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomethingA stamp: 'HAW 5/7/2020 00:02:11'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test12WhenADifferentTestIsChangedThenIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:11'!
PASSED!

!classRemoval: #TestSomethingA stamp: 'HAW 5/7/2020 00:02:11'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test13WhenATestWithTheSameNameIsAddedInOtherClassThenIsInMoreThanOneTestWritten stamp: 'HAW 5/7/2020 00:02:11'!
PASSED!

!classRemoval: #TestSomethingB stamp: 'HAW 5/7/2020 00:02:12'!
TestCase subclass: #TestSomethingB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomethingA stamp: 'HAW 5/7/2020 00:02:12'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test14WhenAModelMethodIsRemovedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:12'!
PASSED!

!classRemoval: #ModelClassA stamp: 'HAW 5/7/2020 00:02:13'!
Object subclass: #ModelClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomethingA stamp: 'HAW 5/7/2020 00:02:13'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test15WhenTheTestIsRemovedThenIsInGreen stamp: 'HAW 5/7/2020 00:02:13'!
PASSED!

!classRemoval: #TestSomethingA stamp: 'HAW 5/7/2020 00:02:14'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test16WhenATestIsRenamedThenIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:14'!
PASSED!

!classRemoval: #TestSomethingA stamp: 'HAW 5/7/2020 00:02:15'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test17WhenAModelClassIsRemovedThenIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:15'!
PASSED!

!classRemoval: #TestSomethingA stamp: 'HAW 5/7/2020 00:02:16'!
TestCase subclass: #TestSomethingA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test18WhenTheTestPassesAnErrorIsReportedAndGoesToGreen stamp: 'HAW 5/7/2020 00:02:16'!
PASSED!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:16'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test19AnotherTestIsRemovedAnErrorIsReportedAndIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:17'!
PASSED!

!classRemoval: #TestClassB stamp: 'HAW 5/7/2020 00:02:17'!
TestCase subclass: #TestClassB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:02:18'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test20WhenAFirstTestIsAddedIsStillWritingAFailingTest stamp: 'HAW 5/7/2020 00:02:18'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:02:18'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test21WhenAModelMethodIsAddedBeforeRunningTestsThenIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:18'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:02:19'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:19'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test22WhenAModelMethodIsChangedBeforeWritingATestThenIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:19'!
PASSED!

!classRemoval: #ModelClass stamp: 'HAW 5/7/2020 00:02:20'!
Object subclass: #ModelClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestSomething stamp: 'HAW 5/7/2020 00:02:20'!
TestCase subclass: #TestSomething
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #WritingAFailingTestTest #test23WhenATestClassIsRemovedIsNotDoingTDD stamp: 'HAW 5/7/2020 00:02:21'!
PASSED!

!classRemoval: #TestSomethingB stamp: 'HAW 5/7/2020 00:02:21'!
TestCase subclass: #TestSomethingB
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test01RunningAPassingTestShouldBeLogged stamp: 'HAW 5/7/2020 00:02:21'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 5/7/2020 00:02:22'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test02RunningAFailingTestShouldBeLogged stamp: 'HAW 5/7/2020 00:02:22'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 5/7/2020 00:02:23'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test03RunningATestWithAnErrorShouldBeLogged stamp: 'HAW 5/7/2020 00:02:23'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 5/7/2020 00:02:23'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test04OverridingAMethodShouldBeLoggedWithAReferenceToTheOverridenMethod stamp: 'HAW 5/7/2020 00:02:23'!
PASSED!

!classRemoval: #SubclassTestDataClass__ stamp: 'HAW 5/7/2020 00:02:24'!
TestChangesTestClass__ subclass: #SubclassTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 5/7/2020 00:02:24'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test05WhenAMethodIsNotOverridenTheMethodReferenceIsNotIncluded stamp: 'HAW 5/7/2020 00:02:24'!
PASSED!

!classRemoval: #SubclassTestDataClass__ stamp: 'HAW 5/7/2020 00:02:25'!
TestChangesTestClass__ subclass: #SubclassTestDataClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 5/7/2020 00:02:25'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #LogTestChangesTest #test06WhenAMethodIsChangedItIsNotConsideredOverriden stamp: 'HAW 5/7/2020 00:02:25'!
PASSED!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 5/7/2020 00:02:26'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test01ScanPassingTestChange stamp: 'HAW 5/7/2020 00:02:26'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 5/7/2020 00:02:27'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test02ScanFailedTestChange stamp: 'HAW 5/7/2020 00:02:27'!
PASSED!

!classRemoval: 'TestChangesTestData' stamp: 'HAW 5/7/2020 00:02:27'!
TestCase subclass: 'TestChangesTestData'
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test03ScanNewTestClass stamp: 'HAW 5/7/2020 00:02:27'!
PASSED!

!classRemoval: #TestClassA stamp: 'HAW 5/7/2020 00:02:28'!
TestCase subclass: #TestClassA
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test04ScanOverridenMethod stamp: 'HAW 5/7/2020 00:02:28'!
PASSED!

!classRemoval: #AClass__ stamp: 'HAW 5/7/2020 00:02:29'!
TestChangesTestClass__ subclass: #AClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 5/7/2020 00:02:29'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #ScanTestChangesTest #test05ScanAMethodThatIsNotOverriden stamp: 'HAW 5/7/2020 00:02:29'!
PASSED!

!classRemoval: #AClass__ stamp: 'HAW 5/7/2020 00:02:30'!
TestChangesTestClass__ subclass: #AClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!classRemoval: #TestChangesTestClass__ stamp: 'HAW 5/7/2020 00:02:30'!
Object subclass: #TestChangesTestClass__
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__TDDGuru-TestData__'!

!testRun: #BlockNodeTest #testItDoesNotSendsAGivenMessageToSelfWhenTheBlockIsEmpty stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #BlockNodeTest #testItSendsAGivenMessageToSelfWhenItContainsAnStatementWithAMessageSendToSelf stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #MessageNodeTest #testItDoesNotSendTheMessageToSelfWhenTheReceiverIsNotSelf stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #MessageNodeTest #testItDoesNotSendTheMessageToSelfWhenTheReceiverIsSelfButTheSelectorIsDifferent stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #MessageNodeTest #testItSendsTheMessageToSelfWhenTheReceiverIsSelf stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #VariableNodeTest #testItDoesNotReferencesSelfWhenTheVariableNameIsNotSelf stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #VariableNodeTest #testItReferencesSelfWhenTheVariableNameIsSelf stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #AddInstanceVariableTest #test01NewVariableNameCanNotBeEmpty stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #AddInstanceVariableTest #test02NewVariableNameCanNotContainBlanks stamp: 'HAW 5/7/2020 00:02:30'!
PASSED!

!testRun: #AddInstanceVariableTest #test03NewVariableNameCanNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:02:31'!
PASSED!

!testRun: #AddInstanceVariableTest #test04ValidNewVariableNameGetBlanksTrimmed stamp: 'HAW 5/7/2020 00:02:31'!
PASSED!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:31'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test05NewVariableNameCanNotBeDefinedInClass stamp: 'HAW 5/7/2020 00:02:31'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:32'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:32'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:32'!
SuperclassWithInstVar subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test06NewVariableNameCanNotBeDefinedInSuperclasses stamp: 'HAW 5/7/2020 00:02:32'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:33'!
SuperclassWithInstVar subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithInstVar stamp: 'HAW 5/7/2020 00:02:33'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:33'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:33'!
ClassToAddInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test07NewVariableNameCanNotBeDefinedInAnySubclass stamp: 'HAW 5/7/2020 00:02:33'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'HAW 5/7/2020 00:02:34'!
ClassToAddInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:34'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:34'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:34'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test08AddCreatesNewInstanceVariable stamp: 'HAW 5/7/2020 00:02:34'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:35'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:35'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:35'!
m1 | a | a := 10.! !

!testRun: #AddInstanceVariableTest #test09FailsWhenNewVariableEqualsTemporaryVariableOfAMethodInClass stamp: 'HAW 5/7/2020 00:02:35'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:35'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:35'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:35'!
m1:a! !

!testRun: #AddInstanceVariableTest #test10FailsWhenNewVariableEqualsArgumentOfAMethodInClass stamp: 'HAW 5/7/2020 00:02:35'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:36'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:36'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:36'!
m1 [ :a | ] value: 1! !

!testRun: #AddInstanceVariableTest #test11FailsWhenNewVariableEqualsArgumentOfABlockInAMethodInClass stamp: 'HAW 5/7/2020 00:02:36'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:36'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:36'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:36'!
m1 [ | a | ] value! !

!testRun: #AddInstanceVariableTest #test12FailsWhenNewVariableEqualsTemporaryOfABlockInAMethodInClass stamp: 'HAW 5/7/2020 00:02:36'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:37'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:37'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassOfClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:37'!
ClassToAddInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassOfClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:37'!
m1 | a | ! !

!testRun: #AddInstanceVariableTest #test13FailsWhenNewVariableIsHiddenInAnyMethodOfAnySubclass stamp: 'HAW 5/7/2020 00:02:37'!
PASSED!

!classRemoval: #SubclassOfClassToRefactor stamp: 'HAW 5/7/2020 00:02:38'!
ClassToAddInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:38'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:38'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddInstanceVariableTest #test14NewVariableNameCanNotBeAReservedName stamp: 'HAW 5/7/2020 00:02:38'!
PASSED!

!classRemoval: #ClassToAddInstVar stamp: 'HAW 5/7/2020 00:02:38'!
RefactoringClassTestData subclass: #ClassToAddInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:38'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:38'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:38'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:38'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:38' prior: 50808143!
sender_m1 self m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:02:38'!
m1!

!testRun: #AddParameterTest #test01AddingParameterToUnaryMessageAddsColonAndParameter stamp: 'HAW 5/7/2020 00:02:39'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:39'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:39'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:39'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:39'!
sender_m1 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:39'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:39' prior: 50808181!
sender_m1 self m1: 1 m2: 2! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:39'!
m1: oldParam!

!testRun: #AddParameterTest #test02AddingParameterToKeywordMessageAddsNewKeywordAndParameter stamp: 'HAW 5/7/2020 00:02:39'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:40'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:40'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:40'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:40'!
sender_m1 self m1: 1. self m1: 1.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:40'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:40' prior: 50808221!
sender_m1 self m1: 1 m2: 2. self m1: 1 m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:40'!
m1: oldParam!

!testRun: #AddParameterTest #test03AddingParameterToKeywordMessageMultipleSendsInSameMethodSameLiteral stamp: 'HAW 5/7/2020 00:02:40'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:40'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:40'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:40'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:40'!
sender_m1 self m1: self size.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:40'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:40' prior: 50808262!
sender_m1 self m1: self size m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:40'!
m1: oldParam!

!testRun: #AddParameterTest #test04AddingParameterToKeywordMessageWithMessageSendAsLastFormalParameter stamp: 'HAW 5/7/2020 00:02:40'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:41'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:41'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:41'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:41'!
sender_m1 self m1: self size + 4.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:41'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:41' prior: 50808303!
sender_m1 self m1: self size + 4 m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:41'!
m1: oldParam!

!testRun: #AddParameterTest #test05AddingParameterToKeywordMessageWithBinaryMessageSendAsLastFormalParameter stamp: 'HAW 5/7/2020 00:02:41'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:42'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:42'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:42'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:42'!
sender_m1 self m1: (self at: 1 put: 2).! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:42'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:42' prior: 50808344!
sender_m1 self m1: (self at: 1 put: 2) m2: 2.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:42'!
m1: oldParam!

!testRun: #AddParameterTest #test06AddingParameterToKeywordMessageWithKeywordMessageSendAsLastFormalParameter stamp: 'HAW 5/7/2020 00:02:42'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:42'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:42'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:42'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:42'!
sender_m1 #m1 size! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:42'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:42' prior: 50808385!
sender_m1 #m1: size! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:02:42'!
m1!

!testRun: #AddParameterTest #test07AddingParameterToUnaryMessageChangesReferencesToSelector stamp: 'HAW 5/7/2020 00:02:42'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:43'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:43'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:43'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:43'!
sender_m1 #m1: size.! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:43'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:43' prior: 50808424!
sender_m1 #m1:m2: size.! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:43'!
m1: oldParam!

!testRun: #AddParameterTest #test08AddingParameterToKeywordMessageChangesReferencesToSelector stamp: 'HAW 5/7/2020 00:02:43'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:44'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test09FailsIfNewParameterValueCanNotBeCompiled stamp: 'HAW 5/7/2020 00:02:44'!
PASSED!

!testRun: #AddParameterTest #test10FailsIfNewParameterValueIsEmpty stamp: 'HAW 5/7/2020 00:02:44'!
PASSED!

!testRun: #AddParameterTest #test11NewParameterNameCanNotBeEmpty stamp: 'HAW 5/7/2020 00:02:44'!
PASSED!

!testRun: #AddParameterTest #test12NewParameterNameCanNotStartWithNumber stamp: 'HAW 5/7/2020 00:02:45'!
PASSED!

!testRun: #AddParameterTest #test13NewParameterNameCanNotContainSpaces stamp: 'HAW 5/7/2020 00:02:45'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:45'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: 'newParam'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:45'!
m1! !

!testRun: #AddParameterTest #test14NewParameterCanNotBeDefinedAsInstanceVariableInAnyImplementor stamp: 'HAW 5/7/2020 00:02:45'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:46'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: 'newParam'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:46'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:46'!
m1:newParam! !

!testRun: #AddParameterTest #test15NewParameterCanNotBeDefinedAsParameterInAnyImplementor stamp: 'HAW 5/7/2020 00:02:46'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:47'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test16WhenCreatedForUnarySelectorMustBeUnary stamp: 'HAW 5/7/2020 00:02:47'!
PASSED!

!testRun: #AddParameterTest #test17WhenCreatedForBinarySelectorMustBeBinary stamp: 'HAW 5/7/2020 00:02:47'!
PASSED!

!testRun: #AddParameterTest #test18CanNotAddParameterToBinaryKeyword stamp: 'HAW 5/7/2020 00:02:47'!
PASSED!

!testRun: #AddParameterTest #test19AllImplementorsMustImplementOldSelector stamp: 'HAW 5/7/2020 00:02:48'!
PASSED!

!testRun: #AddParameterTest #test20AllSendersShouldSendOldSelector stamp: 'HAW 5/7/2020 00:02:48'!
PASSED!

!testRun: #AddParameterTest #test21NewKeywordToAddToOldSelectorCanNotBeUnary stamp: 'HAW 5/7/2020 00:02:49'!
PASSED!

!testRun: #AddParameterTest #test22NewKeywordToAddToOldSelectorCanNotBeBinary stamp: 'HAW 5/7/2020 00:02:49'!
PASSED!

!testRun: #AddParameterTest #test23NewKeywordToAddToOldSelectorCanNotBeKeywordWithMoreThanOneParameter stamp: 'HAW 5/7/2020 00:02:49'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:50'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:50'!
sender_m1 self m1
	! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:50'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:50' prior: 50808558!
sender_m1 self m1: 1
	! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:02:50'!
m1!

!testRun: #AddParameterTest #test24AddingParameterToSendersTakeCaresOfSeparators stamp: 'HAW 5/7/2020 00:02:50'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:50'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:50'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:50'!
m1: newParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:50' prior: 50808595!
sender_m1 self m1: (self at: 1)! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:02:50'!
m1!

!testRun: #AddParameterTest #test25IfNewParameterValueIsKeywordMessageSendAddParenthesisToItForUnaryMessages stamp: 'HAW 5/7/2020 00:02:50'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:51'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:51'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:51'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:51'!
sender_m1 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:51'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:51' prior: 50808634!
sender_m1 self m1: 1 m2: (self at: 1)! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:51'!
m1: oldParam!

!testRun: #AddParameterTest #test26IfNewParameterValueIsKeywordMessageSendAddParenthesisToItForKeywordMessages stamp: 'HAW 5/7/2020 00:02:51'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:52'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test27NewParameterValueCanNotHaveMoreThanOneStatement stamp: 'HAW 5/7/2020 00:02:52'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:52'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:52'!
m1: oldParam! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:52'!
sender_m1 self m1:[ 1 factorial ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:52'!
m1: oldParam m2: newParam ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:52' prior: 50808679!
sender_m1 self m1:[ 1 factorial ] m2: 1! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:52'!
m1: oldParam!

!testRun: #AddParameterTest #test28WhenSenderLastParameterIsABlockAddedParameterIsNotAddedInsideTheBlock stamp: 'HAW 5/7/2020 00:02:52'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:53'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:53'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:53'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:53'!
sender self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:53'!
m2: newParam m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:53' prior: 50808720!
sender self m2: 2 m1: 1! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:02:53'!
m1: p1!

!testRun: #AddParameterTest #test29AddingParameterAsFirstOneWorksAsExpected stamp: 'HAW 5/7/2020 00:02:53'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:53'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:53'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:53'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:53'!
sender self m1: 1 m3: 3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:53'!
m1: p1 m2: newParam m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:53' prior: 50808758!
sender self m1: 1 m2: 2 m3: 3! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'HAW 5/7/2020 00:02:53'!
m1: p1 m3: p3!

!testRun: #AddParameterTest #test30AddingParameterInTheMiddleWorksAsExpected stamp: 'HAW 5/7/2020 00:02:53'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:54'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:54'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:54'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:54'!
sender
	self m1: 1 m3: 3.
	self
		m1: 4
		m3: 6! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:54'!
m1: p1 m2: newParam m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:54' prior: 50808798!
sender
	self m1: 1 m2: 2 m3: 3.
	self
		m1: 4
		m2: 2 m3: 6! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'HAW 5/7/2020 00:02:54'!
m1: p1 m3: p3!

!testRun: #AddParameterTest #test31AddingParameterInTheMiddleWithManySendersWorksAsExpected stamp: 'HAW 5/7/2020 00:02:54'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:54'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test32IndexCanNotBeLessThanOne stamp: 'HAW 5/7/2020 00:02:54'!
PASSED!

!testRun: #AddParameterTest #test33IndexCanNotBeBiggerThanNumberOfParametersPlusOne stamp: 'HAW 5/7/2020 00:02:55'!
PASSED!

!testRun: #AddParameterTest #test34IndexMustBeInteger stamp: 'HAW 5/7/2020 00:02:55'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:56'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:56'!
m1

! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:56'!
sender_m1 self m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:56'!
m1: newParam

! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:56' prior: 50808849!
sender_m1 self m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:02:56'!
m1

!

!testRun: #AddParameterTest #test35AddingParameterRetractsInsertionPointWhenAtInsertionPointIsANewLine stamp: 'HAW 5/7/2020 00:02:56'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:56'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:56'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterTest #test36ParentesisAreAddedToSendersOfUnaryMessage stamp: 'HAW 5/7/2020 00:02:56'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:02:57'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangeKeywordsSelectorOrderTest #test01CannotChangeSelectorOrderInUnaryMessages stamp: 'HAW 5/7/2020 00:02:57'!
PASSED!

!testRun: #ChangeKeywordsSelectorOrderTest #test02CannotChangeSelectorOrderInBinaryMessages stamp: 'HAW 5/7/2020 00:02:57'!
PASSED!

!testRun: #ChangeKeywordsSelectorOrderTest #test03CannotChangeSelectorOrderInKeywordMessagesWithOneParameterOnly stamp: 'HAW 5/7/2020 00:02:58'!
PASSED!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:58'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:58'!
m1: p1 m2: p2! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:58'!
m2: p2 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2: stamp: 'HAW 5/7/2020 00:02:58'!
m1: p1 m2: p2!

!testRun: #ChangeKeywordsSelectorOrderTest #test04ChangesKeywordsOrder stamp: 'HAW 5/7/2020 00:02:58'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'HAW 5/7/2020 00:02:58'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:58'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:58'!
m1: p1 m2: p2! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:58'!
m2: p2 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2: stamp: 'HAW 5/7/2020 00:02:58'!
m1: p1 m2: p2!

!testRun: #ChangeKeywordsSelectorOrderTest #test05ChangesParametersOrder stamp: 'HAW 5/7/2020 00:02:58'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'HAW 5/7/2020 00:02:59'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ChangeKeywordsSelectorOrderTest #test06NewSelectorMustIncludeOldSelectorKeywords stamp: 'HAW 5/7/2020 00:02:59'!
PASSED!

!classDefinition: #ClassToChangeSelectorOrder category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:02:59'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:59'!
m1: p1 m2: p2 m3: p3! !
!ClassToChangeSelectorOrder methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:02:59'!
m2: p2 m3: p3 m1: p1! !

!methodRemoval: ClassToChangeSelectorOrder #m1:m2:m3: stamp: 'HAW 5/7/2020 00:02:59'!
m1: p1 m2: p2 m3: p3!

!testRun: #ChangeKeywordsSelectorOrderTest #test07ChangesKeywordsAndParametersOrderForMoreThanTwoKeywords stamp: 'HAW 5/7/2020 00:03:00'!
PASSED!

!classRemoval: #ClassToChangeSelectorOrder stamp: 'HAW 5/7/2020 00:03:00'!
RefactoringClassTestData subclass: #ClassToChangeSelectorOrder
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:00'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:00'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:00'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test01NewSelectorShouldNotBeEmpty stamp: 'HAW 5/7/2020 00:03:00'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:01'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:01'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test02NewSelectorShouldNotContainSeparators stamp: 'HAW 5/7/2020 00:03:01'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:01'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:01'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:01'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test03NewSelectorShouldNotBeAlreadyDefinedInTheClass stamp: 'HAW 5/7/2020 00:03:01'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:02'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:02'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:02'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test04NewSelectorShouldNotStartWithANumber stamp: 'HAW 5/7/2020 00:03:02'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:03'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:03'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test05NewUnarySelectorShouldNotStartWithASymbol stamp: 'HAW 5/7/2020 00:03:03'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:03'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:03'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test06IntervalToExtractIsNotBeforeMethodSourceCodeBoundaries stamp: 'HAW 5/7/2020 00:03:03'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:04'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test07IntervalToExtractIsNotAfterMethodSourceCodeBoundaries stamp: 'HAW 5/7/2020 00:03:04'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:04'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:04'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:04'!
m1 ^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test08IntervalToExtractShouldNotContainAReturnExpression stamp: 'HAW 5/7/2020 00:03:04'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:05'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:05'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:05'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:05'!
m1 ^ 4! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:05'!
m2

	^ 4! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:05' prior: 50809303!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test09ExtractingALiteralCreatesANewMethodAndChangesExistingCodeToCallThatNewMethod stamp: 'HAW 5/7/2020 00:03:05'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:06'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:06'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test10IntervalToExtractDoesNotContainsPartOfTheOriginalSelector stamp: 'HAW 5/7/2020 00:03:06'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:06'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:06'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:06'!
m1 | localVar | ^ localVar + 3! !

!testRun: #ExtractMethodTest #test11IntervalToExtractDoesNotContainsPartOfLocalVariablesDefinition stamp: 'HAW 5/7/2020 00:03:06'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:07'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:07'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:07'!
m1 <annoyingPragma>! !

!testRun: #ExtractMethodTest #test12IntervalToExtractDoesNotContainsPartOfPragmasDefinition stamp: 'HAW 5/7/2020 00:03:07'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:08'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:08'!
m1 ^ 3 + ((4))! !

!testRun: #ExtractMethodTest #test13IntervalToExtractShouldBeAValidSmalltalkExpression stamp: 'HAW 5/7/2020 00:03:08'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:08'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:08'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test14ItIsNotPossibleToExtractTheLeftSideOfAnAssignment stamp: 'HAW 5/7/2020 00:03:08'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:09'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:09'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:09'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:09'!
m1 self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:09'!
m2

	self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:09' prior: 50809519!
m1 self m2! !

!testRun: #ExtractMethodTest #test15ExtractingAListOfStatementsCreatesANewMethodWithoutReturn stamp: 'HAW 5/7/2020 00:03:09'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:09'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:09'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:10'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:10'!
m1 ^ 'hey true'! !

!testRun: #ExtractMethodTest #test16CanNotExtractPartOfALiteral stamp: 'HAW 5/7/2020 00:03:10'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:10'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:10'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:10'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:10'!
m1 ^ '^ 3' size! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:10'!
m2

	^ '^ 3' size! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:10' prior: 50809596!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test17AStringContainingTheReturnCharacterCanBeExtracted stamp: 'HAW 5/7/2020 00:03:10'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:11'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:11'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:11'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:11'!
m1
	
	self m3.
	self m4: 5.! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:11'!
m2

	self m3.
	self m4: 5! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:11' prior: 50809638!
m1
	
	self m2.! !

!testRun: #ExtractMethodTest #test18ExtractingAListOfStatementsIncludingDotsRemovesThemAndContinuesWithMethodExtraction stamp: 'HAW 5/7/2020 00:03:11'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:11'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:11'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:11'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:11'!
m1 ^ ((42))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:11'!
m2

	^ 42! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:11' prior: 50809682!
m1 ^ ((self m2))! !

!testRun: #ExtractMethodTest #test19ASelectionContainingAdditionalParenthesesAtTheBeginningAndOrEndCanBeExtracted stamp: 'HAW 5/7/2020 00:03:11'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:12'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:12'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:12'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:12'!
m1 | local | ^ local + 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:12'!
m2: local

	^ local + 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:12' prior: 50809725!
m1 | local | ^ self m2: local! !

!testRun: #ExtractMethodTest #test20ASelectionContainingALocalVariableIsParameterizedOnTheExtractedMessage stamp: 'HAW 5/7/2020 00:03:12'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:13'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:13'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:13'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:13'!
m1 ^ (9) * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:13'!
m2

	^ (9) * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:13' prior: 50809769!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test21ASelectionContainingAdditionalParenthesesOnOneSideCanBeExtractedAndItIsNotTrimmed stamp: 'HAW 5/7/2020 00:03:13'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:13'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:13'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:13'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:13'!
m1 | localVar | ^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:13'!
m2: localVar

	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:13' prior: 50809812!
m1 | localVar | ^ self m2: localVar! !

!testRun: #ExtractMethodTest #test22ItIsPossibleToExtractTheLastExpressionOfAMethod stamp: 'HAW 5/7/2020 00:03:13'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:14'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:14'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:14'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !

!testRun: #ExtractMethodTest #test23CanNotExtractWithAnInvalidInterval stamp: 'HAW 5/7/2020 00:03:14'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:15'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:15'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:15'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:15'!
m1 | localVar | localVar _ 8! !

!testRun: #ExtractMethodTest #test24ItIsNotPossibleToExtractAnIntervalIncludingATemporaryAssignmentExpression stamp: 'HAW 5/7/2020 00:03:15'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:15'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:15'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:15'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:15'!
m1 ^ 8! !

!testRun: #ExtractMethodTest #test25NewUnarySelectorShouldNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:03:15'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:16'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:16'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:16'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:16'!
m1 ^ [ |something| something _ 3 ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:16'!
m2

	^ [ |something| something _ 3 ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:16' prior: 50809959!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test26ItIsPossibleToExtractAnEntireBlockIncludingALocalAssignment stamp: 'HAW 5/7/2020 00:03:16'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:16'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:16'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:16'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:16'!
m1 ^ 2 ifNil: [ #boo ] ifNotNil: [ #yay ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:17'!
m2

	^ 2 ifNil: [ #boo ] ifNotNil: [ #yay ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:17' prior: 50810003!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test27ItIsPossibleToExtractExpressionsWithOptimizedSelectors stamp: 'HAW 5/7/2020 00:03:17'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:17'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:17'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:17'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:17'!
m1 | localVar | ^ #foo! !

!testRun: #ExtractMethodTest #test28ItIsNotPossibleToExtractALocalVariableInsideOfItsDeclaration stamp: 'HAW 5/7/2020 00:03:17'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:18'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:18'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:18'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:18'!
m1: arg ^ 2 + arg * 3! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:18'!
m2: arg

	^ 2 + arg! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:18' prior: 50810083!
m1: arg ^ (self m2: arg) * 3! !

!testRun: #ExtractMethodTest #test29ExtractingABinaryExpressionToAKeywordMessageIntroducesParenthesesToNotBreakOriginalPrecedence stamp: 'HAW 5/7/2020 00:03:18'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:18'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:18'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:18'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:18'!
m1 ^ `3 + 4`! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:18'!
m2

	^ `3 + 4`! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:18' prior: 50810128!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test30ItIsPossibleToExtractAQuotedExpression stamp: 'HAW 5/7/2020 00:03:18'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:19'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:19'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:19'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:19'!
m1 ^ 2 factorial ifNotNil: [ #boo ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:19'!
m2

	^ 2 factorial ifNotNil: [ #boo ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:19' prior: 50810170!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test31ItIsPossibleToExtractExpressionsWithOptimizedSelectorsWhereTheReceiverIsNotASimpleLiteral stamp: 'HAW 5/7/2020 00:03:19'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:20'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:20'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:20'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:20'!
m1 ^ [ | a | a _ 3 factorial ]! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:20'!
m2

	| a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:20' prior: 50810215!
m1 ^ [ self m2 ]! !

!testRun: #ExtractMethodTest #test32ItIsPossibleToExtractATemporaryDeclarationOfABlockIfItIsNotUsedOutsideOfSelectionInterval stamp: 'HAW 5/7/2020 00:03:20'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:20'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:20'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:20'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:20'!
m1 | a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:20'!
m2

	| a | a _ 3 factorial! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:20' prior: 50810259!
m1 self m2! !

!testRun: #ExtractMethodTest #test33ItIsPossibleToExtractATemporaryDeclarationIfItIsNotUsedOutsideOfSelectionInterval stamp: 'HAW 5/7/2020 00:03:20'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:21'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:21'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:21'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:21'!
m1 | localVar1 localVar2 | ^ localVar1 + localVar2 + 2! !

!testRun: #ExtractMethodTest #test34TryingToExtractAMethodWithLessArgumentsThanNeededFails stamp: 'HAW 5/7/2020 00:03:21'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:22'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:22'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:22'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:22'!
m1 | localVar1 localVar2 | ^ localVar1 + localVar2 + 2! !

!testRun: #ExtractMethodTest #test35TryingToExtractAMethodWithMoreArgumentsThanNeededFails stamp: 'HAW 5/7/2020 00:03:22'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:22'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:22'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:22'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:22'!
m1 ^ (3 + 2) factorial; yourself! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:22'!
m2

	^ (3 + 2) factorial; yourself! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:22' prior: 50810375!
m1 ^ self m2! !

!testRun: #ExtractMethodTest #test36ItIsPossibleToExtractACascadeExpression stamp: 'HAW 5/7/2020 00:03:22'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:23'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToExtractMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:23'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToExtractMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:23'!
mExtractMethodExample: anArgument

	<anAnnoyingPragma>
	| localVar |
	<anotherAnnoyingPragma>
	self m1.
	self m2: 'hey true'.
	self m3: anArgument , '^ 21'.
	localVar _ Set with: 'hello'.
	localVar := #($x $y $z) size and: [ (9) * 3 ].
	^ localVar + ((4))! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:23'!
m1 | temp | []! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:23'!
m2

	| temp | []! !
!ClassToExtractMethod methodsFor: 'category' stamp: 'HAW 5/7/2020 00:03:23' prior: 50810419!
m1 self m2! !

!testRun: #ExtractMethodTest #test37ItIsPossibleATempDeclarationAlongWithABlock stamp: 'HAW 5/7/2020 00:03:23'!
PASSED!

!classRemoval: #ClassToExtractMethod stamp: 'HAW 5/7/2020 00:03:24'!
RefactoringClassTestData subclass: #ClassToExtractMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:24'!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test01NewVariableCanNotBeEmpty stamp: 'HAW 5/7/2020 00:03:24'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:24'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:24'!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test02NewVariableHasToBeValid stamp: 'HAW 5/7/2020 00:03:24'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:25'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:25'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:25'!
m1 | new | ^ 2! !

!testRun: #ExtractToTemporaryTest #test03NewVariableNameCanNotBeDefinedInMethod stamp: 'HAW 5/7/2020 00:03:25'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:25'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:25'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:25'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:25'!
m1 ^ 78! !

!testRun: #ExtractToTemporaryTest #test04FailsIfNewTemporaryIsEqualToInstanceVariableInClass stamp: 'HAW 5/7/2020 00:03:25'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:26'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:26'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRefactorSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:26'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:26'!
m1 ^ 78! !

!testRun: #ExtractToTemporaryTest #test05FailsIfNewTemporaryIsEqualToInstanceVariableInAnySuperclass stamp: 'HAW 5/7/2020 00:03:26'!
PASSED!

!classRemoval: #ClassToRefactorSuperclass stamp: 'HAW 5/7/2020 00:03:27'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:27'!
AnObsoleteClassToRefactorSuperclass subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:27'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:27'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test06SourceCodeToExtractCanNotIncludeReturn stamp: 'HAW 5/7/2020 00:03:27'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:28'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:28'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:28'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test07SourceCodeToExtractCanNotBeEmpty stamp: 'HAW 5/7/2020 00:03:28'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:28'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:28'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:28'!
m1 ^ 1 + 3! !

!testRun: #ExtractToTemporaryTest #test08SourceCodeToExtractCanNotHaveSyntaxErrors stamp: 'HAW 5/7/2020 00:03:28'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:29'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:29'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:29'!
m1 1+2. 3+4! !

!testRun: #ExtractToTemporaryTest #test09SourceCodeToExtractHasToBeOneStatement stamp: 'HAW 5/7/2020 00:03:29'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:29'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:29'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:29'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test10FailsIfIntervalToExtractIsBeforeMethodSourceCodeBoundaries stamp: 'HAW 5/7/2020 00:03:29'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:30'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:30'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:30'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test11FailsIfIntervalToExtractIsAfterMethodSourceCodeBoundaries stamp: 'HAW 5/7/2020 00:03:30'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:31'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:31'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:31'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:31' prior: 50810746!
m1

	| new |
	new _ 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test12ItIsPossibleToExtractASingleLiteralFromAMethodWithoutAnyTempsOrArguments stamp: 'HAW 5/7/2020 00:03:31'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:31'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:31'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:31'!
m1

	| four |
	four _ 4.
	^ four + 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:31' prior: 50810776!
m1

	| four two |
	four _ 4.
	two _ 2.
	^ four + two! !

!testRun: #ExtractToTemporaryTest #test13ItIsPossibleToExtractASingleExpressionFromAMethodThatHasAlreadyOtherTemporary stamp: 'HAW 5/7/2020 00:03:31'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:32'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:32'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:32'!
m1

	| |
	^ 3 factorial! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:32' prior: 50810808!
m1

	| f |
	f _ 3 factorial.
	^ f! !

!testRun: #ExtractToTemporaryTest #test14ItIsPossibleToExtractASingleExpressionFromAMethodThatHasAnEmptyTemporariesDeclaration stamp: 'HAW 5/7/2020 00:03:32'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:33'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:33'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:33'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:33' prior: 50810840!
m1

	| new |
	new := 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test15ItIsPossibleToExtractCodeAndGenerateAssignmentUsingAnsiAssignmentStyle stamp: 'HAW 5/7/2020 00:03:33'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:33'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:33'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:33'!
m1

	^ [ self m2 ]! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:33' prior: 50810870!
m1

	^ [ | new |
	new _ self m2.
	new ]! !

!testRun: #ExtractToTemporaryTest #test16ItIsPossibleToExtractASingleLiteralFromABlockWithoutAnyTempsOrArguments stamp: 'HAW 5/7/2020 00:03:33'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:34'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:34'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:34'!
m1 ^ 1! !

!testRun: #ExtractToTemporaryTest #test17CannotExtractPartOfMethodDefinition stamp: 'HAW 5/7/2020 00:03:34'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:34'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:34'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:34'!
m1 ^ self m2! !

!testRun: #ExtractToTemporaryTest #test18CannotExtractPartOfMessageSend stamp: 'HAW 5/7/2020 00:03:34'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:35'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:35'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:35'!
m1

	^ 42! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:35' prior: 50810949!
m1

	| new |
	new _ 42.
	^ new! !

!testRun: #ExtractToTemporaryTest #test19ItIsPossibleToExtractAnIntervalWithSomeExtraSpaces stamp: 'HAW 5/7/2020 00:03:35'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:36'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:36'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:36'!
m1

	^ []! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:36' prior: 50810978!
m1

	| new |
	new _ [].
	^ new! !

!testRun: #ExtractToTemporaryTest #test20ItIsPossibleToExtractAnEmptyBlock stamp: 'HAW 5/7/2020 00:03:36'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:36'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:36'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:36'!
m1 | existing | existing := 2! !

!testRun: #ExtractToTemporaryTest #test21CannotExtractLeftSideOfAssignment stamp: 'HAW 5/7/2020 00:03:36'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:37'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:37'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:37'!
m1

	^ 3 factorial; yourself! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:37' prior: 50811032!
m1

	| new |
	new _ 3 factorial; yourself.
	^ new! !

!testRun: #ExtractToTemporaryTest #test22ItIsPossibleToExtractACascadeExpression stamp: 'HAW 5/7/2020 00:03:37'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:37'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToDoExtractTemporary category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:37'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:37'!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:37' prior: 50811063!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:37' prior: 50811067!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:37' prior: 50811071!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:37' prior: 50811075!
m1 ^ 2! !
!ClassToDoExtractTemporary methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:37' prior: 50811079!
m1 ^ 2! !

!testRun: #ExtractToTemporaryTest #test23CannotUseAReservedNameAsTheNewTemporaryVariable stamp: 'HAW 5/7/2020 00:03:37'!
PASSED!

!classRemoval: #ClassToDoExtractTemporary stamp: 'HAW 5/7/2020 00:03:38'!
RefactoringClassTestData subclass: #ClassToDoExtractTemporary
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:38'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:38'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:38'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test01ChangesTheSuperclassOfTheClassToRefactor stamp: 'HAW 5/7/2020 00:03:38'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 5/7/2020 00:03:39'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 5/7/2020 00:03:39'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:39'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'SharedAAA'
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:39'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:39'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'SharedAAA'
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test02ClassToRefactorStructureIsMaintained stamp: 'HAW 5/7/2020 00:03:39'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 5/7/2020 00:03:40'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: 'instVar1 instVar2'
	classVariableNames: 'ClassVar1 ClassVar2'
	poolDictionaries: 'private'
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 5/7/2020 00:03:40'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:40'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:40'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:40'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test03NewSuperclassCategoryIsTheSameAsClassToRefactorCategory stamp: 'HAW 5/7/2020 00:03:40'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 5/7/2020 00:03:41'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 5/7/2020 00:03:41'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:41'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:41'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:41'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test04NewSuperclassHasNoVariables stamp: 'HAW 5/7/2020 00:03:41'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 5/7/2020 00:03:41'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 5/7/2020 00:03:42'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:42'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AlreadyExistingClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:42'!
RefactoringClassTestData subclass: #AlreadyExistingClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test05NewSuperclassShouldNotExist stamp: 'HAW 5/7/2020 00:03:42'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 5/7/2020 00:03:42'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AlreadyExistingClass stamp: 'HAW 5/7/2020 00:03:43'!
RefactoringClassTestData subclass: #AlreadyExistingClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test06NewSuperclassNameHasToBeASymbol stamp: 'HAW 5/7/2020 00:03:43'!
PASSED!

!testRun: #InsertSuperclassTest #test07NewSuperclassNameHasToStartWithUppercaseLetter stamp: 'HAW 5/7/2020 00:03:43'!
PASSED!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:43'!
RefactoringClassTestData subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AddedSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:43'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:43'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test08WhenAppliedToMetaclassWorksAsWithClass stamp: 'HAW 5/7/2020 00:03:43'!
PASSED!

!classRemoval: #ClassToAddSuperclass stamp: 'HAW 5/7/2020 00:03:44'!
AddedSuperclass subclass: #ClassToAddSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AddedSuperclass stamp: 'HAW 5/7/2020 00:03:44'!
RefactoringClassTestData subclass: #AddedSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #InsertSuperclassTest #test09NewSuperclassNameCanNotBeEmpty stamp: 'HAW 5/7/2020 00:03:44'!
PASSED!

!testRun: #InsertSuperclassTest #test10NewSuperclassNameCanNotHaveSpaces stamp: 'HAW 5/7/2020 00:03:45'!
PASSED!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:45'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:45'!
newMethod ^a! !

!testRun: #MoveToInstanceOrClassMethodTest #test01CannotMoveWhenReferencingInstanceVariables stamp: 'HAW 5/7/2020 00:03:45'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 5/7/2020 00:03:46'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:46'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: 'ClassToMoveMethod class' category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:46'!
ClassToMoveMethod class
	instanceVariableNames: 'a'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:46'!
newMethod|a|! !

!testRun: #MoveToInstanceOrClassMethodTest #test02CannotMoveToClassWhenLocalVariableIsTheSameAsClassInstanceVariable stamp: 'HAW 5/7/2020 00:03:46'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 5/7/2020 00:03:46'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:46'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:46'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:46'!
newMethod|a|! !

!testRun: #MoveToInstanceOrClassMethodTest #test03CannotMoveToInstanceWhenLocalVariableIsTheSameAsClassInstanceVariable stamp: 'HAW 5/7/2020 00:03:46'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 5/7/2020 00:03:47'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:47'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:47'!
newMethod! !
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:47'!
newMethod! !

!methodRemoval: ClassToMoveMethod #newMethod stamp: 'HAW 5/7/2020 00:03:47'!
newMethod!

!testRun: #MoveToInstanceOrClassMethodTest #test04InstanceMethodIsMovedToClassMethod stamp: 'HAW 5/7/2020 00:03:47'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 5/7/2020 00:03:47'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToMoveMethod category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:47'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToMoveMethod class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:47'!
newMethod! !
!ClassToMoveMethod methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:47'!
newMethod! !

!methodRemoval: ClassToMoveMethod class #newMethod stamp: 'HAW 5/7/2020 00:03:47'!
newMethod!

!testRun: #MoveToInstanceOrClassMethodTest #test05ClassMethodIsMovedToInstanceMethod stamp: 'HAW 5/7/2020 00:03:47'!
PASSED!

!classRemoval: #ClassToMoveMethod stamp: 'HAW 5/7/2020 00:03:48'!
RefactoringClassTestData subclass: #ClassToMoveMethod
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:48'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test01AnInstanceVariableDoesNotExistOnClassToFactorCannotBePushedDownToSubclasses stamp: 'HAW 5/7/2020 00:03:48'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'HAW 5/7/2020 00:03:49'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:49'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushInstanceVariableDown methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:49'!
newMethod^ a! !

!classDefinition: #SubclassWithoutInstVarOne category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:49'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:49'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test02AnInstanceVariableThatIsAccessedOnClassToRefactorCannotBePushedDownToAllSubclasses stamp: 'HAW 5/7/2020 00:03:49'!
PASSED!

!classRemoval: #SubclassWithoutInstVarTwo stamp: 'HAW 5/7/2020 00:03:49'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassWithoutInstVarOne stamp: 'HAW 5/7/2020 00:03:50'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'HAW 5/7/2020 00:03:50'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:50'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarOne category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:50'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:50'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:50'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarOne category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:50'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithoutInstVarTwo category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:50'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushDownInstanceVariableTest #test03AnInstanceVariableThatIsNotAccessedOnClassToRefactorShouldBePushedDownToAllSubclasses stamp: 'HAW 5/7/2020 00:03:50'!
PASSED!

!classRemoval: #SubclassWithoutInstVarTwo stamp: 'HAW 5/7/2020 00:03:51'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarTwo
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassWithoutInstVarOne stamp: 'HAW 5/7/2020 00:03:51'!
ClassToPushInstanceVariableDown subclass: #SubclassWithoutInstVarOne
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushInstanceVariableDown stamp: 'HAW 5/7/2020 00:03:51'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:51'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:51'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:51'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:51'!
newMethod! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:51' overrides: 50811713!
newMethod! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:51' overrides: 50811713!
newMethod! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'HAW 5/7/2020 00:03:51'!
newMethod!

!testRun: #PushDownMethodTest #test01AnEmptyMethodOnClassToRefactorShouldBePushedDownToSubclasses stamp: 'HAW 5/7/2020 00:03:51'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 5/7/2020 00:03:52'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 5/7/2020 00:03:52'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 5/7/2020 00:03:52'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:52'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:52'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:52'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:52'!
newMethod|a|! !

!testRun: #PushDownMethodTest #test02AMethodTemporaryVarDeclaredAsInstVarOnASubclassCanNotBePushedDownToSubclasses stamp: 'HAW 5/7/2020 00:03:52'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 5/7/2020 00:03:53'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 5/7/2020 00:03:53'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 5/7/2020 00:03:53'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:53'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:53'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:53'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:53'!
newMethod:a! !

!testRun: #PushDownMethodTest #test03AMethodArgumentDeclaredAsInstVarOnASubclassCanNotBePushedDownToSubclasses stamp: 'HAW 5/7/2020 00:03:53'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 5/7/2020 00:03:54'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 5/7/2020 00:03:54'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 5/7/2020 00:03:55'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:55'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:55'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:55'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:55'!
newMethod^ 1 + a! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:55' overrides: 50811886!
newMethod^ 1 + a! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:55' overrides: 50811886!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'HAW 5/7/2020 00:03:55'!
newMethod^ 1 + a!

!testRun: #PushDownMethodTest #test04AMethodAccessesClassToRefactorInstVarShouldBePushedDownToSubclasses stamp: 'HAW 5/7/2020 00:03:55'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 5/7/2020 00:03:55'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 5/7/2020 00:03:55'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 5/7/2020 00:03:56'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:56'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass1 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:56'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Subclass2 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:56'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:56'!
newMethod a = 1! !
!Subclass1 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:56' overrides: 50811951!
newMethod a = 1! !
!Subclass2 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:56' overrides: 50811951!
newMethod a = 1! !

!methodRemoval: ClassToPushMethodDown #newMethod stamp: 'HAW 5/7/2020 00:03:56'!
newMethod a = 1!

!testRun: #PushDownMethodTest #test05AMethodWritesClassToRefactorInstVarShouldBePushedDownToSubclasses stamp: 'HAW 5/7/2020 00:03:56'!
PASSED!

!classRemoval: #Subclass2 stamp: 'HAW 5/7/2020 00:03:56'!
ClassToPushMethodDown subclass: #Subclass2
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Subclass1 stamp: 'HAW 5/7/2020 00:03:57'!
ClassToPushMethodDown subclass: #Subclass1
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 5/7/2020 00:03:57'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodDown category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:57'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodDown methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:57'!
newMethod
	^ 2 + a.! !

!classDefinition: #Subclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:57'!
ClassToPushMethodDown subclass: #Subclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!Subclass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:03:57' overrides: 50812000!
newMethod^ 1 + a! !

!testRun: #PushDownMethodTest #test06AMethodInClassToRefactorExistsInSubClassesShouldOverrideTheExistingSubClassesMethod stamp: 'HAW 5/7/2020 00:03:57'!
PASSED!

!classRemoval: #Subclass stamp: 'HAW 5/7/2020 00:03:58'!
ClassToPushMethodDown subclass: #Subclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToPushMethodDown stamp: 'HAW 5/7/2020 00:03:58'!
RefactoringClassTestData subclass: #ClassToPushMethodDown
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:58'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:58'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:58'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:58'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test01AnInstanceVariableThatIsNotUsedOnClassToRefactorShouldBePushedUpToSuperclass stamp: 'HAW 5/7/2020 00:03:58'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'HAW 5/7/2020 00:03:58'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithoutInstVar stamp: 'HAW 5/7/2020 00:03:59'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:59'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:59'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnoterSubClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:59'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:59'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnoterSubClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:59'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:03:59'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test02AnInstanceVariableOnMultipleSubclassesShouldBeRemovedFromAllSubclassesAndPushedUpToSuperClass stamp: 'HAW 5/7/2020 00:03:59'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'HAW 5/7/2020 00:03:59'!
SuperclassWithoutInstVar subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnoterSubClassWithInstVar stamp: 'HAW 5/7/2020 00:04:00'!
SuperclassWithoutInstVar subclass: #AnoterSubClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithoutInstVar stamp: 'HAW 5/7/2020 00:04:00'!
RefactoringClassTestData subclass: #SuperclassWithoutInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:00'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test03AnInstanceVariableDoesNotExistOnClassToRefactorCannotBePushedUp stamp: 'HAW 5/7/2020 00:04:00'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'HAW 5/7/2020 00:04:01'!
RefactoringClassTestData subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithVariableAsTemporaryVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:01'!
RefactoringClassTestData subclass: #SuperclassWithVariableAsTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassWithVariableAsTemporaryVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:01'!
newMethod| a |! !

!classDefinition: #ClassToPushInstanceVariableUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:01'!
SuperclassWithVariableAsTemporaryVariable subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #PushUpInstanceVariableTest #test04AnInstanceVariableThatIsUsedOnSuperClassAsTemporaryVariableCannotBePushedUp stamp: 'HAW 5/7/2020 00:04:01'!
PASSED!

!classRemoval: #ClassToPushInstanceVariableUp stamp: 'HAW 5/7/2020 00:04:01'!
SuperclassWithVariableAsTemporaryVariable subclass: #ClassToPushInstanceVariableUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithVariableAsTemporaryVariable stamp: 'HAW 5/7/2020 00:04:01'!
RefactoringClassTestData subclass: #SuperclassWithVariableAsTemporaryVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:01'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:01'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:01'!
newMethod! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:01'!
newMethod! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'HAW 5/7/2020 00:04:01'!
newMethod!

!testRun: #PushUpMethodTest #test01AnEmptyMethodOnClassToRefactorShouldBePushedUpToSuperclass stamp: 'HAW 5/7/2020 00:04:01'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 5/7/2020 00:04:02'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 5/7/2020 00:04:02'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:02'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:02'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:02'!
newMethod^ 1 + a! !

!testRun: #PushUpMethodTest #test02AMethodAccessesClassToRefactorInstVarCanNotBePushedUpToSuperclass stamp: 'HAW 5/7/2020 00:04:02'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 5/7/2020 00:04:03'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 5/7/2020 00:04:03'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:03'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:03'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:03'!
newMethod a = 1! !

!testRun: #PushUpMethodTest #test03AMethodWritesClassToRefactorInstVarCanNotBePushedUpToSuperclass stamp: 'HAW 5/7/2020 00:04:03'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 5/7/2020 00:04:04'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 5/7/2020 00:04:04'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:04'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:04'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:04'!
newMethod a = 1! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:04'!
newMethod a = 1! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'HAW 5/7/2020 00:04:04'!
newMethod a = 1!

!testRun: #PushUpMethodTest #test04AMethodWritesSuperClassInstVarShouldBePushedUpToSuperclass stamp: 'HAW 5/7/2020 00:04:04'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 5/7/2020 00:04:05'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 5/7/2020 00:04:05'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:05'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:05'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:05'!
newMethod^ 1 + a! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:05'!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'HAW 5/7/2020 00:04:05'!
newMethod^ 1 + a!

!testRun: #PushUpMethodTest #test05AMethodAccessesSuperClassClassToRefactorInstVarShouldBePushedUpToSuperclass stamp: 'HAW 5/7/2020 00:04:05'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 5/7/2020 00:04:06'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 5/7/2020 00:04:06'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:06'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:06'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:06'!
newMethod^ 1 + a! !
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:06'!
newMethod^ 1 + a! !

!methodRemoval: ClassToPushMethodUp #newMethod stamp: 'HAW 5/7/2020 00:04:06'!
newMethod^ 1 + a!

!testRun: #PushUpMethodTest #test06AMethodAccessesSuperClassClassToRefactorInstVarShouldBePushedUpToSuperclass stamp: 'HAW 5/7/2020 00:04:06'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 5/7/2020 00:04:06'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 5/7/2020 00:04:07'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #Superclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:07'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!Superclass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:07'!
newMethod^ 1 + a! !

!classDefinition: #ClassToPushMethodUp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:07'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToPushMethodUp methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:07' overrides: 50812510!
newMethod
	^ 2 + a.! !

!testRun: #PushUpMethodTest #test07AMethodInClassToRefactorExistsInSuperClassShouldOverrideTheExistingSuperClassMethod stamp: 'HAW 5/7/2020 00:04:07'!
PASSED!

!classRemoval: #ClassToPushMethodUp stamp: 'HAW 5/7/2020 00:04:07'!
Superclass subclass: #ClassToPushMethodUp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #Superclass stamp: 'HAW 5/7/2020 00:04:08'!
RefactoringClassTestData subclass: #Superclass
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:08'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test01NoVariableIsRemovedWhenClassHasNoInstanceVariable stamp: 'HAW 5/7/2020 00:04:08'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'HAW 5/7/2020 00:04:08'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:08'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:08'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test02UnreferencedVariablesAreRemoved stamp: 'HAW 5/7/2020 00:04:08'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'HAW 5/7/2020 00:04:09'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:09'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:09'!
m1 ^a! !

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:09'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test03VariablesWithReferencesAreNotRemoved stamp: 'HAW 5/7/2020 00:04:09'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'HAW 5/7/2020 00:04:09'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:09'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a b'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithReferenceInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:09'!
ClassWithInstVar subclass: #ClassWithReferenceInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithReferenceInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:09'!
m1 ^a! !

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:10'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveAllUnreferencedInstanceVariablesTest #test04VariablesWithReferencesInSubclassesAreNotRemoved stamp: 'HAW 5/7/2020 00:04:10'!
PASSED!

!classRemoval: #ClassWithReferenceInstVar stamp: 'HAW 5/7/2020 00:04:10'!
ClassWithInstVar subclass: #ClassWithReferenceInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassWithInstVar stamp: 'HAW 5/7/2020 00:04:10'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:10'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveInstanceVariableTest #test01CanNotRemoveAnInstanceVariableNotDefinedInClass stamp: 'HAW 5/7/2020 00:04:10'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'HAW 5/7/2020 00:04:11'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:11'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:11'!
m1 ^a! !

!testRun: #RemoveInstanceVariableTest #test02CanNotRemoveInstanceVariableWithReferences stamp: 'HAW 5/7/2020 00:04:11'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'HAW 5/7/2020 00:04:12'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:12'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:12'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveInstanceVariableTest #test03WhenAppliedRemovesInstanceVariable stamp: 'HAW 5/7/2020 00:04:12'!
PASSED!

!classRemoval: #ClassWithInstVar stamp: 'HAW 5/7/2020 00:04:12'!
RefactoringClassTestData subclass: #ClassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterTest #test01CanNotRemoveParameterFromUnaryMessages stamp: 'HAW 5/7/2020 00:04:12'!
PASSED!

!testRun: #RemoveParameterTest #test02CanNotRemoveParameterFromBinaryMessages stamp: 'HAW 5/7/2020 00:04:13'!
PASSED!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:13'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:13'!
m1: parameter! !

!testRun: #RemoveParameterTest #test03CanNotRemoveParameterNotInMessage stamp: 'HAW 5/7/2020 00:04:13'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:14'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:14'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:14'!
m1: parameter! !

!testRun: #RemoveParameterTest #test04AllImplementorsMustImplementSelector stamp: 'HAW 5/7/2020 00:04:14'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:14'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:14'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:14'!
m1: parameter! !

!testRun: #RemoveParameterTest #test05AllSendersShouldSendSelector stamp: 'HAW 5/7/2020 00:04:14'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:15'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:15'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:15'!
m1: parameter ^parameter! !

!testRun: #RemoveParameterTest #test06NoImplementorReferencesParameterToRemove stamp: 'HAW 5/7/2020 00:04:15'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:15'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:15'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:15'!
m1:parameter1 
	m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:15'!
m2:parameter2! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 5/7/2020 00:04:15'!
m1:parameter1 
	m2:parameter2!

!testRun: #RemoveParameterTest #test07FirstParameterIsRemovedCorrectly stamp: 'HAW 5/7/2020 00:04:15'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:16'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:16'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:16'!
m1:parameter1 m2:parameter2
	| t1 |! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:16'!
m1:parameter1 
	| t1 |! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 5/7/2020 00:04:16'!
m1:parameter1 m2:parameter2
	| t1 |!

!testRun: #RemoveParameterTest #test08LastParameterIsRemovedCorrectly stamp: 'HAW 5/7/2020 00:04:16'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:17'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:17'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:17'!
m0: parameter0 
	m1:parameter1 
	m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:17'!
m0: parameter0 
	m2:parameter2! !

!methodRemoval: ClassToRemoveParameter #m0:m1:m2: stamp: 'HAW 5/7/2020 00:04:17'!
m0: parameter0 
	m1:parameter1 
	m2:parameter2!

!testRun: #RemoveParameterTest #test09MiddleParameterIsRemovedCorrectly stamp: 'HAW 5/7/2020 00:04:17'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:17'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:17'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:17'!
m1:parameter1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:17'!
m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:04:17'!
m1:parameter1!

!testRun: #RemoveParameterTest #test10ParameterFromOneKeywordSelectorIsRemovedCorrectly stamp: 'HAW 5/7/2020 00:04:17'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:18'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:18'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:18'!
m1:parameter1 m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:18'!
sender
		self 
			m1: 1 
			m2: 2 ! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:18'!
m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:18' prior: 50812992!
sender
		self 
			m2: 2 ! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 5/7/2020 00:04:18'!
m1:parameter1 m2:parameter2!

!testRun: #RemoveParameterTest #test11ParameterOfSendersOfMoreThanOneKeywordSelectorsIsRemovedCorrectly stamp: 'HAW 5/7/2020 00:04:18'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:19'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:19'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:19'!
m1:parameter1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:19'!
sender
		self 
			m1:
			 (1+2).! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:19'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:19' prior: 50813033!
sender
		self 
			m1.! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:04:19'!
m1:parameter1!

!testRun: #RemoveParameterTest #test12ParameterOfSendersOfOneKeywordSelectorsIsRemovedCorrectly stamp: 'HAW 5/7/2020 00:04:19'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:19'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:19'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:19'!
m1:parameter1 m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:19'!
sender
		self m1: (1+1) m2: 2.
		self m1: 3 m2: 4.! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:19'!
m2:parameter2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:19' prior: 50813073!
sender
		self m2: 2.
		self m2: 4.! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 5/7/2020 00:04:19'!
m1:parameter1 m2:parameter2!

!testRun: #RemoveParameterTest #test13ParameterIsRemovedCorrecltyFromSendersWithMoreThanOneSend stamp: 'HAW 5/7/2020 00:04:19'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:04:20'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterTest #test14CanNotRemoveParameterIndexLessThanOne stamp: 'HAW 5/7/2020 00:04:20'!
PASSED!

!testRun: #RemoveParameterTest #test15CanNotRemoveParameterIndexBiggerThanOldSelectorNumberOfKeywords stamp: 'HAW 5/7/2020 00:04:20'!
PASSED!

!testRun: #RemoveParameterTest #test16ParameterIndexMustBeInteger stamp: 'HAW 5/7/2020 00:04:21'!
PASSED!

!testRun: #RenameClassTest #test01NewClassNameHasToBeDifferentToOldOne stamp: 'HAW 5/7/2020 00:04:21'!
PASSED!

!testRun: #RenameClassTest #test02NewClassNameHasToBeASymbol stamp: 'HAW 5/7/2020 00:04:21'!
PASSED!

!testRun: #RenameClassTest #test03NewClassNameHasToStartWithUppercaseLetter stamp: 'HAW 5/7/2020 00:04:22'!
PASSED!

!testRun: #RenameClassTest #test04NewClassShouldNotExist stamp: 'HAW 5/7/2020 00:04:22'!
PASSED!

!testRun: #RenameClassTest #test04_01NewClassNameShouldNotBeAGlobalVariable stamp: 'HAW 5/7/2020 00:04:23'!
PASSED!

!testRun: #RenameClassTest #test05NewClassShouldNotBeUndeclare stamp: 'HAW 5/7/2020 00:04:23'!
PASSED!

!classDefinition: #OldClassTest07 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:23'!
RefactoringClassTestData subclass: #OldClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest07 as: #NewClassTest07 stamp: 'HAW 5/7/2020 00:04:23'!
Smalltalk renameClassNamed: #OldClassTest07 as: #NewClassTest07!

!testRun: #RenameClassTest #test06OldClassIsRenamedToNewClass stamp: 'HAW 5/7/2020 00:04:23'!
PASSED!

!classRemoval: #NewClassTest07 stamp: 'HAW 5/7/2020 00:04:24'!
RefactoringClassTestData subclass: #NewClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest07 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:24'!
RefactoringClassTestData subclass: #OldClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest07 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:24'!
m1 OldClassTest07 new! !

!classRenamed: #OldClassTest07 as: #NewClassTest07 stamp: 'HAW 5/7/2020 00:04:24'!
Smalltalk renameClassNamed: #OldClassTest07 as: #NewClassTest07!
!NewClassTest07 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:24' prior: 50813165!
m1 NewClassTest07 new! !

!testRun: #RenameClassTest #test07OldClassDirectReferencesAreRenamed stamp: 'HAW 5/7/2020 00:04:24'!
PASSED!

!classRemoval: #NewClassTest07 stamp: 'HAW 5/7/2020 00:04:25'!
RefactoringClassTestData subclass: #NewClassTest07
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest08 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:25'!
RefactoringClassTestData subclass: #OldClassTest08
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest08 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:25'!
m1 #OldClassTest08 size! !

!classRenamed: #OldClassTest08 as: #NewClassTest8 stamp: 'HAW 5/7/2020 00:04:25'!
Smalltalk renameClassNamed: #OldClassTest08 as: #NewClassTest8!
!NewClassTest8 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:25' prior: 50813197!
m1 #NewClassTest8 size! !

!testRun: #RenameClassTest #test08OldClassLiteralReferencesAreRenamed stamp: 'HAW 5/7/2020 00:04:25'!
PASSED!

!classRemoval: #NewClassTest8 stamp: 'HAW 5/7/2020 00:04:25'!
RefactoringClassTestData subclass: #NewClassTest8
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest09 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:25'!
RefactoringClassTestData subclass: #OldClassTest09
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest09 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:25'!
m1 OldClassTest09 new. Object new! !

!classRenamed: #OldClassTest09 as: #NewClassTest09 stamp: 'HAW 5/7/2020 00:04:25'!
Smalltalk renameClassNamed: #OldClassTest09 as: #NewClassTest09!
!NewClassTest09 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:26' prior: 50813229!
m1 NewClassTest09 new. Object new! !

!testRun: #RenameClassTest #test09OtherClassDirectReferencesAreNotRenamed stamp: 'HAW 5/7/2020 00:04:26'!
PASSED!

!classRemoval: #NewClassTest09 stamp: 'HAW 5/7/2020 00:04:26'!
RefactoringClassTestData subclass: #NewClassTest09
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest10 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:26'!
RefactoringClassTestData subclass: #OldClassTest10
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest10 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:26'!
m1 #OldClassTest10 size. #Object size! !

!classRenamed: #OldClassTest10 as: #NewClassTest10 stamp: 'HAW 5/7/2020 00:04:26'!
Smalltalk renameClassNamed: #OldClassTest10 as: #NewClassTest10!
!NewClassTest10 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:26' prior: 50813261!
m1 #NewClassTest10 size. #Object size! !

!testRun: #RenameClassTest #test10OtherLiteralReferencesAreNotRenamed stamp: 'HAW 5/7/2020 00:04:26'!
PASSED!

!classRemoval: #NewClassTest10 stamp: 'HAW 5/7/2020 00:04:27'!
RefactoringClassTestData subclass: #NewClassTest10
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest11 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:27'!
RefactoringClassTestData subclass: #OldClassTest11
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest11 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:27'!
m1 OldClassTest11 new. #OldClassTest11 size! !

!classRenamed: #OldClassTest11 as: #NewClassTest11 stamp: 'HAW 5/7/2020 00:04:27'!
Smalltalk renameClassNamed: #OldClassTest11 as: #NewClassTest11!
!NewClassTest11 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:27' prior: 50813293!
m1 NewClassTest11 new. #NewClassTest11 size! !

!testRun: #RenameClassTest #test11OldClassDirectAndLiteralReferencesAreRenameAtOnce stamp: 'HAW 5/7/2020 00:04:27'!
PASSED!

!classRemoval: #NewClassTest11 stamp: 'HAW 5/7/2020 00:04:28'!
RefactoringClassTestData subclass: #NewClassTest11
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test12CanNotRenameAMetaclass stamp: 'HAW 5/7/2020 00:04:28'!
PASSED!

!testRun: #RenameClassTest #test13NewClassNameHasToBeASymbol stamp: 'HAW 5/7/2020 00:04:28'!
PASSED!

!classDefinition: #OldClassTest14 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:28'!
RefactoringClassTestData subclass: #OldClassTest14
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test14NewClassNameCanNotHaveSpaces stamp: 'HAW 5/7/2020 00:04:28'!
PASSED!

!classRemoval: #OldClassTest14 stamp: 'HAW 5/7/2020 00:04:29'!
RefactoringClassTestData subclass: #OldClassTest14
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:29'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:29'!
m1 ^OldClassTest15! !

!classDefinition: #OldClassTest15 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:29'!
RefactoringClassTestData subclass: #OldClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest15 as: #NewClassTest15 stamp: 'HAW 5/7/2020 00:04:29'!
Smalltalk renameClassNamed: #OldClassTest15 as: #NewClassTest15!

!testRun: #RenameClassTest #test15ItDoesNotRenameReferencesToClassVariableWithSameName stamp: 'HAW 5/7/2020 00:04:29'!
PASSED!

!classRemoval: #NewClassTest15 stamp: 'HAW 5/7/2020 00:04:30'!
RefactoringClassTestData subclass: #NewClassTest15
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 5/7/2020 00:04:30'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldClassTest15'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:30'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:30'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:30'!
m1 ^OldClassTest16! !

!classDefinition: #OldClassTest16 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:30'!
RefactoringClassTestData subclass: #OldClassTest16
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest16 as: #NewClassTest16 stamp: 'HAW 5/7/2020 00:04:30'!
Smalltalk renameClassNamed: #OldClassTest16 as: #NewClassTest16!

!testRun: #RenameClassTest #test16ItDoesNotRenameReferencesToClassVariableWithSameNameDefinedInAnySuperclass stamp: 'HAW 5/7/2020 00:04:30'!
PASSED!

!classRemoval: #NewClassTest16 stamp: 'HAW 5/7/2020 00:04:31'!
RefactoringClassTestData subclass: #NewClassTest16
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 5/7/2020 00:04:31'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'HAW 5/7/2020 00:04:31'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'OldClassTest16'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:31'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:31'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:31'!
m1 ^NewClassTest17! !

!classDefinition: #OldClassTest17 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:31'!
RefactoringClassTestData subclass: #OldClassTest17
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRenamed: #OldClassTest17 as: #NewClassTest17 stamp: 'HAW 5/7/2020 00:04:31'!
Smalltalk renameClassNamed: #OldClassTest17 as: #NewClassTest17!

!testRun: #RenameClassTest #test17ItDoesNotRenameReferencesToClassVariableWithSameNameAsNewClassDefinedInAnySuperclass stamp: 'HAW 5/7/2020 00:04:31'!
PASSED!

!classRemoval: #NewClassTest17 stamp: 'HAW 5/7/2020 00:04:32'!
RefactoringClassTestData subclass: #NewClassTest17
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 5/7/2020 00:04:32'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'HAW 5/7/2020 00:04:33'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'NewClassTest17'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest18 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:33'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!OldClassTest18 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:33'!
m1 ^OldClassTest18! !

!classRenamed: #OldClassTest18 as: #NewClassTest18 stamp: 'HAW 5/7/2020 00:04:33'!
Smalltalk renameClassNamed: #OldClassTest18 as: #NewClassTest18!
!NewClassTest18 methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:33' prior: 50813527!
m1 ^NewClassTest18! !

!testRun: #RenameClassTest #test18WorksCorrectlyWhenSourceCodeEndsWithClassToRename stamp: 'HAW 5/7/2020 00:04:33'!
PASSED!

!classRemoval: #NewClassTest18 stamp: 'HAW 5/7/2020 00:04:33'!
RefactoringClassTestData subclass: #NewClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #OldClassTest18 category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:33'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameClassTest #test19RenamesClassWhenMethodReferencesClassAndDoesNothing stamp: 'HAW 5/7/2020 00:04:33'!
PASSED!

!classRemoval: #OldClassTest18 stamp: 'HAW 5/7/2020 00:04:34'!
RefactoringClassTestData subclass: #OldClassTest18
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test00GlobalCanNotBeClass stamp: 'HAW 5/7/2020 00:04:34'!
PASSED!

!testRun: #RenameGlobalTest #test01NewNameHasToBeDifferentToOldOne stamp: 'HAW 5/7/2020 00:04:34'!
PASSED!

!testRun: #RenameGlobalTest #test02NewNameHasToBeASymbol stamp: 'HAW 5/7/2020 00:04:35'!
PASSED!

!testRun: #RenameGlobalTest #test03NewNameShouldNotBeAClass stamp: 'HAW 5/7/2020 00:04:35'!
PASSED!

!testRun: #RenameGlobalTest #test04NewNameShouldNotBeAGlobalVariable stamp: 'HAW 5/7/2020 00:04:35'!
PASSED!

!testRun: #RenameGlobalTest #test06OldNameIsRenamedToNewName stamp: 'HAW 5/7/2020 00:04:36'!
PASSED!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:36'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:36'!
m1 ^OldNameToRename__! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:36' prior: 50813602!
m1 ^NewNameToRename__! !

!testRun: #RenameGlobalTest #test07OldDirectReferencesAreRenamed stamp: 'HAW 5/7/2020 00:04:36'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:04:37'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:37'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:37'!
m1 ^#OldNameToRename__! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:37' prior: 50813629!
m1 ^#NewNameToRename__! !

!testRun: #RenameGlobalTest #test08OldNameLiteralReferencesAreRenamed stamp: 'HAW 5/7/2020 00:04:37'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:04:38'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test09NewNameHasToBeASymbol stamp: 'HAW 5/7/2020 00:04:38'!
PASSED!

!testRun: #RenameGlobalTest #test10NewNameCanNotHaveSpaces stamp: 'HAW 5/7/2020 00:04:38'!
PASSED!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:38'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:38'!
m1 ^OldNameToRename__! !

!testRun: #RenameGlobalTest #test11ItDoesNotRenameReferencesToClassVariableWithSameName stamp: 'HAW 5/7/2020 00:04:38'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 5/7/2020 00:04:39'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldNameToRename__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVarSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:39'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:39'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:39'!
m1 ^OldNameRenamed__! !

!testRun: #RenameGlobalTest #test12ItDoesNotRenameReferencesToClassVariableWithSameNameDefinedInAnySuperclass stamp: 'HAW 5/7/2020 00:04:39'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 5/7/2020 00:04:40'!
ClassReferencingClassVarSuperclass subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassVarSuperclass stamp: 'HAW 5/7/2020 00:04:40'!
RefactoringClassTestData subclass: #ClassReferencingClassVarSuperclass
	instanceVariableNames: ''
	classVariableNames: 'OldNameRenamed__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test13OldNameMustBeDefined stamp: 'HAW 5/7/2020 00:04:40'!
PASSED!

!classDefinition: #ClassReferencingClassVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:40'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassVar class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:40'!
m1 ^OldNameToRename__! !

!testRun: #RenameGlobalTest #test14ItDoesNotRenameReferencesToClassVariableFromClassSideWithSameName stamp: 'HAW 5/7/2020 00:04:40'!
PASSED!

!classRemoval: #ClassReferencingClassVar stamp: 'HAW 5/7/2020 00:04:41'!
RefactoringClassTestData subclass: #ClassReferencingClassVar
	instanceVariableNames: ''
	classVariableNames: 'OldNameToRename__'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameGlobalTest #test15OldNameCanNotBeEmpty stamp: 'HAW 5/7/2020 00:04:41'!
PASSED!

!classDefinition: #ClassWithoutInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:41'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test01CanNotRenameAnInstanceVariableNotDefinedInClass stamp: 'HAW 5/7/2020 00:04:41'!
PASSED!

!classRemoval: #ClassWithoutInstVar stamp: 'HAW 5/7/2020 00:04:42'!
RefactoringClassTestData subclass: #ClassWithoutInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test02NewVariableNameCanNotBeEmpty stamp: 'HAW 5/7/2020 00:04:42'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:42'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test03NewVariableNameCanNotContainBlanks stamp: 'HAW 5/7/2020 00:04:42'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:43'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:43'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test04NewVariableNameCanNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:04:43'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:44'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:44'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test05ValidNewVariableNameGetBlanksTrimmed stamp: 'HAW 5/7/2020 00:04:44'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:44'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:44'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test06NewVariableNameCanNotBeDefinedInClass stamp: 'HAW 5/7/2020 00:04:44'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:45'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:45'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:45'!
SuperclassWithInstVar subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test07NewVariableNameCanNotBeDefinedInSuperclasses stamp: 'HAW 5/7/2020 00:04:45'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:45'!
SuperclassWithInstVar subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassWithInstVar stamp: 'HAW 5/7/2020 00:04:46'!
RefactoringClassTestData subclass: #SuperclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:46'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:46'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test08NewVariableNameCanNotBeDefinedInAnySubclass stamp: 'HAW 5/7/2020 00:04:46'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'HAW 5/7/2020 00:04:46'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:47'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:47'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:47'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test09RenameCreatesNewInstanceVariableAndDeletesOldOne stamp: 'HAW 5/7/2020 00:04:47'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:47'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:47'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:47'!
m1 ^old! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:47'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:47' prior: 50813989!
m1 ^new! !

!testRun: #RenameInstanceVariableTest #test10ReadReferencesToOldVariableAreRenamed stamp: 'HAW 5/7/2020 00:04:47'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:48'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:48'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:48'!
m1 old := 10! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:48'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:48' prior: 50814026!
m1 new := 10! !

!testRun: #RenameInstanceVariableTest #test11WriteReferencesToOldVariableAreRenamed stamp: 'HAW 5/7/2020 00:04:48'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:48'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:48'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassWithInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:48'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:48'!
m1 old := 10. ^old! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:48'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassWithInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:48' prior: 50814072!
m1 new := 10. ^new! !

!testRun: #RenameInstanceVariableTest #test12ReferencesInSubclassesAreRenamed stamp: 'HAW 5/7/2020 00:04:48'!
PASSED!

!classRemoval: #SubclassWithInstVar stamp: 'HAW 5/7/2020 00:04:49'!
ClassToRenameInstVar subclass: #SubclassWithInstVar
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:49'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:49'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:49'!
m1 keep := old. ^keep! !

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:49'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:49' prior: 50814116!
m1 keep := new. ^keep! !

!testRun: #RenameInstanceVariableTest #test13ReferencesToOtherVariablesAreNotRenamed stamp: 'HAW 5/7/2020 00:04:49'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:50'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new keep'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:50'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:50'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameInstanceVariableTest #test14NewVariableOfExistingInstancesReferToOldVariableValue stamp: 'HAW 5/7/2020 00:04:50'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:51'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:51'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:51'!
m1 | new | new := 10.! !

!testRun: #RenameInstanceVariableTest #test15FailsWhenNewVariableEqualsTemporaryVariableOfAMethodInClass stamp: 'HAW 5/7/2020 00:04:51'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:51'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:51'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:51'!
m1:new! !

!testRun: #RenameInstanceVariableTest #test16FailsWhenNewVariableEqualsArgumentOfAMethodInClass stamp: 'HAW 5/7/2020 00:04:51'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:52'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:52'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:52'!
m1 [ :new | ] value: 1! !

!testRun: #RenameInstanceVariableTest #test17FailsWhenNewVariableEqualsArgumentOfABlockInAMethodInClass stamp: 'HAW 5/7/2020 00:04:52'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:52'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:52'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:52'!
m1 [ | new | ] value! !

!testRun: #RenameInstanceVariableTest #test18FailsWhenNewVariableEqualsTemporaryOfABlockInAMethodInClass stamp: 'HAW 5/7/2020 00:04:52'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:53'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:53'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassOfClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:53'!
ClassToRenameInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassOfClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:53'!
m1 | new | ! !

!testRun: #RenameInstanceVariableTest #test19FailsWhenNewVariableIsHiddenInAnyMethodOfAnySubclass stamp: 'HAW 5/7/2020 00:04:53'!
PASSED!

!classRemoval: #SubclassOfClassToRefactor stamp: 'HAW 5/7/2020 00:04:54'!
ClassToRenameInstVar subclass: #SubclassOfClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:54'!
RefactoringClassTestData subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:54'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'old'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameInstVar category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:54'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameInstVar class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:54' overrides: 16806529!
wantsChangeSetLogging ^false! !

!testRun: #RenameInstanceVariableTest #test20ClassChangeIsAddedWhenRenamingAnInstanceVariable stamp: 'HAW 5/7/2020 00:04:54'!
PASSED!

!classRemoval: #ClassToRenameInstVar stamp: 'HAW 5/7/2020 00:04:54'!
Object subclass: #ClassToRenameInstVar
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:54'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:54'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:55'!
newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:04:55'!
oldXyz__!

!testRun: #RenameSelectorTest #test01MessageWithNoSendersCreatesNewMethodAndRemovesOldOne stamp: 'HAW 5/7/2020 00:04:55'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:04:55'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:55'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:55'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:55'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:55'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:55' prior: 50814392!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:04:55'!
oldXyz__!

!testRun: #RenameSelectorTest #test02SendersOfMessageAreRenamed stamp: 'HAW 5/7/2020 00:04:55'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:04:56'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:56'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:56'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:56'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:56' prior: 50814430!
m1__ self oldXyz__. self toKeep! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:56'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:56' prior: 50814434!
m1__ self newXyz__. self toKeep! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:04:56'!
oldXyz__!

!testRun: #RenameSelectorTest #test03OtherMessagesSendsAreNotRenamed stamp: 'HAW 5/7/2020 00:04:56'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:04:56'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorTest #test04OldSelectorCanNotBeEmpty stamp: 'HAW 5/7/2020 00:04:56'!
PASSED!

!testRun: #RenameSelectorTest #test05NewSelectorCanNotBeEmpty stamp: 'HAW 5/7/2020 00:04:57'!
PASSED!

!testRun: #RenameSelectorTest #test06CanRenameWithoutImplementors stamp: 'HAW 5/7/2020 00:04:57'!
PASSED!

!testRun: #RenameSelectorTest #test07AllImplementorsMustImplementOldSelector stamp: 'HAW 5/7/2020 00:04:57'!
PASSED!

!testRun: #RenameSelectorTest #test08AllSendersShouldSendOldSelector stamp: 'HAW 5/7/2020 00:04:58'!
PASSED!

!testRun: #RenameSelectorTest #test09NewSelectorMustBeOfSameTypeAsOldSelector stamp: 'HAW 5/7/2020 00:04:58'!
PASSED!

!testRun: #RenameSelectorTest #test10NewSelectorMustHaveSameNumberOfArgumentsAsOldSelector stamp: 'HAW 5/7/2020 00:04:59'!
PASSED!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:04:59'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:59'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:59'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'oldSelectorCategory' stamp: 'HAW 5/7/2020 00:04:59'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:04:59' prior: 50814498!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:04:59'!
oldXyz__!

!testRun: #RenameSelectorTest #test11NewImplementorsKeepMethodCategory stamp: 'HAW 5/7/2020 00:04:59'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:04:59'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:00'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00' prior: 50814533!
oldXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00'!
newXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00' prior: 50814545!
newXyz__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:00'!
oldXyz__ self oldXyz__!

!testRun: #RenameSelectorTest #test12RenamesRecursiveMethodsWhenNotInSenders stamp: 'HAW 5/7/2020 00:05:00'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:00'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:00'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00' prior: 50814577!
oldXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00'!
newXyz__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00' prior: 50814585!
oldXyz__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:00' prior: 50814589!
newXyz__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:00'!
oldXyz__ self newXyz__!

!testRun: #RenameSelectorTest #test13RenamesRecursiveMethodsWhenInSenders stamp: 'HAW 5/7/2020 00:05:00'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:01'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:01'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:01'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:01'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:01' prior: 50814626!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:01'!
m1 #oldXyz__ size! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:01'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:01' prior: 50814638!
m1 #newXyz__ size! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:01'!
oldXyz__!

!testRun: #RenameSelectorTest #test14RenamesSymbolsEqualToOldSelector stamp: 'HAW 5/7/2020 00:05:01'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:01'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:01'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:01'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:01'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:02'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' prior: 50814677!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' prior: 50814685!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:02'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:02'!
oldXyz__!

!testRun: #RenameSelectorTest #test15ScopeToRenameCanBeClassOnly stamp: 'HAW 5/7/2020 00:05:02'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:02'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 5/7/2020 00:05:02'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:02'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:02'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' overrides: 50814753!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' overrides: 50814757!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' overrides: 50814761!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' overrides: 50814765!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:02'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' overrides: 50814778!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' overrides: 50814782!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' overrides: 50814787!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02' overrides: 50814791!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:02'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:02'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' overrides: 50814836!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' overrides: 50814840!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' overrides: 50814844!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' overrides: 50814848!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' prior: 50814757!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' prior: 50814765!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' prior: 50814782 overrides: 50814861!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' prior: 50814791 overrides: 50814866!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' prior: 50814809 overrides: 50814871!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:03' prior: 50814819 overrides: 50814876!
m1__ self newXyz__! !

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:03'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:03'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:03'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:03'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:03'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:03'!
oldXyz__!

!testRun: #RenameSelectorTest #test16ScopeToRenameCanBeHierarchyOnly stamp: 'HAW 5/7/2020 00:05:03'!
PASSED!

!classRemoval: #SubclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:03'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:03'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:04'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 5/7/2020 00:05:04'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:04'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
m1__ self oldXyz__! !

!classDefinition: #AnotherclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:04'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__-toAvoid' stamp: 'HAW 5/7/2020 00:05:04'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04'!
newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04' prior: 50814980!
m1__ self newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04' prior: 50814988!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04' prior: 50814955!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:04' prior: 50814963!
m1__ self newXyz__! !

!methodRemoval: AnotherclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:04'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:04'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:04'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:04'!
oldXyz__!

!testRun: #RenameSelectorTest #test17ScopeToRenameCanBeCategoryOnly stamp: 'HAW 5/7/2020 00:05:04'!
PASSED!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 5/7/2020 00:05:05'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:05'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnotherclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:05'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__-Another' stamp: 'HAW 5/7/2020 00:05:05'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:05'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815089!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815093!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815097!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815101!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:05'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815114!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815118!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815123!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815127!
m1__ self oldXyz__! !

!classDefinition: #AnotheclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:05'!
RefactoringClassTestData subclass: #AnotheclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
m1__ self oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
m1__ self oldXyz__! !

!classDefinition: #OtherCatClassToRenameSelector category: #'__Refactoring-TestData__-Another' stamp: 'HAW 5/7/2020 00:05:05'!
RefactoringClassTestData subclass: #OtherCatClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
m1__ self oldXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__-toAvoid' stamp: 'HAW 5/7/2020 00:05:05'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815232!
newXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815224!
newXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
newXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
newXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' overrides: 50815224!
newXyz__! !
!AnotheclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815172!
m1__ self newXyz__! !
!AnotheclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815180!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815118 overrides: 50815093!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815127 overrides: 50815101!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815145 overrides: 50815274!
m1__ self newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815093!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815101!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815155 overrides: 50815279!
m1__ self newXyz__! !
!OtherCatClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815206!
m1__ self newXyz__! !
!OtherCatClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:05' prior: 50815198!
m1__ self newXyz__! !

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: AnotheclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: OtherCatClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: AnotheclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: OtherCatClassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:05'!
oldXyz__!

!testRun: #RenameSelectorTest #test18ScopeToRenameCanBeCategoriesAndHierarchyOnly stamp: 'HAW 5/7/2020 00:05:05'!
PASSED!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 5/7/2020 00:05:06'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-toAvoid'!

!classRemoval: #AnotheclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:06'!
RefactoringClassTestData subclass: #AnotheclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SubclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:07'!
ClassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:07'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:07'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!

!classRemoval: #OtherCatClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:07'!
RefactoringClassTestData subclass: #OtherCatClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__-Another'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:07'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:07'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:07'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
m1__ self oldXyz__! !

!classDefinition: #AnotherclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:08'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
oldXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
m1__ self oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
oldXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08' prior: 50815408!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08' prior: 50815416!
m1__ self newXyz__! !
!AnotherclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08' prior: 50815433!
m1__ self newXyz__! !
!AnotherclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:08' prior: 50815441!
m1__ self newXyz__! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:08'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:08'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:08'!
oldXyz__!

!methodRemoval: AnotherclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:08'!
oldXyz__!

!testRun: #RenameSelectorTest #test19ScopeToRenameCanBeTheCompleteSystem stamp: 'HAW 5/7/2020 00:05:08'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:08'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnotherclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:09'!
RefactoringClassTestData subclass: #AnotherclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorTest #test20CanNotRenameToItSelf stamp: 'HAW 5/7/2020 00:05:09'!
PASSED!

!testRun: #RenameSelectorTest #test21NewSelectorCanNotBeImplementedOnAnyClassImplementingOldSelector stamp: 'HAW 5/7/2020 00:05:09'!
PASSED!

!testRun: #RenameSelectorTest #test22WarnsWhenOverridesSuperclassImplementation stamp: 'HAW 5/7/2020 00:05:09'!
PASSED!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:10'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10' prior: 50815531!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10'!
m1 ^#(#oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10' prior: 50815543!
m1 ^#(#newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:10'!
oldXyz__!

!testRun: #RenameSelectorTest #test23OldSelectorIsRenamedWhenDefinedInLiteralArray stamp: 'HAW 5/7/2020 00:05:10'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:10'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:10'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10' prior: 50815578!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10'!
m1 ^#(#oldXyz__ #oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:10' prior: 50815590!
m1 ^#(#newXyz__ #newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:10'!
oldXyz__!

!testRun: #RenameSelectorTest #test24OldSelectorIsRenamedWhenDefinedInLiteralArrayMoreThanOnce stamp: 'HAW 5/7/2020 00:05:10'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:11'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:11'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:11'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:11'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:11' prior: 50815626!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:11'!
m1 ^#(#oldXyz__ #oldXyz__), #(#oldXyz__ #oldXyz__)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:11'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:11' prior: 50815638!
m1 ^#(#newXyz__ #newXyz__), #(#newXyz__ #newXyz__)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:11'!
oldXyz__!

!testRun: #RenameSelectorTest #test25OldSelectorIsRenamedWhenDefinedInMoreThanOneLiteralArrayMoreThanOnce stamp: 'HAW 5/7/2020 00:05:11'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:12'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:12'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12' prior: 50815676!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12'!
m1 ^#(#oldXyz__ #oldXyz__1)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12' prior: 50815688!
m1 ^#(#newXyz__ #oldXyz__1)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:12'!
oldXyz__!

!testRun: #RenameSelectorTest #test26DoesNotRenameLiteralsThatBeginsWithOldSelectorInsideLiteralArray stamp: 'HAW 5/7/2020 00:05:12'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:12'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:12'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12'!
m1__ self oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12' prior: 50815724!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12'!
m1 ^#(#oldXyz__ #oldXyz__:)! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:12' prior: 50815736!
m1 ^#(#newXyz__ #oldXyz__:)! !

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:12'!
oldXyz__!

!testRun: #RenameSelectorTest #test27DoesNotRenameLiteralsThatBeginsWithOldSelectorAndEndWithColonInsideLiteralArray stamp: 'HAW 5/7/2020 00:05:12'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:13'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:13'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:13'!
&& aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:13'!
m1 ^self && 1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:13'!
abc: aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:13' prior: 50815776!
m1 ^self abc: 1! !

!methodRemoval: ClassToRenameSelector #&& stamp: 'HAW 5/7/2020 00:05:13'!
&& aParameter!

!testRun: #RenameSelectorTest #test28CanRenameFromBinaryToKeywordOfOneParameter stamp: 'HAW 5/7/2020 00:05:13'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:14'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:14'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:14'!
abc: aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:14'!
m1 ^self abc: 1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:14'!
&& aParameter! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:14' prior: 50815815!
m1 ^self && 1! !

!methodRemoval: ClassToRenameSelector #abc: stamp: 'HAW 5/7/2020 00:05:14'!
abc: aParameter!

!testRun: #RenameSelectorTest #test29CanRenameFromKeywordOfOneParameterToBinary stamp: 'HAW 5/7/2020 00:05:14'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:14'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:14'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:14'!
&& aParameter! !

!testRun: #RenameSelectorTest #test30CanNotRenameFromBinaryToKeywordOfMoreThanOneParameter stamp: 'HAW 5/7/2020 00:05:14'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:15'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:15'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:15'!
abc: p1 def: p2! !

!testRun: #RenameSelectorTest #test31CanNotRenameFromKeywordOfOneParameterToBinary stamp: 'HAW 5/7/2020 00:05:15'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:15'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SuperclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:15'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:15'!
oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:15'!
m1__ self oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16'!
oldXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16'!
m1__ self oldXyz__! !

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:16'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815899!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815903!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815907!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815911!
m1__ self oldXyz__! !

!classDefinition: #SubclassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:16'!
SuperclassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815899!
oldXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815903!
m1__ self oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815907!
oldXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815911!
m1__ self oldXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16'!
newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815969!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815973!
newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815969!
newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' overrides: 50815973!
newXyz__! !
!SuperclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' prior: 50815903!
m1__ self newXyz__! !
!SuperclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' prior: 50815911!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' prior: 50815928 overrides: 50815994!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' prior: 50815937 overrides: 50815999!
m1__ self newXyz__! !
!SubclassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' prior: 50815955 overrides: 50815994!
m1__ self newXyz__! !
!SubclassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:16' prior: 50815965 overrides: 50815999!
m1__ self newXyz__! !

!methodRemoval: SuperclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:16'!
oldXyz__!

!methodRemoval: SuperclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:16'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:16'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:16'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:16'!
oldXyz__!

!methodRemoval: SubclassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:16'!
oldXyz__!

!testRun: #RenameSelectorTest #test32HierarchyScopeRenamesSelectorsFromSuperclassDefiningSelector stamp: 'HAW 5/7/2020 00:05:16'!
PASSED!

!classRemoval: #SubclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:16'!
SuperclassToRenameSelector subclass: #SubclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:17'!
SuperclassToRenameSelector subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #SuperclassToRenameSelector stamp: 'HAW 5/7/2020 00:05:17'!
RefactoringClassTestData subclass: #SuperclassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:17'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
oldXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
m1__ self oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
oldXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
m1__ self oldXyz__! !

!classDefinition: #ClassToAvoidRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:17'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
oldXyz__! !
!ClassToAvoidRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
m1__ self oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
m1__ self oldXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17' overrides: 16782761!
compilerClass ^nil! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17'!
newXyz__! !
!ClassToAvoidRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17' prior: 50816114!
m1__ self newXyz__! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17' prior: 50816081!
m1__ self newXyz__! !
!ClassToRenameSelector class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:17' prior: 50816089!
m1__ self newXyz__! !

!methodRemoval: ClassToAvoidRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:17'!
oldXyz__!

!methodRemoval: ClassToRenameSelector #oldXyz__ stamp: 'HAW 5/7/2020 00:05:17'!
oldXyz__!

!methodRemoval: ClassToRenameSelector class #oldXyz__ stamp: 'HAW 5/7/2020 00:05:17'!
oldXyz__!

!testRun: #RenameSelectorTest #test33DoNotRenameSendersAndImplementorsWhoseCompilerClassIsDifferentToCompiler stamp: 'HAW 5/7/2020 00:05:17'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:05:18'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAvoidRenameSelector stamp: 'HAW 5/7/2020 00:05:18'!
RefactoringClassTestData subclass: #ClassToAvoidRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test01VariableToRenameHasToBeDefined stamp: 'HAW 5/7/2020 00:05:18'!
PASSED!

!testRun: #RenameTemporaryTest #test02NewVariableNameCanNotBeEmpty stamp: 'HAW 5/7/2020 00:05:18'!
PASSED!

!testRun: #RenameTemporaryTest #test03NewVariableHasToBeValid stamp: 'HAW 5/7/2020 00:05:19'!
PASSED!

!testRun: #RenameTemporaryTest #test04NewVariableNameCanNotBeDefinedInMethod stamp: 'HAW 5/7/2020 00:05:19'!
PASSED!

!classDefinition: #ClassToRenameTemp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:19'!
RefactoringClassTestData subclass: #ClassToRenameTemp
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test05FailsIfNewTemporaryIsEqualToInstanceVariableInClass stamp: 'HAW 5/7/2020 00:05:19'!
PASSED!

!classRemoval: #ClassToRenameTemp stamp: 'HAW 5/7/2020 00:05:20'!
RefactoringClassTestData subclass: #ClassToRenameTemp
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRefactorSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:20'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameTemp category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:20'!
ClassToRefactorSuperclass subclass: #ClassToRenameTemp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test06FailsIfNewTemporaryIsEqualToInstanceVariableInAnySuperclass stamp: 'HAW 5/7/2020 00:05:20'!
PASSED!

!classRemoval: #ClassToRenameTemp stamp: 'HAW 5/7/2020 00:05:21'!
ClassToRefactorSuperclass subclass: #ClassToRenameTemp
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRefactorSuperclass stamp: 'HAW 5/7/2020 00:05:21'!
RefactoringClassTestData subclass: #ClassToRefactorSuperclass
	instanceVariableNames: 'new'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameTemporaryTest #test07RenameCreatesNewTemporaryVariableAndDeletesOldOne stamp: 'HAW 5/7/2020 00:05:21'!
PASSED!

!testRun: #RenameTemporaryTest #test08RenameChangesReferencesFromOldVariableToNewVariable stamp: 'HAW 5/7/2020 00:05:21'!
PASSED!

!testRun: #RenameTemporaryTest #test09RenamesArguments stamp: 'HAW 5/7/2020 00:05:22'!
PASSED!

!testRun: #RenameTemporaryTest #test10NewVariableNameCanNotBeDefinedAsBlockArgument stamp: 'HAW 5/7/2020 00:05:22'!
PASSED!

!testRun: #RenameTemporaryTest #test11RenamesBlockArguments stamp: 'HAW 5/7/2020 00:05:22'!
PASSED!

!testRun: #RenameTemporaryTest #test12RenamesBlockTemporaries stamp: 'HAW 5/7/2020 00:05:23'!
PASSED!

!testRun: #RenameTemporaryTest #test13OldNodeMustBePartOfMethodNode stamp: 'HAW 5/7/2020 00:05:23'!
PASSED!

!testRun: #RenameTemporaryTest #test14OldVariableNodeMustBeArgOrTempNode stamp: 'HAW 5/7/2020 00:05:23'!
PASSED!

!testRun: #RenameTemporaryTest #test15RenameVariablesWithSameNameInDifferentBlocksCorrectly stamp: 'HAW 5/7/2020 00:05:24'!
PASSED!

!testRun: #RenameTemporaryTest #test16CantRenameVariableToANameAlreadyUsedInAnUpperBlock stamp: 'HAW 5/7/2020 00:05:24'!
PASSED!

!testRun: #RenameTemporaryTest #test17RenamesOneCharVariableAfterAReturnWithoutCharsAfterThatCorrectly stamp: 'HAW 5/7/2020 00:05:25'!
PASSED!

!testRun: #RenameTemporaryTest #test18CantRenameVariableToAReservedName stamp: 'HAW 5/7/2020 00:05:25'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:25'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:26'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test02ClassesWithNoReferencesAndNoSubclassesAreSafetelyRemoved stamp: 'HAW 5/7/2020 00:05:26'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:26'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:26'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test03RemovingTheMetaclassRemovesTheClass stamp: 'HAW 5/7/2020 00:05:26'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:27'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:27'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:27'!
m1 ^ClassToRemove! !

!testRun: #SafelyRemoveClassTest #test04CanNotRemoveClassWithReferencesOutsideHierarchy stamp: 'HAW 5/7/2020 00:05:27'!
PASSED!

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:27'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemove stamp: 'HAW 5/7/2020 00:05:28'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:28'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:28'!
m1 ^ClassToRemove! !

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:28'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test05CanRemoveClassWithReferencesFromItself stamp: 'HAW 5/7/2020 00:05:28'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:28'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:28'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test06WarnIfClassToRemoveHasSubclasses stamp: 'HAW 5/7/2020 00:05:28'!
PASSED!

!classRemoval: #ClassToRemoveSubclass stamp: 'HAW 5/7/2020 00:05:29'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:29'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:29'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:29'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:29'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemoveSubclass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:29'!
m1 ^ClassToRemoveSubclass! !

!testRun: #SafelyRemoveClassTest #test07CanNotRemoveClassWhenSubclassesHaveReferencesOutsideTheHierarchy stamp: 'HAW 5/7/2020 00:05:29'!
PASSED!

!classRemoval: #ClassToRemoveSubclass stamp: 'HAW 5/7/2020 00:05:30'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:30'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemoveSubclass stamp: 'HAW 5/7/2020 00:05:30'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:31'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:31'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveSubclass stamp: 'HAW 5/7/2020 00:05:31'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:31'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test08HierarchyIsRemovedIfSubclassesWarningIsResumed stamp: 'HAW 5/7/2020 00:05:31'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:32'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveSubclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:32'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:32'!
m1 ^ClassToRemoveSubclass! !
!ClassToRemoveSubclass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:32'!
m2 ^ClassToRemove! !

!classRemoval: #ClassToRemoveSubclass stamp: 'HAW 5/7/2020 00:05:32'!
ClassToRemove subclass: #ClassToRemoveSubclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:32'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #SafelyRemoveClassTest #test09CanRemoveIfReferencesToSubclassesAreInTheHierarchy stamp: 'HAW 5/7/2020 00:05:32'!
PASSED!

!classDefinition: #ClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:33'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassReferencingClassToRemove category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:33'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassReferencingClassToRemove methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:33'!
m1 ^#ClassToRemove! !

!testRun: #SafelyRemoveClassTest #test10WarnWhenHasReferencesToName stamp: 'HAW 5/7/2020 00:05:33'!
PASSED!

!classRemoval: #ClassToRemove stamp: 'HAW 5/7/2020 00:05:33'!
RefactoringClassTestData subclass: #ClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassReferencingClassToRemove stamp: 'HAW 5/7/2020 00:05:33'!
RefactoringClassTestData subclass: #ClassReferencingClassToRemove
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:34'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:34'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:34' prior: 50816614!
m1 ! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:34'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test01ApplyChangesTemporaryVariableToInstanceVariable stamp: 'HAW 5/7/2020 00:05:34'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:34'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:34'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:34'!
m1| a |a := 2.
	^a! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:34' prior: 50816651!
m1 a := 2.
	^a! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:34'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test02ApplyDoesntChangeRestOfSourceCode stamp: 'HAW 5/7/2020 00:05:34'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:35'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:35'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:35'!
m1! !

!testRun: #TemporaryToInstanceVariableTest #test03TemporaryToChangeShouldExist stamp: 'HAW 5/7/2020 00:05:35'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:35'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:36'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:36'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:36'!
m2| a |! !

!testRun: #TemporaryToInstanceVariableTest #test04TemporaryShouldNotExistInOtherClassMethod stamp: 'HAW 5/7/2020 00:05:36'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:36'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:36'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:36'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:36'!
m1| a |! !

!testRun: #TemporaryToInstanceVariableTest #test05InstanceVariableShouldNotExistInSubclass stamp: 'HAW 5/7/2020 00:05:36'!
PASSED!

!classRemoval: #SubclassToRefactor stamp: 'HAW 5/7/2020 00:05:37'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:37'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:37'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #SubclassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:37'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:37'!
m1| a |! !
!SubclassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:37'!
m2| a |! !

!testRun: #TemporaryToInstanceVariableTest #test06TemporaryShouldNotExistInSubclassMethod stamp: 'HAW 5/7/2020 00:05:37'!
PASSED!

!classRemoval: #SubclassToRefactor stamp: 'HAW 5/7/2020 00:05:38'!
ClassToChangeVariable subclass: #SubclassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:38'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:38'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:38'!
m1| a |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:38' prior: 50816824!
m1 ! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:38'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test07RemovesPipesWhenRemovingLastTemporaryInMethod stamp: 'HAW 5/7/2020 00:05:38'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:39'!
m1| a b |! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:39' prior: 50816861!
m1|  b |! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test08DoesntRemoveOtherVariables stamp: 'HAW 5/7/2020 00:05:39'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:39'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:39'!
m1
	[ | a | ].
	[ | a | ].! !

!testRun: #TemporaryToInstanceVariableTest #test09TemporaryShouldNotExistInOtherBlockInSameMethod stamp: 'HAW 5/7/2020 00:05:39'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:40'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:40'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:40'!
m1
	[ | a | ].! !
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:40' prior: 50816923!
m1
	[   ].! !

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:40'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #TemporaryToInstanceVariableTest #test10RemovesPipesWhenRemovingLastTemporaryInBlock stamp: 'HAW 5/7/2020 00:05:40'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: 'a'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:41'!
m1 [ | a | ]. [ :a | ].! !

!testRun: #TemporaryToInstanceVariableTest #test11TemporaryShouldNotExistAsArgumentInOtherBlocksInSameMethod stamp: 'HAW 5/7/2020 00:05:41'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToChangeVariable category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:41'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToChangeVariable methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:41'!
m1: a! !

!testRun: #TemporaryToInstanceVariableTest #test12CantExtractArgument stamp: 'HAW 5/7/2020 00:05:41'!
PASSED!

!classRemoval: #ClassToChangeVariable stamp: 'HAW 5/7/2020 00:05:42'!
RefactoringClassTestData subclass: #ClassToChangeVariable
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:42'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:42'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test01MethodObjectClassNameMustNotBeEmpty stamp: 'HAW 5/7/2020 00:05:42'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:42'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:43'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:43'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test02MethodObjectClassNameMustBeASymbol stamp: 'HAW 5/7/2020 00:05:43'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:43'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:44'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:44'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test03MethodObjectClassNameMustStartWithUppercaseLetter stamp: 'HAW 5/7/2020 00:05:44'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:44'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:44'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:44'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test04MethodObjectClassNameMustNotHaveSeparators stamp: 'HAW 5/7/2020 00:05:44'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:45'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:45'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:45'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:45'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:45'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test05MethodObjectClassNameMustNotExist stamp: 'HAW 5/7/2020 00:05:45'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:46'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:46'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:46'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test06AllVariablesToParametrizeMustHaveACorrespondingMethodObjectInstanceVariableName stamp: 'HAW 5/7/2020 00:05:46'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:47'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:47'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:47'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test07AllInstanceVariableNamesMustCorrespondToVariableToParametrize stamp: 'HAW 5/7/2020 00:05:47'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:48'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:48'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:48'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test08MethodObjectInstanceVariableNamesMustNotBeEmpty stamp: 'HAW 5/7/2020 00:05:48'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:49'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:49'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:49'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test09MethodObjectInstanceVariableNamesCanNotContainBlanks stamp: 'HAW 5/7/2020 00:05:49'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:50'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:50'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:50'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test10MethodObjectInstanceVariableNamesCanNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:05:50'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:50'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:51'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:51'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: 'anInstVarName'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:51'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:51'!
m1
		self isNil.! !

!testRun: #ExtractToMethodObjectTest #test11MethodObjectInstanceVariableNamesCanNotBeDefinedInSuperclasses stamp: 'HAW 5/7/2020 00:05:51'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:51'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: 'anInstVarName'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:52'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:52'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:52'!
m1
		self isNil.
		anInstVar isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:52'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test12MethodObjectInstanceVariableNamesCanNotBeDuplicated stamp: 'HAW 5/7/2020 00:05:52'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:52'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:05:52'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:52'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:52'!
m1
		| aTemporal |

		aTemporal := 1.
		self isNil.

		^aTemporal + 2! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:52'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test13MethodObjectInstanceVariableNamesCanNotBeNamedAsMethodTemporal stamp: 'HAW 5/7/2020 00:05:52'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:53'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:05:53'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:53'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:53'!
m1
		^[
			| aBlockTemporal |

			self isNil.
			aBlockTemporal.]! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:53'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test14MethodObjectInstanceVariableNamesCanNotBeNamedAsBlockTemporal stamp: 'HAW 5/7/2020 00:05:53'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:54'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:05:54'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:54'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:54'!
m1
		^[:aBlockArgument |
			self isNil.
			aBlockArgument.]! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:54'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test15MethodObjectInstanceVariableNamesCanNotBeNamedAsBlockArgument stamp: 'HAW 5/7/2020 00:05:54'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:55'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:05:55'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:55'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:55'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:55'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test16MethodObjectInstanceCreationMessageMustHaveAKeywordForEveryVariableToParametrize stamp: 'HAW 5/7/2020 00:05:55'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:56'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:56'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:56'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:56'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:56'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test17MethodObjectInstanceCreationMessageMustHaveOnlyOneKeywordForEveryVariableToParametrize stamp: 'HAW 5/7/2020 00:05:56'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:57'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:57'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:57'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:57'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:57'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test18MethodObjectInstanceCreationMessageMustNotHaveKeywordForAnUnknownVariableToParametrize stamp: 'HAW 5/7/2020 00:05:57'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:58'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:58'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:58'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:58'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:58'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test19MethodObjectInstanceCreationMessageKeywordsCanNotHaveInvalidCharacters stamp: 'HAW 5/7/2020 00:05:58'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:58'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:05:59'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:59'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:05:59'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:05:59'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test20MethodObjectInstanceCreationMessageSelectorStartsWithAnInvalidStartOfSelector stamp: 'HAW 5/7/2020 00:05:59'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:05:59'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:00'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:00'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:00'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:00'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test21MethodObjectInstanceCreationMessageKeywordsCannotBeEmpty stamp: 'HAW 5/7/2020 00:06:00'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:00'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:01'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:01'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:01'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:01'!
m1! !

!testRun: #ExtractToMethodObjectTest #test22MethodObjectSuperclassCannotBeMeta stamp: 'HAW 5/7/2020 00:06:01'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:01'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:01'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:01'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:01'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:01'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:01'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:01'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:01' prior: 50817875!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test23CreatesMethodObjectClass stamp: 'HAW 5/7/2020 00:06:02'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:02'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:02'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:03'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:03'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:03'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:03'!
m1! !

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:03'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:03'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:03' prior: 50817945!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test24CreatesMethodObjectClassAsSubclassOfTheChosenSuperclass stamp: 'HAW 5/7/2020 00:06:03'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:03'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:04'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:04'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:04'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:04'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:04'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:04'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:04'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:04' prior: 50817998!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test25CreatesMethodObjectClassInTheChosenCategory stamp: 'HAW 5/7/2020 00:06:04'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:04'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:05'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:05'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:05'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:05'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:05'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:05'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:05'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:05'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:05'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:05' prior: 50818059!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test26MethodObjectClassInstanceCreationMessageReceivesTheSameNumberOfArgumentsAsVariablesToParametrizeInMethodToExtract stamp: 'HAW 5/7/2020 00:06:05'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:06'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:06'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:06'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:06'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:06'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:06'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:06'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:06'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:06'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:06'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:06' prior: 50818135!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test27MethodObjectClassInstanceCreationMessageSelectorConsistsOfTheChosenKeywords stamp: 'HAW 5/7/2020 00:06:06'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:07'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:07'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:07'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:07'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:07'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:07'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:07'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:07'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:07'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:07'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:07' prior: 50818210!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test28MethodObjectClassInstanceCreationMessageCreatesARefactoringInstance stamp: 'HAW 5/7/2020 00:06:07'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:08'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:08'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:08'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:08'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:08'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:08'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:09'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:09'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:09'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:09'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:09' prior: 50818285!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test29MethodObjectInitializationMessageReceivesTheSameNumberOfArgumentsAsVariablesToParametrizeInMethodToExtract stamp: 'HAW 5/7/2020 00:06:09'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:09'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:09'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:10'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:10'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:10'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:10'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:10'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:10'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:10'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:10'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:10' prior: 50818361!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test30MethodObjectInitializationMessageSelectorConsistsOfTheChosenKeywordsPrefixedWithInitializationPrefix stamp: 'HAW 5/7/2020 00:06:10'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:10'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:11'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:11'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:11'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:11'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:11'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:11'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:11'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:11'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:11'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:11' prior: 50818437!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test31MethodObjectInitializationMessageAssignsTheInstanceVariables stamp: 'HAW 5/7/2020 00:06:11'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:12'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:12'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:12'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:12'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:12'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:12'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:12'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:12'!
aCustomEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:12' prior: 50818512!
m1
	(MethodObject new) aCustomEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test32MethodObjectEvaluationMessageHasTheChosenSelector stamp: 'HAW 5/7/2020 00:06:12'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:13'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:13'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:13'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:13'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:13'!
m1
	self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:13'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:13'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:13'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:13'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:13'!
defaultEvaluationSelector
	thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:13' prior: 50818574!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test33MethodObjectEvaluationMethodSourceCodeHasTheSameFormatAsTheExtractedMethod stamp: 'HAW 5/7/2020 00:06:13'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:14'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:14'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:14'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:14'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:14'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:15'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:15'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:15'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:15'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:15'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:15' prior: 50818649!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test34MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfSelf stamp: 'HAW 5/7/2020 00:06:15'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:15'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:15'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:16'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:16'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:16'!
m1
		anInstVar isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:16'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:16'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:16'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:16'!
initializeWith: aParamName
	aCorrespondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:16'!
defaultEvaluationSelector
		aCorrespondingInstVar isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:16' prior: 50818725!
m1
	(MethodObject with: anInstVar) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test35MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfClassToRefactorInstanceVariable stamp: 'HAW 5/7/2020 00:06:16'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:16'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:17'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:17'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:17'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:17'!
m1: anArg
		anArg isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:17'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:17'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'anArgReplacement'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:17'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:17'!
initializeWith: aParamName
	anArgReplacement := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:17'!
defaultEvaluationSelector
		anArgReplacement isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:17' prior: 50818803!
m1: anArg
	(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test36MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfExtractedMethodArgument stamp: 'HAW 5/7/2020 00:06:17'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:17'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'anArgReplacement'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:18'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:18'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #APool category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:18'!
SharedPool subclass: #APool
	instanceVariableNames: ''
	classVariableNames: 'APoolVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:18'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'APool'
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:18'!
m1
		APoolVar isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:18'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:18'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:18'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:18'!
initializeWith: aParamName
	aCorrespondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:18'!
defaultEvaluationSelector
		aCorrespondingInstVar isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:18' prior: 50818888!
m1
	(MethodObject with: APoolVar) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test37MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfClassToRefactorPoolVariable stamp: 'HAW 5/7/2020 00:06:18'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:19'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'APool'
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:19'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:19'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #APool stamp: 'HAW 5/7/2020 00:06:19'!
SharedPool subclass: #APool
	instanceVariableNames: ''
	classVariableNames: 'APoolVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:19'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:19'!
m1
		"A comment talking about self"
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:19'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:19'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:19'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:19'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:19'!
defaultEvaluationSelector
		"A comment talking about self"
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:19' prior: 50818972!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test38MethodObjectEvaluationMethodSourceCodeCommentsReferencingParametrizedVariableAreNotReplaced stamp: 'HAW 5/7/2020 00:06:19'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:20'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:20'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:21'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:21'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test39MethodObjectEvaluationMethodSourceCodePreservesBlockArgumentsShadowing stamp: 'HAW 5/7/2020 00:06:21'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:21'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:21'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test40MethodObjectEvaluationMethodSourceCodePreservesBlockTemporalsShadowing stamp: 'HAW 5/7/2020 00:06:21'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:22'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:22'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:22'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:22'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:22'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:22'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:22' prior: 50819089!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test41RefactoredMethodUnarySelectorIsPreserved stamp: 'HAW 5/7/2020 00:06:22'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:23'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:23'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:23'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:23'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:23'!
!!@ anArg ^anArg.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:23'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:23'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:23'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:23'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:23'!
defaultEvaluationSelector ^correspondingInstVar.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:23' prior: 50819150!
!!@ anArg
	^(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test42RefactoredMethodBinarySelectorIsPreserved stamp: 'HAW 5/7/2020 00:06:23'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:24'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:24'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:24'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:24'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:24'!
m1: anArg ^anArg.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:24'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:24'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:24'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:24'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:24'!
defaultEvaluationSelector ^correspondingInstVar.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:24' prior: 50819225!
m1: anArg
	^(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test43RefactoredMethodKeywordSelectorIsPreserved stamp: 'HAW 5/7/2020 00:06:24'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:25'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:25'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:26'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:26'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:26'!
!!@ anArg ^anArg.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:26'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:26'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:26'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:26'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:26'!
defaultEvaluationSelector ^correspondingInstVar.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:26' prior: 50819301!
!!@ anArg
	^(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test44WhenBinaryMethodIsRefactoredArgumentNameIsPreserved stamp: 'HAW 5/7/2020 00:06:26'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:26'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:27'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:27'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:27'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:27'!
m1: anArg ^anArg.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:27'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:27'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:27'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:27'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:27'!
defaultEvaluationSelector ^correspondingInstVar.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:27' prior: 50819377!
m1: anArg
	^(MethodObject with: anArg) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test45WhenKeywordsMethodIsRefactoredArgumentNamesArePreserved stamp: 'HAW 5/7/2020 00:06:27'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:27'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:28'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:28'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:28'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:28'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:28'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:28'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:28'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:28' prior: 50819453!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test46WhenThereAreNoVariablesToParametrizeTheRefactoredMethodUsesTheNewMessageToCreateTheMethodObjectInstance stamp: 'HAW 5/7/2020 00:06:28'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:29'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:29'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:29'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:29'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:29'!
m1 ^self isNil! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:29'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:29'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:29'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:29'!
initializeWith: aParamName
	correspondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:29'!
defaultEvaluationSelector ^correspondingInstVar isNil! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:29' prior: 50819516!
m1
	^(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test47WhenThereAreVariablesToParametrizeTheRefactoredMethodUsesTheChosenMessageToCreateTheMethodObjectInstance stamp: 'HAW 5/7/2020 00:06:29'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:30'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'correspondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:30'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:30'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:30'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:30'!
m1: anArg ^(self isNil) or: (anArg isNil)! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:30'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:30'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'anArgCorrespondingInstVar selfCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:30'!
with: anArgParamName andWith: aSelfParamName
	^self new initializeWith: anArgParamName andWith: aSelfParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:30'!
initializeWith: anArgParamName andWith: aSelfParamName
	anArgCorrespondingInstVar := anArgParamName.
	selfCorrespondingInstVar := aSelfParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:30'!
defaultEvaluationSelector ^(selfCorrespondingInstVar isNil) or: (anArgCorrespondingInstVar isNil)! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:30' prior: 50819592!
m1: anArg
	^(MethodObject with: anArg andWith: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test48WhenThereAreMultipleVariablesToParametrizeTheRefactoredMethodPassesTheVariablesInTheChosenOrderToTheMessageToCreateTheMethodObjectInstance stamp: 'HAW 5/7/2020 00:06:30'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:31'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'anArgCorrespondingInstVar selfCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:31'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:31'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:31'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:31'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:32'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:32'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:32'!
defaultEvaluationSelector! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:32' prior: 50819679!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test49TheRefactoredMethodUsesTheChosenEvaluationSelectorToEvaluateTheMethodObjectInstance stamp: 'HAW 5/7/2020 00:06:32'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:32'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:32'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:33'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:33'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:33'!
m1
		| a |

		a := 1 + 1.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:33'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:33'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:33'!
defaultEvaluationSelector
		| a |

		a := 1 + 1.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:33' prior: 50819742!
m1
	(MethodObject new) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test50TheRefactoredMethodPreservesTheImplicitReturn stamp: 'HAW 5/7/2020 00:06:33'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:33'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:34'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:34'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:34'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:34'!
m1 ^super isNil! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:34'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test51TheMethodToExtractMustNotReferenceSuper stamp: 'HAW 5/7/2020 00:06:34'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:34'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:35'!
m1
		anInstVar := 2.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:35'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test52TheMethodToExtractMustNotContainInstVarAssignments stamp: 'HAW 5/7/2020 00:06:35'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:35'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:36'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:36'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:36'!
m1
		AClassVar := 2.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:36'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test53TheMethodToExtractMustNotContainClassVarAssignments stamp: 'HAW 5/7/2020 00:06:36'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:36'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:36'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #APool category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:37'!
SharedPool subclass: #APool
	instanceVariableNames: ''
	classVariableNames: 'APoolVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:37'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'APool'
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:37'!
m1
		APoolVar := 2.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:37'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test54TheMethodToExtractMustNotContainPoolVarAssignments stamp: 'HAW 5/7/2020 00:06:37'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:37'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'APool'
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:37'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #APool stamp: 'HAW 5/7/2020 00:06:38'!
SharedPool subclass: #APool
	instanceVariableNames: ''
	classVariableNames: 'APoolVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:38'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:38'!
m1
		AClassVar isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:38'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:38'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:38'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:38'!
initializeWith: aParamName
	aCorrespondingInstVar := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:38'!
defaultEvaluationSelector
		aCorrespondingInstVar isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:38' prior: 50819973!
m1
	(MethodObject with: AClassVar) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test55MethodObjectEvaluationMethodSourceCodeReferencesCorrespondingInstanceVariableInsteadOfClassToRefactorClassVariable stamp: 'HAW 5/7/2020 00:06:38'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:38'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:39'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'aCorrespondingInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:39'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:39'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:39'!
m1 self = anInstVar ifTrue: [^1] ifFalse: [^2]! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:39'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test56MethodObjectInstanceCreationMessageParameterNamesMustNotRepeat stamp: 'HAW 5/7/2020 00:06:39'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:39'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:40'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:40'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:40'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:40'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test57MethodObjectInstanceCreationMessageParameterNamesMustNotBeEmpty stamp: 'HAW 5/7/2020 00:06:40'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:40'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:41'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:41'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test58MethodObjectInstanceCreationMessageParameterNamesMustNotContainSeparators stamp: 'HAW 5/7/2020 00:06:41'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:41'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:42'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:42'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test59MethodObjectInstanceCreationMessageParameterNamesMustNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:06:42'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:42'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:42'!
m1 self = anInstVar ifTrue: [^1] ifFalse: [^2]! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:42'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test60MethodObjectInstanceCreationMessageParameterNamesMustNotBeEqualToAMethodObjectInstanceVariable stamp: 'HAW 5/7/2020 00:06:42'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:43'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:43'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:43'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:43'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:43'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:43'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:43'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:43' prior: 50820250!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test61MethodObjectClassInstanceCreationMessageParameterNamesAreTheChosenOnes stamp: 'HAW 5/7/2020 00:06:43'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:44'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:44'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:45'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:45'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:45'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:45'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:45'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:45'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:45'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:45' prior: 50820325!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test62MethodObjectInstanceCreationMessageParameterNamesAreTheChosenOnes stamp: 'HAW 5/7/2020 00:06:45'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:45'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:45'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:46'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:46'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:46'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:46'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:46'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:46'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:46'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:46' prior: 50820400!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test63MethodObjectInstanceInitializationMessageIsCategorizedAsInitialization stamp: 'HAW 5/7/2020 00:06:46'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:46'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:47'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:47'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:47'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:47'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:47'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:47'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:47'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:47'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:47' prior: 50820475!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test64MethodObjectInstanceCreationMessageIsCategorizedAsInstanceCreation stamp: 'HAW 5/7/2020 00:06:47'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:48'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:48'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:48'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:48'!
m1
		self isNil.! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:48'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #MethodObject category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:48'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!MethodObject class methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:48'!
with: aParamName
	^self new initializeWith: aParamName! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:48'!
initializeWith: aParamName
	thePreviousSelf := aParamName.! !
!MethodObject methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:48'!
defaultEvaluationSelector
		thePreviousSelf isNil.! !
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:48' prior: 50820550!
m1
	(MethodObject with: self) defaultEvaluationSelector! !

!testRun: #ExtractToMethodObjectTest #test65MethodObjectEvaluationMessageIsCategorizedAsEvaluating stamp: 'HAW 5/7/2020 00:06:48'!
PASSED!

!classRemoval: #MethodObject stamp: 'HAW 5/7/2020 00:06:49'!
MethodObjectSuperclass subclass: #MethodObject
	instanceVariableNames: 'thePreviousSelf'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:49'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:49'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:49'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:49'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test66MethodObjectEvaluationSelectorMustNotBeEmpty stamp: 'HAW 5/7/2020 00:06:49'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:50'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:50'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:50'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:50'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test67MethodObjectEvaluationSelectorMustNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:06:50'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:51'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:51'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:51'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:51'!
m1! !

!classDefinition: #MethodObjectSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:51'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #ExtractToMethodObjectTest #test68MethodObjectEvaluationSelectorMustNotStartWithAnInvalidStartOfSelector stamp: 'HAW 5/7/2020 00:06:51'!
PASSED!

!classRemoval: #MethodObjectSuperclass stamp: 'HAW 5/7/2020 00:06:52'!
RefactoringClassTestData subclass: #MethodObjectSuperclass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:06:52'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:52'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IfNilChecksFinderTest #test01InstanceVariableMustBelongToTheClass stamp: 'HAW 5/7/2020 00:06:52'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:53'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:53'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IfNilChecksFinderTest #test02WhenThereAreNoIfNilChecksTheResultIsEmpty stamp: 'HAW 5/7/2020 00:06:53'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:53'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:53'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:53'!
m1 randomInstVar ifNil: [ 1 + 1 ]! !

!testRun: #IfNilChecksFinderTest #test03ResultIncludesIfNilMessageSending stamp: 'HAW 5/7/2020 00:06:53'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:54'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:54'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:54'!
m1 randomInstVar ifNotNil: [ 1 + 1 ]! !

!testRun: #IfNilChecksFinderTest #test04ResultIncludesIfNotNilMessageSending stamp: 'HAW 5/7/2020 00:06:54'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:54'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:54'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:54'!
m1 randomInstVar ifNil: [ 2 + 2 ] ifNotNil: [ 1 + 1 ]! !

!testRun: #IfNilChecksFinderTest #test05ResultIncludesIfNilIfNotNilMessageSending stamp: 'HAW 5/7/2020 00:06:54'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:55'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:55'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:55'!
m1 randomInstVar ifNotNil: [ 2 + 2 ] ifNil: [ 1 + 1 ]! !

!testRun: #IfNilChecksFinderTest #test06ResultIncludesIfNotNilIfNilMessageSending stamp: 'HAW 5/7/2020 00:06:55'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:56'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:56'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:56'!
m1 randomInstVar isNil ifTrue: [ 2 + 2 ]! !

!testRun: #IfNilChecksFinderTest #test07ResultIncludesIsNilIfTrueMessageSending stamp: 'HAW 5/7/2020 00:06:56'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:56'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:56'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:56'!
m1 randomInstVar isNil ifFalse: [ 2 + 2 ]! !

!testRun: #IfNilChecksFinderTest #test08ResultIncludesIsNilIfFalseMessageSending stamp: 'HAW 5/7/2020 00:06:56'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:57'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:57'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:57'!
m1 randomInstVar isNil ifTrue: [1 + 1] ifFalse: [ 2 + 2 ]! !

!testRun: #IfNilChecksFinderTest #test09ResultIncludesIsNilIfTrueIfFalseMessageSending stamp: 'HAW 5/7/2020 00:06:57'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:57'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:58'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:58'!
m1 randomInstVar isNil ifFalse: [1 + 1] ifTrue: [ 2 + 2 ]! !

!testRun: #IfNilChecksFinderTest #test10ResultIncludesIsNilIfFalseIfTrueMessageSending stamp: 'HAW 5/7/2020 00:06:58'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:58'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:58'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:58'!
m1 randomInstVar ifNil: [1 + 1].randomInstVar ifNotNil: [1 + 1].! !

!testRun: #IfNilChecksFinderTest #test11WhenThereAreMultipleIfNilChecksInTheSameMethodTheResultIncludesAllOfThem stamp: 'HAW 5/7/2020 00:06:58'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:59'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:59'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:59'!
m1 randomInstVar ifNil: [1 + 1]! !
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:59'!
m2 randomInstVar ifNil: [2 + 2]! !

!testRun: #IfNilChecksFinderTest #test12WhenThereAreIfNilChecksInMultipleMethodsTheResultIncludesAllOfThem stamp: 'HAW 5/7/2020 00:06:59'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:06:59'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ContextClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:06:59'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ContextClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:06:59'!
m1 randomInstVar ifNil: [1 + 1].randomInstVar ifNil: [1 + 1].! !

!testRun: #IfNilChecksFinderTest #test13WhenThereAreMultipleIfNilChecksInTheSameMethodWithTheSameCodeTheResultIncludesAllOfThem stamp: 'HAW 5/7/2020 00:06:59'!
PASSED!

!classRemoval: #ContextClass stamp: 'HAW 5/7/2020 00:07:00'!
RefactoringClassTestData subclass: #ContextClass
	instanceVariableNames: 'randomInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:00'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:00'!
m1 anInstVar ifNil: [ super isNil ]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:00'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:00'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test01BlocksToExtractMustNotContainReferencesToSuper stamp: 'HAW 5/7/2020 00:07:00'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 5/7/2020 00:07:01'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 5/7/2020 00:07:01'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:01'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:01'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:01'!
m1 anInstVar ifNil: [ anInstVar := 1 ]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:01'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:01'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test02BlocksToExtractMustNotContainAssignmentsToVariablesThatAreNotTemporals stamp: 'HAW 5/7/2020 00:07:01'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 5/7/2020 00:07:02'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 5/7/2020 00:07:02'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:02'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:02'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:02'!
m1 anInstVar ifNil: [
			1 = 2 ifFalse: [ |aTemp| aTemp := 3]]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:02'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:02'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test03BlocksToExtractCanAssignToTemporalsOfNestedBlocks stamp: 'HAW 5/7/2020 00:07:02'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 5/7/2020 00:07:03'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 5/7/2020 00:07:03'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:03'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:03'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:03'!
m1 anInstVar ifNil: [ |aTemp| aTemp := 2]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:03'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:04'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test04BlocksToExtractCanAssignToTemporalsOfBlocks stamp: 'HAW 5/7/2020 00:07:04'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 5/7/2020 00:07:04'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 5/7/2020 00:07:04'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:05'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:05'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:05'!
m1 anInstVar ifNil: [^anInstVar is Nil]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:05'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:05'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test07BlocksToExtractMustNotContainReturnStatements stamp: 'HAW 5/7/2020 00:07:05'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 5/7/2020 00:07:05'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 5/7/2020 00:07:06'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:06'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactorSuperclass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:06'!
RefactoringClassTestData subclass: #AClassToRefactorSuperclass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:06'!
AClassToRefactorSuperclass subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:06'!
m1 anInstVar ifNil: [anInstVar isNil ]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:06'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:06'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test08InstanceVariableMustBelongToTheClassToRefactor stamp: 'HAW 5/7/2020 00:07:06'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 5/7/2020 00:07:07'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 5/7/2020 00:07:07'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:07'!
AClassToRefactorSuperclass subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactorSuperclass stamp: 'HAW 5/7/2020 00:07:07'!
RefactoringClassTestData subclass: #AClassToRefactorSuperclass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:07'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:07'!
m1 anInstVar ifNil: [anInstVar isNil ]! !

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:07'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test09ConcreteClassMustBeDifferentToNullClass stamp: 'HAW 5/7/2020 00:07:07'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:08'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:07:08'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:08'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClasOutsideTheHierarchy category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:08'!
RefactoringClassTestData subclass: #AClasOutsideTheHierarchy
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClasOutsideTheHierarchy methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:08'!
m1 anInstVar ifNil: [anInstVar isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:08'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:08'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test10MethodsMustBelongToTheHierarchyToRefactor stamp: 'HAW 5/7/2020 00:07:08'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:09'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:09'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:09'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClasOutsideTheHierarchy stamp: 'HAW 5/7/2020 00:07:10'!
RefactoringClassTestData subclass: #AClasOutsideTheHierarchy
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:10'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:10'!
m1 anInstVar ifNil: [anInstVar isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:10'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:10'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test13MessageNodesMustNotBeDuplicated stamp: 'HAW 5/7/2020 00:07:10'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:10'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:11'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:11'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:11'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:11'!
m1 self ifNil: [anInstVar isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:11'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:11'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test14MessageNodesReceiverMustBeTheInstVar stamp: 'HAW 5/7/2020 00:07:11'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:12'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:12'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:12'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:12'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:12'!
m1 anInstVar ifNil: [ 1 + 1 ]! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:12'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:12'!
unaryPolymorphicSelector! !

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:12'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test15ConcreteClassMustNotContainAnyPolymorphicSelector stamp: 'HAW 5/7/2020 00:07:12'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 5/7/2020 00:07:13'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 5/7/2020 00:07:13'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:13'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:13'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:13'!
m1 anInstVar ifNil: [ 1 + 1 ]! !

!classDefinition: #NullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:13'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!NullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:13'!
unaryPolymorphicSelector! !

!classDefinition: #ConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:13'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #IntroduceNullObjectTest #test16NullClassMustNotContainAnyPolymorphicSelector stamp: 'HAW 5/7/2020 00:07:13'!
PASSED!

!classRemoval: #NullClass stamp: 'HAW 5/7/2020 00:07:14'!
RefactoringClassTestData subclass: #NullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ConcreteClass stamp: 'HAW 5/7/2020 00:07:14'!
RefactoringClassTestData subclass: #ConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:14'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:15'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:15'!
m1 anInstVar ifNil: [ 1 + 1 ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:15'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:15'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:15'!
replaceIfNilSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:15'!
replaceIfNilSelector
	1 + 1! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:15' prior: 50821745!
m1 anInstVar replaceIfNilSelector! !

!testRun: #IntroduceNullObjectTest #test17WhenThereAreNoVariablesToParametrizeReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:15'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:15'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:15'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:16'!
m1 anInstVar ifNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:16'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:16'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:16'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:16'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:16' prior: 50821814!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test18WhenThereAreVariablesToParametrizeReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:16'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:16'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:17'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:17'!
m1 anInstVar ifNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:17'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:17'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:17'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:17'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:17' prior: 50821881!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test19WhenIfNilCheckHasOneKeywordReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:17'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:18'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:18'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:18'!
m1 anInstVar ifNil: [ self isNil ] ifNotNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:18'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:18'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:18'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:18'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:18' prior: 50821948!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test20WhenIfNilCheckHasTwoKeywordsReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:18'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:19'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:19'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:19'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:19'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:19'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:19'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:19'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:19'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:19'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:19' prior: 50822017!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test21WhenIfNilCheckHasIsNilReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:19'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:20'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:20'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:21'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:21'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:21'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:21'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:21'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:21' prior: 50822086!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test22PolymorphicMessageIsAddedToTheConcreteClass stamp: 'HAW 5/7/2020 00:07:21'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:21'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:22'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:22'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:22'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:22'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:22'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:22'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:22' prior: 50822154!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test23PolymorphicMessageIsAddedToTheConcreteClassWithChosenParameterNames stamp: 'HAW 5/7/2020 00:07:22'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:22'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:23'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:23'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:23'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:23'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:23'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:23'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:23'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:23'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:23' prior: 50822223!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test24PolymorphicMessageIsAddedToTheConcreteClassReplacingParametrizedVariables stamp: 'HAW 5/7/2020 00:07:23'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:24'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:24'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:24'!
m1 anInstVar ifNil: [ self isNil ] ifNotNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:24'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:24'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:24'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:24'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:24' prior: 50822292!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test25ReplacesIfNilIfNotNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:24'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:25'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:25'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:25'!
m1 anInstVar ifNotNil: [ self isNil ] ifNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:25'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:25'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:25'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:25'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:25' prior: 50822360!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test26ReplacesIfNotNilIfNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:25'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:26'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:26'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:27'!
m1 anInstVar ifNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:27'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:27'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:27'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:27'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:27' prior: 50822428!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test27ReplacesIfNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:27'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:27'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:27'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:28'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:28'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:28'!
m1 anInstVar ifNotNil: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:28'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:28'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:28'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:28'!
with: p1! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:28' prior: 50822494!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test28ReplacesIfNotNilWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:28'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:28'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:29'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:29'!
m1 anInstVar isNil ifTrue: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:29'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:29'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:29'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:29'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:29' prior: 50822561!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test29ReplacesIsNilIfTrueWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:29'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:30'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:30'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:30'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:30'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:30'!
m1 anInstVar isNil ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:30'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:30'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:30'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:30'!
with: p1! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:30' prior: 50822627!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test30ReplacesIsNilIfFalseWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:30'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:31'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:31'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:31'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:31'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:31'!
m1 anInstVar isNil ifTrue: [self isNil] ifFalse: [self isNil]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:31'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:31'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:31'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:31'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:31' prior: 50822694!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test31ReplacesIsNilIfTrueIfFalseWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:31'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:32'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:32'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:32'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:32'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:32'!
m1 anInstVar isNil ifFalse: [self isNil] ifTrue: [self isNil]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:32'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:32'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:32'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:32'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:32' prior: 50822762!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test32ReplacesIsNilIfFalseIfTrueWithPolymorphicMessageSend stamp: 'HAW 5/7/2020 00:07:32'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:33'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:33'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:34'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:34'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:34'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:34'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:34'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:34'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:34'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:34' prior: 50822830!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test33PolymorphicMessageIsAddedToTheNullClass stamp: 'HAW 5/7/2020 00:07:34'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:34'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:35'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:35'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:35'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:35'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:35'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:35'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:35'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:35'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:35' prior: 50822898!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test34PolymorphicMessageIsAddedToTheNullClassWithChosenParameterNames stamp: 'HAW 5/7/2020 00:07:35'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:35'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:36'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:36'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:36'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:36'!
m1 anInstVar isNil ifTrue: [ self isNil ] ifFalse: [ self isNil ]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:36'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:36'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:36'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:36'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:36' prior: 50822967!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test35PolymorphicMessageIsAddedToTheNullClassReplacingParametrizedVariables stamp: 'HAW 5/7/2020 00:07:36'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:37'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:37'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:37'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:37'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:37'!
m1 anInstVar isNil ifFalse: [self isNil]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:37'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:37'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:37'!
with: p1
	p1 isNil! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:37'!
with: p1! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:37' prior: 50823036!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test36WhenNoNullBlockIsPresentEmptyPolymorphicMessageIsAddedToTheNullClass stamp: 'HAW 5/7/2020 00:07:37'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:38'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:38'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:38'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:38'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:38'!
m1 anInstVar isNil ifTrue: [self isNil]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:38'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:38'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:38'!
with: p1! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:38'!
with: p1
	p1 isNil! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:38' prior: 50823104!
m1 anInstVar with: self! !

!testRun: #IntroduceNullObjectTest #test37WhenNoConcreteBlockIsPresentEmptyPolymorphicMessageIsAddedToTheConcreteClass stamp: 'HAW 5/7/2020 00:07:38'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:39'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:39'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:40'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:40'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:40'!
m1 anInstVar ifNil: [1+1. 2+2]! !

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:40'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:40'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:40'!
unaryPolymorphicSelector! !
!ANullClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:40'!
unaryPolymorphicSelector
	1+1. 2+2! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:40' prior: 50823171!
m1 anInstVar unaryPolymorphicSelector! !

!testRun: #IntroduceNullObjectTest #test38WhenThereAreMultipleStatementsPolymorphicMessageIsAddedToTheNullClass stamp: 'HAW 5/7/2020 00:07:40'!
PASSED!

!classRemoval: #ANullClass stamp: 'HAW 5/7/2020 00:07:40'!
RefactoringClassTestData subclass: #ANullClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:40'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:07:41'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:41'!
m1 self ifNil: [1 + 1]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test01WhenThereAreNoVariablesToExtractFindsNothing stamp: 'HAW 5/7/2020 00:07:41'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:07:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:41'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:41'!
m1 self ifNil: [| a | a := 2. a + 1]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test02WhenThereAreOnlyTemporariesFindsNothing stamp: 'HAW 5/7/2020 00:07:41'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:07:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:42'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:42'!
m1 self ifNil: [| a | a := 2. a + self]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test03WhenABlockReferencesNonTemporariesTheyAreFound stamp: 'HAW 5/7/2020 00:07:42'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:07:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:43'!
m1 self ifNil: [| a | a := 2. a ifNil: [ self + 2]]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test04WhenANestedBlockReferencesNonTemporariesTheyAreFound stamp: 'HAW 5/7/2020 00:07:43'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:07:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:43'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:43'!
m1 self ifNil: [| a | a := nil]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test05NilIsNotFound stamp: 'HAW 5/7/2020 00:07:43'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:07:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:44'!
m1 self ifNil: [false or: [true]]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test06TrueAndFalseAreNotFound stamp: 'HAW 5/7/2020 00:07:44'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:07:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:44'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:44'!
m1 self ifNil: [| a | a := 2. a + anInstVar]! !

!testRun: #MessageSendingBlocksVariablesToExtractFinderTest #test07WhenABlockReferencesInstanceVariablesTheyAreFound stamp: 'HAW 5/7/2020 00:07:44'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:07:45'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:45'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test01AbstractClassClassNameMustNotBeEmpty stamp: 'HAW 5/7/2020 00:07:45'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:46'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:46'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test02AbstractClassClassNameMustBeASymbol stamp: 'HAW 5/7/2020 00:07:46'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:46'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:46'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test03AbstractClassClassNameMustStartWithUppercaseLetter stamp: 'HAW 5/7/2020 00:07:46'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:47'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:47'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test04AbstractClassClassNameMustNotHaveSeparators stamp: 'HAW 5/7/2020 00:07:47'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:48'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:48'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test05AbstractClassClassNameMustNotExist stamp: 'HAW 5/7/2020 00:07:48'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:48'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:48'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test06NullObjectClassNameMustNotBeEmpty stamp: 'HAW 5/7/2020 00:07:48'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:49'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:49'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test07NullObjectClassNameMustBeASymbol stamp: 'HAW 5/7/2020 00:07:49'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:49'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:49'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test08NullObjectClassNameMustStartWithUppercaseLetter stamp: 'HAW 5/7/2020 00:07:49'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:50'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:50'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test09NullObjectClassNameMustNotHaveSeparators stamp: 'HAW 5/7/2020 00:07:50'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:51'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:51'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test10NullObjectClassNameMustNotExist stamp: 'HAW 5/7/2020 00:07:51'!
PASSED!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:51'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:51'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:51'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:51'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test11CreatesAbstractClass stamp: 'HAW 5/7/2020 00:07:51'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:07:52'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:07:52'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:52'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:52'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:52'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:52'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test12CreatesAbstractClassInChosenCategory stamp: 'HAW 5/7/2020 00:07:52'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:07:53'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:07:53'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:54'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:54'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:54'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:54'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test13CreatesAbstractClassAsSubclassOfConcreteClassPreviousSuperclass stamp: 'HAW 5/7/2020 00:07:54'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:07:54'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:07:54'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:55'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:55'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:55'!
m1! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:55'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:55'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:55'!
m1
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:55' overrides: 50823773!
m1! !

!testRun: #NullObjectHierarchyCreatorTest #test14AbstractClassDefinesAllTheSelectorsOfConcreteClass stamp: 'HAW 5/7/2020 00:07:55'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:07:55'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:07:56'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:56'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:56'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:56'!
m1: anArg! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:56'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:56'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:56'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:56' overrides: 50823837!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test15AbstractClassMethodParametersNamesArePreservedFromConcreteClass stamp: 'HAW 5/7/2020 00:07:56'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:07:57'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:07:57'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:57'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:57'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:57'!
m1: anArg
		^1 + 2! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:57'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:57'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:57'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:07:57' overrides: 50823902!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test16AbstractClassMethodsDelegateResponsibility stamp: 'HAW 5/7/2020 00:07:57'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:07:58'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:07:58'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:58'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:58'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:58'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:58'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test17CreatesNullObjectClass stamp: 'HAW 5/7/2020 00:07:58'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:07:59'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:07:59'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:07:59'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:59'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:59'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:07:59'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test18CreatesNullObjectClassInChosenCategory stamp: 'HAW 5/7/2020 00:07:59'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:08:00'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:08:00'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:08:01'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:01'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:01'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:01'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test19CreatesNullObjectClassClassAsSubclassOfAbstractClass stamp: 'HAW 5/7/2020 00:08:01'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:08:01'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:08:01'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:08:02'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:02'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:02'!
m1! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:02'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:02'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:02'!
m1
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:02' overrides: 50824121!
m1! !

!testRun: #NullObjectHierarchyCreatorTest #test20NullObjectClassDefinesAllTheSelectorsOfConcreteClass stamp: 'HAW 5/7/2020 00:08:02'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:08:02'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:08:03'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:08:03'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:03'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:03'!
m1: anArg! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:03'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:03'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:03'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:03' overrides: 50824185!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test21NullObjectClassMethodParametersNamesArePreservedFromConcreteClass stamp: 'HAW 5/7/2020 00:08:03'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:08:04'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:08:04'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:08:04'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:04'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:04'!
m1: anArg
		^1 + 2! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:04'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:04'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:04'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:04' overrides: 50824250!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test22NullObjectClassMethodsAreEmpty stamp: 'HAW 5/7/2020 00:08:04'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:08:05'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:08:05'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:08:05'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:05'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:05'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:05'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #NullObjectHierarchyCreatorTest #test23ConcreteClassSubclassesTheAbstractClass stamp: 'HAW 5/7/2020 00:08:05'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:08:06'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:08:06'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:08:06'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AConcreteClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:07'!
RefactoringClassTestData subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AConcreteClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:07'!
m1: anArg
		^1 + 2! !

!classDefinition: #AnAbstractClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:07'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ANullObjectClassName category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:07'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AnAbstractClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:07'!
m1: anArg
	self subclassResponsibility.! !
!ANullObjectClassName methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:07' overrides: 50824365!
m1: anArg! !

!testRun: #NullObjectHierarchyCreatorTest #test24ConcreteClassMethodsArePreserved stamp: 'HAW 5/7/2020 00:08:07'!
PASSED!

!classRemoval: #ANullObjectClassName stamp: 'HAW 5/7/2020 00:08:07'!
AnAbstractClassName subclass: #ANullObjectClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AnAbstractClassName stamp: 'HAW 5/7/2020 00:08:07'!
RefactoringClassTestData subclass: #AnAbstractClassName
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #AConcreteClass stamp: 'HAW 5/7/2020 00:08:08'!
AnObsoleteAnAbstractClassName subclass: #AConcreteClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:08'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:08'!
m1 self ifNil: [1 + 1].! !
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:08'!
m2 1 + 1.! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test01MessageNodeMustBelongToTheMethodNode stamp: 'HAW 5/7/2020 00:08:08'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:08'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:08'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:08'!
m1 anInstVar ifTrue: [1 + 1].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test02MessageNodeMustRepresentASupportedMessageSent stamp: 'HAW 5/7/2020 00:08:08'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:09'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:09'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:09'!
m1 anInstVar ifNil: [self isNil]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test03AllVariablesToParametrizeHaveACorrespondingKeyword stamp: 'HAW 5/7/2020 00:08:09'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:10'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:10'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:10'!
m1 anInstVar ifNil: [self isNil].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test04AllKeywordsMustHaveACorrespondingVariableToParametrize stamp: 'HAW 5/7/2020 00:08:10'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:10'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:10'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:10'!
m1 anInstVar ifNil: [self isNil].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test05CreatesReplaceIfNilWithPolymorphismParameters stamp: 'HAW 5/7/2020 00:08:10'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:11'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:11'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:11'!
m1 anInstVar ifNil: [self or: [true]].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test06ReplaceIfNilWithPolymorphismParametersOnBlocksWithBooleanConstants stamp: 'HAW 5/7/2020 00:08:11'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:12'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:12'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:12'!
m1 anInstVar ifNil: [ | tempVar | tempVar := 1 + 1. self isNil].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test07ParameterNamesMustNotBeEqualToABlockTemporal stamp: 'HAW 5/7/2020 00:08:12'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:12'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:12'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:12'!
m1
		anInstVar ifNil: [self ifNil: [ | tempVar | tempVar := 1 + 1]].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test08ParameterNamesMustNotBeEqualToANestedBlockTemporal stamp: 'HAW 5/7/2020 00:08:12'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:13'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:13'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:13'!
m1
		anInstVar ifNil: [self allInstVarNames collect: [:arg | arg asSymbol]].! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test09ParameterNamesMustNotBeEqualToNestedBlocksArguments stamp: 'HAW 5/7/2020 00:08:13'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:14'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:14'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:14'!
m1 anInstVar ifNil: [1 + 1] ifNotNil: [2 + 2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test10RangeOfMessageSendForIfNilIfNotNil stamp: 'HAW 5/7/2020 00:08:14'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:14'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:14'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:14'!
m1 anInstVar ifNotNil: [1 + 1] ifNil: [2 + 2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test11RangeOfMessageSendForIfNotNilIfNil stamp: 'HAW 5/7/2020 00:08:14'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:15'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:15'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:15'!
m1 anInstVar ifNotNil: [1 + 1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test12RangeOfMessageSendForIfNotNil stamp: 'HAW 5/7/2020 00:08:15'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:15'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:15'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:15'!
m1 anInstVar ifNil: [1 + 1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test13RangeOfMessageSendForIfNil stamp: 'HAW 5/7/2020 00:08:15'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:16'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:16'!
m1 anInstVar isNil ifTrue: [1 + 1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test14RangeOfMessageSendForIsNilIfTrue stamp: 'HAW 5/7/2020 00:08:16'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:17'!
m1 anInstVar isNil ifTrue: [1 + 1] ifFalse: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test15RangeOfMessageSendForIsNilIfTrueIfFalse stamp: 'HAW 5/7/2020 00:08:17'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:17'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:18'!
m1 anInstVar       ifNil: [1 + 1]          ifNotNil: [2 + 2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test16WhenThereAreExtraSpacesRangeOfMessageSendForIfNilIfNotNil stamp: 'HAW 5/7/2020 00:08:18'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:18'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:18'!
m1 anInstVar    isNil       ifTrue: [1 + 1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test17WhenThereAreExtraSpacesRangeOfMessageSendForIsNilIfTrue stamp: 'HAW 5/7/2020 00:08:18'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:19'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:19'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:19'!
m1 anInstVar ifNil: [1 + 1] ifNotNil: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test18ConcreteBlockSourceCodeForIfNilIfNotNil stamp: 'HAW 5/7/2020 00:08:19'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:19'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:19'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:19'!
m1 anInstVar ifNotNil: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test19ConcreteBlockSourceCodeForIfNotNil stamp: 'HAW 5/7/2020 00:08:19'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:20'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:20'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:20'!
m1 anInstVar ifNotNil: [2+2] ifNil: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test20ConcreteBlockSourceCodeForIfNotNilIfNil stamp: 'HAW 5/7/2020 00:08:20'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:21'!
m1 anInstVar isNil ifFalse: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test21ConcreteBlockSourceCodeForIsNilIfFalse stamp: 'HAW 5/7/2020 00:08:21'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:21'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:21'!
m1 anInstVar isNil ifTrue: [1+1] ifFalse: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test22ConcreteBlockSourceCodeForIsNilIfTrueIfFalse stamp: 'HAW 5/7/2020 00:08:21'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:22'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:22'!
m1 anInstVar ifNil: [1+1] ifNotNil: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test23NullBlockSourceCodeForIfNilIfNotNil stamp: 'HAW 5/7/2020 00:08:22'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:23'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:23'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:23'!
m1 anInstVar ifNil: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test24NullBlockSourceCodeForIfNil stamp: 'HAW 5/7/2020 00:08:23'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:23'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:23'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:23'!
m1 anInstVar ifNotNil: [2+2] ifNil: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test25NullBlockSourceCodeForIfNotNilIfNil stamp: 'HAW 5/7/2020 00:08:23'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:24'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:24'!
m1 anInstVar isNil ifTrue: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test26NullBlockSourceCodeForIsNilIfTrue stamp: 'HAW 5/7/2020 00:08:24'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:25'!
m1 anInstVar isNil ifFalse: [2+2] ifTrue: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test27NullBlockSourceCodeForIsNilIfFalseIfTrue stamp: 'HAW 5/7/2020 00:08:25'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:25'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:25'!
m1 anInstVar ifNotNil: [1+1]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test28NullBlockSourceCodeForIfNotNil stamp: 'HAW 5/7/2020 00:08:25'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:26'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:26'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:26'!
m1 anInstVar ifNil: [1] ifNotNil: [2+2. 1+1.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test29WhenThereAreMultipleStatementsConcreteBlockSourceCodeForIfNilIfNotNil stamp: 'HAW 5/7/2020 00:08:26'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:27'!
m1 anInstVar ifNotNil: [2+2. 1+1.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test30WhenThereAreMultipleStatementsConcreteBlockSourceCodeForIfNotNil stamp: 'HAW 5/7/2020 00:08:27'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:27'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:27'!
m1 anInstVar isNil ifFalse: [2+2. 1+1.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test31WhenThereAreMultipleStatementsConcreteBlockSourceCodeForIsNilIfFalse stamp: 'HAW 5/7/2020 00:08:27'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:28'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:28'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:28'!
m1 anInstVar ifNil: [1+1. 2+2.] ifNotNil: [2+2]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test32WhenThereAreMultipleStatementsNullBlockSourceCodeForIfNilIfNotNil stamp: 'HAW 5/7/2020 00:08:28'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:29'!
m1 anInstVar ifNil: [1+1. 2+2.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test33WhenThereAreMultipleStatementsNullBlockSourceCodeForIfNil stamp: 'HAW 5/7/2020 00:08:29'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClassToRefactor category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:29'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClassToRefactor methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:29'!
m1 anInstVar isNil ifTrue: [1+1. 2+2.]! !

!testRun: #ReplaceIfNilWithPolymorphismParametersTest #test34WhenThereAreMultipleStatementsNullBlockSourceCodeForIsNilIfTrue stamp: 'HAW 5/7/2020 00:08:29'!
PASSED!

!classRemoval: #AClassToRefactor stamp: 'HAW 5/7/2020 00:08:30'!
RefactoringClassTestData subclass: #AClassToRefactor
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test01ParameterNameMustNotBeEmpty stamp: 'HAW 5/7/2020 00:08:30'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test02ParameterNameMustNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:08:30'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test03ParameterNameMustNotContainSeparators stamp: 'HAW 5/7/2020 00:08:31'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test04KeywordMustNotBeEmpty stamp: 'HAW 5/7/2020 00:08:31'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test05KeywordMustNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:08:31'!
PASSED!

!testRun: #VariableToParametrizeKeywordDefinitionTest #test06CreatesADefinition stamp: 'HAW 5/7/2020 00:08:32'!
PASSED!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:32'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:32'!
m1! !

!testRun: #VariablesToExtractFinderTest #test01WhenTheMethodHasNoVariablesItReturnsAnEmptySet stamp: 'HAW 5/7/2020 00:08:32'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:33'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:33'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:33'!
m1
		| aTempVar |

		aTempVar := 2.

		^aTempVar.! !

!testRun: #VariablesToExtractFinderTest #test02WhenTheMethodHasOnlyTemporaryVariablesItReturnsAnEmptySet stamp: 'HAW 5/7/2020 00:08:33'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:33'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:33'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:33'!
m1

		self m2.! !

!testRun: #VariablesToExtractFinderTest #test03WhenTheMethodReferencesSelfPseudoVariableItFindsIt stamp: 'HAW 5/7/2020 00:08:34'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:34'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:34'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:34'!
m1: anArg

		^anArg + 2! !

!testRun: #VariablesToExtractFinderTest #test04WhenTheMethodHasArgumentsTheyAreIncludedAsVariablesToExtract stamp: 'HAW 5/7/2020 00:08:34'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:35'!
m1

		^anInstVar isNil! !

!testRun: #VariablesToExtractFinderTest #test05WhenTheMethodReferencesAnInstanceVariableItFindsIt stamp: 'HAW 5/7/2020 00:08:35'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:35'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:35'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:35'!
m1

		^AClassVar isNil! !

!testRun: #VariablesToExtractFinderTest #test06WhenTheMethodReferencesAClassVariableItFindsIt stamp: 'HAW 5/7/2020 00:08:35'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:36'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: 'AClassVar'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ASharedPool category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:36'!
SharedPool subclass: #ASharedPool
	instanceVariableNames: ''
	classVariableNames: 'APoolVariable'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:36'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'ASharedPool'
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:36'!
m1
		^APoolVariable isNil! !

!testRun: #VariablesToExtractFinderTest #test07WhenTheMethodReferencesAPoolVariableItFindsIt stamp: 'HAW 5/7/2020 00:08:36'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:37'!
Object subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: 'ASharedPool'
	category: '__Refactoring-TestData__'!

!classRemoval: #ASharedPool stamp: 'HAW 5/7/2020 00:08:37'!
SharedPool subclass: #ASharedPool
	instanceVariableNames: ''
	classVariableNames: 'APoolVariable'
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:37'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:37'!
m1

		^true not! !

!testRun: #VariablesToExtractFinderTest #test08DoesNotFindPseudoVariablesButSelf stamp: 'HAW 5/7/2020 00:08:37'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:38'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:38'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:38'!
m1
		^anInstVar! !

!testRun: #VariablesToExtractFinderTest #test09WhenReturnsAnInstVarFindsIt stamp: 'HAW 5/7/2020 00:08:38'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:38'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: 'anInstVar'
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:38'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:38'!
m1
		^Object! !

!testRun: #VariablesToExtractFinderTest #test10DoesNotFindClasses stamp: 'HAW 5/7/2020 00:08:38'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:39'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #AClass category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:39'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!AClass methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:39'!
m1
		^Smalltalk! !

!testRun: #VariablesToExtractFinderTest #test11DoesNotFindGlobals stamp: 'HAW 5/7/2020 00:08:39'!
PASSED!

!classRemoval: #AClass stamp: 'HAW 5/7/2020 00:08:40'!
RefactoringClassTestData subclass: #AClass
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test01SelectorMustNotBeEmpty stamp: 'HAW 5/7/2020 00:08:40'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test02SelectorMustNotContainInvalidCharacters stamp: 'HAW 5/7/2020 00:08:40'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test03SelectorMustNotStartWithInvalidStartOfSelector stamp: 'HAW 5/7/2020 00:08:40'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test04CreatesVariablesToParametrizeKeywordsDefinitionsWithSelector stamp: 'HAW 5/7/2020 00:08:41'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test05FirstKeywordMustNotStartWithAnInvalidStartOfSelector stamp: 'HAW 5/7/2020 00:08:41'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test06ParameterNamesMustNotBeRepeated stamp: 'HAW 5/7/2020 00:08:41'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test07VariablesToParametrizeMustNotBeRepeated stamp: 'HAW 5/7/2020 00:08:42'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test08CreatesVariablesToParametrizeKeywordsDefinitionsWithDefinitions stamp: 'HAW 5/7/2020 00:08:42'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test09WhenNoVariablesToParametrizeBuildsSelector stamp: 'HAW 5/7/2020 00:08:43'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test10WhenVariablesToParametrizeBuildsSelectorFromKeywordsInOrder stamp: 'HAW 5/7/2020 00:08:43'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test11WhenVariablesToParametrizeBuildsMessageSending stamp: 'HAW 5/7/2020 00:08:43'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test12WhenNoVariablesToParametrizeBuildsMessageHeader stamp: 'HAW 5/7/2020 00:08:44'!
PASSED!

!testRun: #VariablesToParametrizeKeywordsDefinitionsTest #test13WhenVariablesToParametrizeBuildsMessageHeader stamp: 'HAW 5/7/2020 00:08:44'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:44'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:44'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:44'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:44'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:44' prior: 50825619!
m3 | x | self m1: 1. false ifTrue: [ x m1 ]! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:08:44'!
m1!

!testRun: #AddParameterWithActualScopeTest #test01DoesNotChangePossibleMessageSendWhenInstructedToDoSo stamp: 'HAW 5/7/2020 00:08:44'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:45'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:45'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:45'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:45'!
m3 | x | self m1: 1 m3: 3. false ifTrue: [ x m1: 1 m3: 3 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:45'!
m1: p1 m2: p2 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:45' prior: 50825660!
m3 | x | self m1: 1 m2: 2 m3: 3. false ifTrue: [ x m1: 1 m3: 3 ]! !

!methodRemoval: ClassToAddParameter #m1:m3: stamp: 'HAW 5/7/2020 00:08:45'!
m1: p1 m3: p3!

!testRun: #AddParameterWithActualScopeTest #test01_01_DoesNotChangePossibleMessageSendWhenInstructedToDoSoWithKeywordMessages stamp: 'HAW 5/7/2020 00:08:45'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:46'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:46'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:46'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:46'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:46'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:46'!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!testRun: #AddParameterWithActualScopeTest #test02CanNotAddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'HAW 5/7/2020 00:08:46'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:46'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:47'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:47'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:47'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:47'!
m1: p1 m3: p3! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:47'!
m1: p1 m3: p3! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:47'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1 m3: 3! !

!testRun: #AddParameterWithActualScopeTest #test02_01_CanNotAddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsForKeywordMessage stamp: 'HAW 5/7/2020 00:08:47'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:47'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:48'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:48'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:48'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:48'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:48'!
m3 | x | x := ClassOfSender new. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:48'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:48' prior: 50825807!
m3 | x | x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:08:48'!
m1!

!testRun: #AddParameterWithActualScopeTest #test03AddParameterWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'HAW 5/7/2020 00:08:48'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:48'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:49'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:49'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:49'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:49'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:49'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:49'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:49'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:49'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:49' prior: 50825864!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:08:49'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 5/7/2020 00:08:49'!
m1!

!testRun: #AddParameterWithActualScopeTest #test04AddParameterWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'HAW 5/7/2020 00:08:49'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:49'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:49'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:50'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50' prior: 50825928!
m3 | x y | x := self. y := ClassOfSender new. x m1: 1. y m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:08:50'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 5/7/2020 00:08:50'!
m1!

!testRun: #AddParameterWithActualScopeTest #test05AddParameterInDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'HAW 5/7/2020 00:08:50'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:50'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:50'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:50'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:50' prior: 50825993!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1: 1. y m1: 1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:08:50'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 5/7/2020 00:08:51'!
m1!

!testRun: #AddParameterWithActualScopeTest #test06AddParameterInDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'HAW 5/7/2020 00:08:51'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:51'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:51'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:51'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:51'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:51'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:51'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:51' prior: 50826046!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1 ]! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:08:51'!
m1!

!testRun: #AddParameterWithActualScopeTest #test07AddParameterToPossibleMessageSendIfInstructedToDoSo stamp: 'HAW 5/7/2020 00:08:51'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:52'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:52'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:52'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:52'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:52'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:52'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:52' prior: 50826094!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 5/7/2020 00:08:52'!
m1!

!testRun: #AddParameterWithActualScopeTest #test08AddParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'HAW 5/7/2020 00:08:52'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:53'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:53'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:53'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:53'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:53'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:53'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:53'!
m3 self m1. ClassOfSender new m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:53'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:53' prior: 50826154!
m3 self m1: 1. ClassOfSender new m1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:08:53'!
m1!

!testRun: #AddParameterWithActualScopeTest #test09AddParameterOnlyToValidMessageSendWhenMoreSendsInSameMethod stamp: 'HAW 5/7/2020 00:08:53'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:54'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:54'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:54'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:54'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:54'!
m3 |x| self m1. x m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:54'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:54' prior: 50826200!
m3 |x| self m1: 1. x m1! !

!methodRemoval: ClassToAddParameter #m1 stamp: 'HAW 5/7/2020 00:08:54'!
m1!

!testRun: #AddParameterWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenAddingParameterToMethodWithSureAndPossibleSenders stamp: 'HAW 5/7/2020 00:08:54'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:55'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:55'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:55'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:55'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:55'!
m1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:55'!
m3 | x | x := self. x := ClassOfSender new. x m1; printString! !

!testRun: #AddParameterWithActualScopeTest #test11CanNotAddParameterWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'HAW 5/7/2020 00:08:55'!
PASSED!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:55'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:56'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #AddParameterWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'HAW 5/7/2020 00:08:56'!
PASSED!

!classDefinition: #ClassToAddParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:56'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:56'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:56'!
m1: p1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:56'!
m3 self m1: 1! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:56'!
m1: p1 m2: p2 ! !
!ClassToAddParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:56' prior: 50826300!
m3 self m1: 1 m2: 2! !

!methodRemoval: ClassToAddParameter #m1: stamp: 'HAW 5/7/2020 00:08:56'!
m1: p1!

!testRun: #AddParameterWithActualScopeTest #test13AddLastParameterCorrectly stamp: 'HAW 5/7/2020 00:08:56'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:57'!
ClassToAddParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToAddParameter stamp: 'HAW 5/7/2020 00:08:57'!
RefactoringClassTestData subclass: #ClassToAddParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:57'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:57'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:57'!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1 ]! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:57'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:57' prior: 50826345!
m3 | x | self m1. false ifTrue: [ x m1: 1 ]! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:08:57'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test01DoesNotChangePossibleMessageSendWhenInstructedToDoSo stamp: 'HAW 5/7/2020 00:08:57'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:08:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:58'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:58'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:58'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:58'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !

!testRun: #RemoveParameterWithActualScopeTest #test02CanNotRemoveParameterWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'HAW 5/7/2020 00:08:58'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:08:58'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:59'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:59'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:08:59'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:59'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:59'!
m3 | x | x := ClassOfSender new. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:59'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:08:59' prior: 50826444!
m3 | x | x := ClassOfSender new. x m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:08:59'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test03RemovesParameterWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'HAW 5/7/2020 00:08:59'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:08:59'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:00'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:00'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:00'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:00'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:00'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:00'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:00' prior: 50826504!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:09:00'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'HAW 5/7/2020 00:09:00'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test04RemovesParameterWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'HAW 5/7/2020 00:09:00'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:00'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:01'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:01'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:01'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:01'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:01'!
m3 | x y | x := self. y := ClassOfSender new. x m1: 1. y m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:01'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:01'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:01' prior: 50826570!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:09:01'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'HAW 5/7/2020 00:09:01'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test05RemovesParameterInDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'HAW 5/7/2020 00:09:01'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:01'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:02'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:02'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:02'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:02'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:02'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:02'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1: 1. y m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:02'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:02'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:02' prior: 50826637!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:09:02'!
m1: p1!

!methodRemoval: ClassOfSender #m1: stamp: 'HAW 5/7/2020 00:09:02'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test06RemovesParameterInDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'HAW 5/7/2020 00:09:02'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:02'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:03'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:03'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:03'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:03'!
m3 | x | self m1: 1. false ifTrue: [ x m1: 1]! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:03'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:03' prior: 50826693!
m3 | x | self m1. false ifTrue: [ x m1]! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:09:03'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test07RemovesParameterToPossibleMessageSendIfInstructedToDoSo stamp: 'HAW 5/7/2020 00:09:03'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:03'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:03'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:03'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:03'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:03'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:03'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:03' prior: 50826742!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!methodRemoval: ClassOfSender #m1: stamp: 'HAW 5/7/2020 00:09:03'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test08RemovesParameterWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'HAW 5/7/2020 00:09:03'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:04'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:04'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:04'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:04'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:04'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:04'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:04'!
m3 self m1: 1. ClassOfSender new m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:04'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:04' prior: 50826804!
m3 self m1. ClassOfSender new m1: 1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:09:04'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test09RemovesParameterOnlyToValidMessageSendWhenMoreSendsInSameMethod stamp: 'HAW 5/7/2020 00:09:04'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:05'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:05'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:05'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:05'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:05'!
m3 |x| self m1: 1. x m1: 1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:05'!
m1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:05' prior: 50826853!
m3 |x| self m1. x m1: 1! !

!methodRemoval: ClassToRemoveParameter #m1: stamp: 'HAW 5/7/2020 00:09:05'!
m1: p1!

!testRun: #RemoveParameterWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenRemovingParameterToMethodWithSureAndPossibleSenders stamp: 'HAW 5/7/2020 00:09:05'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:06'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:06'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:06'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:06'!
m1: p1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:06'!
m1: p1! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:06'!
m3 | x | x := self. x := ClassOfSender new. x m1: 1; printString! !

!testRun: #RemoveParameterWithActualScopeTest #test11CanNotRemoveParameterWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'HAW 5/7/2020 00:09:06'!
PASSED!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:07'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:07'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RemoveParameterWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'HAW 5/7/2020 00:09:07'!
PASSED!

!classDefinition: #ClassToRemoveParameter category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:07'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:07'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:07'!
m1: p1 m2: p2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:07'!
m3 self m1: 1 m2: 2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:07'!
m2: p2! !
!ClassToRemoveParameter methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:07' prior: 50826956!
m3 self m2: 2! !

!methodRemoval: ClassToRemoveParameter #m1:m2: stamp: 'HAW 5/7/2020 00:09:07'!
m1: p1 m2: p2!

!testRun: #RemoveParameterWithActualScopeTest #test13RemovesOtherThanLastParameterCorrectly stamp: 'HAW 5/7/2020 00:09:07'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:08'!
ClassToRemoveParameter subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRemoveParameter stamp: 'HAW 5/7/2020 00:09:08'!
RefactoringClassTestData subclass: #ClassToRemoveParameter
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:08'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:08'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:08'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:08'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:08' prior: 50827001!
m3 | x | self m2. false ifTrue: [ x m1 ]! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 5/7/2020 00:09:08'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test01DoesNotRenamesPossibleMessageSendWhenInstructedToDoSo stamp: 'HAW 5/7/2020 00:09:08'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:09'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:09'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:09'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:09'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:09'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:09'!
m3 | x | x := self. x := ClassOfSender new. x m1! !

!testRun: #RenameSelectorWithActualScopeTest #test02CanNotRenameWithReceiverTypeOfMessageSendNotIncludedInImplementors stamp: 'HAW 5/7/2020 00:09:09'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:10'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:10'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:10'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:10'!
ClassToRenameSelector subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:10'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:10'!
m3 | x | x := ClassOfSender new. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:10'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:10' prior: 50827096!
m3 | x | x := ClassOfSender new. x m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 5/7/2020 00:09:10'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test03RenamesWhenReceiverTypeOfMessageSendIsSubtypeOfImplementorsType stamp: 'HAW 5/7/2020 00:09:10'!
PASSED!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:10'!
ClassToRenameSelector subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:11'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:11'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:11'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:11'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:11'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:11'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:11'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:11'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:11' prior: 50827155!
m3 | x | x := self. x := ClassOfSender new. x m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 5/7/2020 00:09:11'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 5/7/2020 00:09:11'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test04RenamesWhenReceiverTypeOfMessageSendIsEqualToImplementorsTypes stamp: 'HAW 5/7/2020 00:09:11'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:11'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:12'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:12'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:12'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:12'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:12'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:12'!
m3 | x y | x := self. y := ClassOfSender new. x m1. y m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:12'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:12'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:12' prior: 50827219!
m3 | x y | x := self. y := ClassOfSender new. x m2. y m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 5/7/2020 00:09:12'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 5/7/2020 00:09:12'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test05RenamesDifferentMessageSendsWithReceiverTypeIsIncludedInImplementorsType stamp: 'HAW 5/7/2020 00:09:12'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:12'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:13'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:13'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:13'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:13'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:13'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:13'!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m1. y m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:13'!
m2! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:13'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:13' prior: 50827284!
m3 | x y | x := y:= self. x := y := ClassOfSender new. x m2. y m2! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 5/7/2020 00:09:13'!
m1!

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 5/7/2020 00:09:13'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test06RenamesDifferentMessageSendsWithReceiverTypeEqualToImplementorsType stamp: 'HAW 5/7/2020 00:09:13'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:13'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:14'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:14'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:14'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:14'!
m3 | x | self m1. false ifTrue: [ x m1 ]! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:14'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:14' prior: 50827338!
m3 | x | self m2. false ifTrue: [ x m2 ]! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 5/7/2020 00:09:14'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test07RenamePossibleMessageSendIfInstructedToDoSo stamp: 'HAW 5/7/2020 00:09:14'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:14'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:14'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:14'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:14'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:14'!
m3 | x | x := self. x := ClassOfSender new. x m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:14'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:14' prior: 50827386!
m3 | x | x := self. x := ClassOfSender new. x m2! !

!methodRemoval: ClassOfSender #m1 stamp: 'HAW 5/7/2020 00:09:14'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test08RenamesWithReceiverTypeOfMessageSendNotIncludedInImplementorsButSelectorNotImplementedInTypeHierarchy stamp: 'HAW 5/7/2020 00:09:14'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:15'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:15'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:15'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:15'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:15'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:15'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:15'!
m3 self m1. ClassOfSender new m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:15'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:15' prior: 50827446!
m3 self m2. ClassOfSender new m1! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 5/7/2020 00:09:15'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test09RenamesOnlyValidMessageSendWhenMoreSendsInSameMethod stamp: 'HAW 5/7/2020 00:09:15'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:16'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:16'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:16'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:16'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:16'!
m3 |x| self m1. x m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:16'!
m2! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:16' prior: 50827492!
m3 |x| self m2. x m1! !

!methodRemoval: ClassToRenameSelector #m1 stamp: 'HAW 5/7/2020 00:09:16'!
m1!

!testRun: #RenameSelectorWithActualScopeTest #test10UsesTheModifiedSourceCodeWhenRenamingAMethodWithSureAndPossibleSenders stamp: 'HAW 5/7/2020 00:09:16'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:17'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassToRenameSelector category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:17'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classDefinition: #ClassOfSender category: #'__Refactoring-TestData__' stamp: 'HAW 5/7/2020 00:09:17'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:17'!
m1! !
!ClassOfSender methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:17'!
m1! !
!ClassToRenameSelector methodsFor: 'as yet unclassified' stamp: 'HAW 5/7/2020 00:09:17'!
m3 | x | x := self. x := ClassOfSender new. x m1; printString! !

!testRun: #RenameSelectorWithActualScopeTest #test11CanNotRenameWithReceiverTypeOfCascadeMessageSendNotIncludedInImplementors stamp: 'HAW 5/7/2020 00:09:17'!
PASSED!

!classRemoval: #ClassToRenameSelector stamp: 'HAW 5/7/2020 00:09:17'!
RefactoringClassTestData subclass: #ClassToRenameSelector
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!classRemoval: #ClassOfSender stamp: 'HAW 5/7/2020 00:09:18'!
RefactoringClassTestData subclass: #ClassOfSender
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: '__Refactoring-TestData__'!

!testRun: #RenameSelectorWithActualScopeTest #test12SuperclassInstanceCreationMessagesShouldNotBeUsed stamp: 'HAW 5/7/2020 00:09:18'!
PASSED!

----QUIT----(7 May 2020 00:09:18) CuisUniversity-4137.image priorSource: 14801031!

----STARTUP---- (7 May 2020 12:40:26) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-4137.image!


----End fileIn of /Users/hernan/Documents/Cuis/5.0-64Bits/cuis-finder/4113-CuisCore-NicolasPapagnaMaldonado-2020Apr26-22h07m-NPM.001.cs.st----!

----End fileIn of /Users/hernan/Documents/Cuis/5.0-64Bits/cuis-finder/Tools-Finder.pck.st----!

----QUIT----(7 May 2020 12:40:47) CuisUniversity-4137.image priorSource: 15869448!

----STARTUP---- (29 August 2020 18:49:50) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----QUIT----(29 August 2020 18:51:37) CuisUniversity-4137.image priorSource: 15908381!

----STARTUP---- (29 August 2020 18:52:31) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----QUIT----(29 August 2020 23:22:44) CuisUniversity-4137.image priorSource: 15908577!

----STARTUP---- (31 August 2020 20:44:19) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


ObjectBuilder create: #anObject
	collaboratorNames: 'actividad 1'
	in: 'DenotativeObject-TestSupport'
	!

!classDefinition: #anObject category: #'DenotativeObject-TestSupport' stamp: 'msm 8/31/2020 20:52:25'!
DenotativeObject subclass: #anObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DenotativeObject-TestSupport'!

!classDefinition: 'anObject class' category: #'DenotativeObject-TestSupport' stamp: 'msm 8/31/2020 20:52:25'!
anObject class
	instanceVariableNames: 'actividad'!

ObjectBuilder create: #Pepe
	collaboratorNames: 'actividad 1'
	in: 'DenotativeObject-Morph'
	!

!classDefinition: #Pepe category: #'DenotativeObject-Morph' stamp: 'msm 8/31/2020 20:53:35'!
DenotativeObject subclass: #Pepe
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DenotativeObject-Morph'!

!classDefinition: 'Pepe class' category: #'DenotativeObject-Morph' stamp: 'msm 8/31/2020 20:53:35'!
Pepe class
	instanceVariableNames: 'actividad'!

!classRemoval: #Pepe stamp: 'msm 8/31/2020 20:54:14'!
DenotativeObject subclass: #Pepe
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DenotativeObject-Morph'!

!classRemoval: #anObject stamp: 'msm 8/31/2020 20:54:41'!
DenotativeObject subclass: #anObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DenotativeObject-TestSupport'!

ObjectBuilder create: #pepe
	collaboratorNames: 'actividad 1'
	in: 'DenotativeObject-TestSupport'
	!

!classDefinition: #pepe category: #'DenotativeObject-TestSupport' stamp: 'msm 8/31/2020 20:54:55'!
DenotativeObject subclass: #pepe
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'DenotativeObject-TestSupport'!

!classDefinition: 'pepe class' category: #'DenotativeObject-TestSupport' stamp: 'msm 8/31/2020 20:54:55'!
pepe class
	instanceVariableNames: 'actividad'!

pepe
	collaboratorNames: 'actividad'
	in: 'Actividad 1'!

!classDefinition: #pepe category: #'Actividad 1' stamp: 'msm 8/31/2020 20:55:40'!
DenotativeObject subclass: #pepe
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Actividad 1'!

!classDefinition: 'pepe class' category: #'Actividad 1' stamp: 'msm 8/31/2020 20:55:40'!
pepe class
	instanceVariableNames: 'actividad'!

pepe hola!
!pepe class methodsFor: 'nil' stamp: 'msm 8/31/2020 20:59:14'!
hola
	"responde chau"

	^'Chau'.! !

ObjectBuilder create: #Bill
	collaboratorNames: ''
	in: 'Zombie'
	!

!classDefinition: #Bill category: #Zombie stamp: 'msm 8/31/2020 21:23:27'!
DenotativeObject subclass: #Bill
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Zombie'!

!classDefinition: 'Bill class' category: #Zombie stamp: 'msm 8/31/2020 21:23:27'!
Bill class
	instanceVariableNames: ''!

ObjectBuilder create: #Energia asChildOf: Bill collaboratorNames: '' in: 'Zombie'!

!classDefinition: #Energia category: #Zombie stamp: 'msm 8/31/2020 21:27:48'!
Bill subclass: #Energia
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Zombie'!

!classDefinition: 'Energia class' category: #Zombie stamp: 'msm 8/31/2020 21:27:48'!
Energia class
	instanceVariableNames: ''!
!Bill class methodsFor: 'nil' stamp: 'msm 8/31/2020 21:33:38'!
comer
	"comment stating purpose of message"

	
	! !
!Bill class methodsFor: 'nil' stamp: 'msm 8/31/2020 21:34:20'!
caminar
	"comment stating purpose of message"

	
	! !
!Energia class methodsFor: 'nil' stamp: 'msm 8/31/2020 21:35:02'!
DameEnergia
	"comment stating purpose of message"

	
	! !
!Bill class methodsFor: 'as yet unclassified' stamp: 'msm 8/31/2020 21:57:06'!
caminar: unaCantidadDeKilometros

	"comment stating purpose of message"
	Energia-3-unaCantidadDeKilometros
	
	! !

!methodRemoval: Bill class #caminar stamp: 'msm 8/31/2020 21:57:14'!
caminar
	"comment stating purpose of message"

	
	!
!Bill class methodsFor: 'as yet unclassified' stamp: 'msm 8/31/2020 21:58:28'!
comer: unaCantidadDeKilos
	"comment stating purpose of message"
	Energia + 4 * unaCantidadDeKilos
	
	! !

!methodRemoval: Bill class #comer stamp: 'msm 8/31/2020 21:58:35'!
comer
	"comment stating purpose of message"

	
	!

Energia:= 28!

Bill!

!classDefinition: 'Bill class' category: #Zombie stamp: 'msm 8/31/2020 22:10:25'!
Bill class
	instanceVariableNames: 'Energia'!

----QUIT----(1 September 2020 01:38:52) CuisUniversity-4137.image priorSource: 15908777!

----STARTUP---- (9 September 2020 17:47:14) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


ObjectBuilder create: #AlanTuring
	collaboratorNames: ''
	in: ''
	!

!classDefinition: #AlanTuring category: #'' stamp: 'MSM 9/9/2020 17:48:58'!
DenotativeObject subclass: #AlanTuring
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: ''!

!classDefinition: 'AlanTuring class' category: #'' stamp: 'MSM 9/9/2020 17:48:58'!
AlanTuring class
	instanceVariableNames: ''!

AlanTuring dateOfBirth.!

AlanTuring printString.!

AlanTuring printString. 'AlanTuring' !

AlanTuring dateOfBirth.!
!AlanTuring class methodsFor: 'personal info' stamp: 'MSM 9/9/2020 17:51:57'!
dateOfBirth
	self shouldBeImplemented.! !
!AlanTuring class methodsFor: 'personal info' stamp: 'MSM 9/9/2020 17:52:21' prior: 50828968!
dateOfBirth
	^June/23/1912! !

	^June/23/1912!

AlanTuring dateOfBirth.!

AlanTuring dateOfBirth.!

ObjectBuilder create: #AlonsoChurch
	collaboratorNames: ''
	in: 'ej5'
	!

!classDefinition: #AlonsoChurch category: #ej5 stamp: 'MSM 9/9/2020 17:58:03'!
DenotativeObject subclass: #AlonsoChurch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ej5'!

!classDefinition: 'AlonsoChurch class' category: #ej5 stamp: 'MSM 9/9/2020 17:58:03'!
AlonsoChurch class
	instanceVariableNames: ''!
!AlonsoChurch class methodsFor: 'nil' stamp: 'MSM 9/9/2020 17:58:21'!
dateOfBirth
	^June/14/1903! !

AlonsoChurch dateOfBirth inspect!

AlonsoChurch dateOfBirth year!

AlonsoChurch dateOfBirth year value!

AlonsoChurch dateOfBirth year value - 1 !

AlonsoChurch dateOfBirth year value - 1 year!

AlonsoChurch dateOfBirth year - 1 year!

year!

AlonsoChurch dateOfBirth year - year!

AlonsoChurch dateOfBirth year value - 1 year value!

AlonsoChurch dateOfBirth year value - 1 year value!

2 year value - 1 year value!

(1 year) - (2 year)!

2 year!
!AlonsoChurch class methodsFor: 'nil' stamp: 'MSM 9/9/2020 18:15:38'!
ageDifferenceWith: aPerson
	^ (self dateOfBirth year value) - (aPerson dateOfBirth year value)! !
!AlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/9/2020 18:16:35' prior: 50829010!
ageDifferenceWith: aPerson
	^ (self dateOfBirth year value) - (aPerson dateOfBirth year value)A! !
!AlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/9/2020 18:16:57' prior: 50829017!
ageDifferenceWith: aPerson
	^ (self dateOfBirth year value) - (aPerson dateOfBirth year value)! !

AlonsoChurch ageDifferenceWith: AlanTuring.!
!AlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/9/2020 18:18:12' prior: 50829024!
ageDifferenceWith: aPerson
	^ self dateOfBirth year value - aPerson dateOfBirth year! !

AlonsoChurch ageDifferenceWith: AlanTuring.!

year!

year!
!AlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/9/2020 18:25:00' prior: 50829032!
ageDifferenceWith: aPerson
	^ self dateOfBirth year value distanceFrom: aPerson dateOfBirth year! !
!AlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/9/2020 18:25:05' prior: 50829040!
ageDifferenceWith: aPerson
	^ self dateOfBirth year distanceFrom: aPerson dateOfBirth year! !

AlonsoChurch ageDifferenceWith: AlanTuring.!

#ageDifferenceWith: asMessageWith: AlanTuring.!

#ageDifferenceWith: asMessageWith: AlanTuring.!

#ageDifferenceWith: asMessageWith: AlanTuring.!

AlonsoChurch methodNamed: #dateOfBirth.!

 (AlonsoChurch class>>#dateOfBirth "a CompiledMethod(2224466)") !

methodNamed!

AlonsoChurch methodNamed: #dateOfBirth!

methodNamed!

----End fileIn of /home/mariano/Documentos/Ing1/linux64/Packages/TerseGuide.pck.st----!

AlanTuring methodNamed: #ageDifferenceWith.!

AlanTuring methodNamed: #ageDifferenceWith.!

#ageDifferenceWith!

AlonsoChurch methodNamed: #ageDifferenceWith.!

AlonsoChurch methodNamed: #dateOfBirth.!

 (AlonsoChurch class>>#dateOfBirth "a CompiledMethod(2224466)") !

AlonsoChurch methodNamed: #dateOfBirth. (AlonsoChurch class>>#dateOfBirth "a CompiledMethod(2224466)") !

AlonsoChurch methodNamed: #dateOfBirth!

self sourceCode!

AlonsoChurch methodNamed: #dateOfBirth!

self sourceCode.!

self linesOfCode.!

self!

Smalltalk.!

self linesOfCode.!

Smalltalk methodNamed: #AllUniverse.!

collect!

Smalltalk allSelectors collect: [:i | Smalltalk lookupSelector: i]!

Smalltalk allSelectors collect: [:each | Smalltalk lookupSelector: each]!

(Smalltalk allSelectors collect: [:each | Smalltalk lookupSelector: each]) linesOfCode!

Smalltalk methodNamed: #AllUniverse.!

Smalltalk allSelectors collect: [:each | Smalltalk lookupSelector: each linesOfCode]!

Smalltalk allSelectors collect: [:each | Smalltalk lookupSelector: each linesOfCode]!

self valueWithReceiver: AlonsoChurch arguments: #().!

AlonsoChurch methodNamed: #dateOfBirth.!

 (AlonsoChurch class>>#dateOfBirth "a CompiledMethod(2224466)") !

self valueWithReceiver: AlanTuring arguments: #().!

self valueWithReceiver: AlonsoChurch arguments: #(). !
!AlonsoChurch class methodsFor: 'nil' stamp: 'MSM 9/10/2020 00:27:20'!
testeo
	"comment stating purpose of message"

	
	^'test'! !

AlonsoChurch methodNamed: #testeo. !

 (AlonsoChurch class>>#testeo "a CompiledMethod(3999518)") !

self valueWithReceiver: AlanTuring arguments: #().!

self setSelectionIndex: 1.!

self setSelectionIndex: 1.!

self setSelectionIndex: 1.!

self setSelectionIndex: 3.!

self selection: #fail.!

self setSelectionIndex: 1.!

self setSelectionIndex: 3.!

 true !

self selection: #fail.!

self setSelectionIndex: 1.!

----QUIT----(10 September 2020 01:50:18) CuisUniversity-4137.image priorSource: 15908777!

----STARTUP---- (10 September 2020 12:40:05) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


self send.!

self send.!

self send.!

self send.!

self!

self send!

self send.!
!AlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 12:50:03' prior: 50829047!
ageDifferenceWith: aPerson
	^ self dateOfBirth year distanceFrom: aPerson dateOfBirth year! !

self new.!

self inspect.!

self send.!

self send.!

self yourself!

DenotativeObject subclass: #CloneOfAlonsoChurch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ej5'!

!classDefinition: #CloneOfAlonsoChurch category: #ej5 stamp: 'MSM 9/10/2020 12:57:25'!
DenotativeObject subclass: #CloneOfAlonsoChurch
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ej5'!

CloneOfAlonsoChurch class
	instanceVariableNames: ''!

!classDefinition: 'CloneOfAlonsoChurch class' category: #ej5 stamp: 'MSM 9/10/2020 12:57:25'!
CloneOfAlonsoChurch class
	instanceVariableNames: ''!
!CloneOfAlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 12:57:25'!
ageDifferenceWith: aPerson
	^ self dateOfBirth year distanceFrom: aPerson dateOfBirth year! !
!CloneOfAlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 12:57:25'!
dateOfBirth
	^June/14/1903! !
!CloneOfAlonsoChurch class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 12:57:25'!
testeo
	"comment stating purpose of message"

	
	^'test'! !

100 factorial = 100 factorial.!

100 factorial == 100 factorial. true !

('ho','la') = ('ho','la')!

('ho','la') == ('ho','la') !

('ho','la') = 1!

1 = 2!

1 == 2 false !

----QUIT----(10 September 2020 17:35:11) CuisUniversity-4137.image priorSource: 16016826!

----STARTUP---- (10 September 2020 18:42:09) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


ObjectBuilder create: #Luces
	collaboratorNames: ''
	in: 'Semaforo'
	!

!classDefinition: #Luces category: #Semaforo stamp: 'MSM 9/10/2020 18:44:39'!
DenotativeObject subclass: #Luces
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luces class' category: #Semaforo stamp: 'MSM 9/10/2020 18:44:39'!
Luces class
	instanceVariableNames: ''!

ObjectBuilder create: #Luz asChildOf: DenotativeObject collaboratorNames: '' in: 'Semaforo'!

!classDefinition: #Luz category: #Semaforo stamp: 'MSM 9/10/2020 18:44:48'!
DenotativeObject subclass: #Luz
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luz class' category: #Semaforo stamp: 'MSM 9/10/2020 18:44:48'!
Luz class
	instanceVariableNames: ''!

ObjectBuilder create: #LuzRoja asChildOf: DenotativeObject collaboratorNames: '' in: 'Semaforo'!

!classDefinition: #LuzRoja category: #Semaforo stamp: 'MSM 9/10/2020 18:44:57'!
DenotativeObject subclass: #LuzRoja
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzRoja class' category: #Semaforo stamp: 'MSM 9/10/2020 18:44:57'!
LuzRoja class
	instanceVariableNames: ''!

ObjectBuilder create: #LuzAmarilla asChildOf: DenotativeObject collaboratorNames: '' in: 'Semaforo'!

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/10/2020 18:45:03'!
DenotativeObject subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/10/2020 18:45:03'!
LuzAmarilla class
	instanceVariableNames: ''!

ObjectBuilder create: #LuzVerdes asChildOf: DenotativeObject collaboratorNames: '' in: 'Semaforo'!

!classDefinition: #LuzVerdes category: #Semaforo stamp: 'MSM 9/10/2020 18:45:12'!
DenotativeObject subclass: #LuzVerdes
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzVerdes class' category: #Semaforo stamp: 'MSM 9/10/2020 18:45:12'!
LuzVerdes class
	instanceVariableNames: ''!

!classRenamed: #LuzVerdes as: #LuzVerde stamp: 'MSM 9/10/2020 18:45:18'!
Smalltalk renameClassNamed: #LuzVerdes as: #LuzVerde!

Luz
	collaboratorNames: 'color estado'
	in: 'Semaforo'!

!classDefinition: #Luz category: #Semaforo stamp: 'MSM 9/10/2020 18:50:47'!
DenotativeObject subclass: #Luz
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luz class' category: #Semaforo stamp: 'MSM 9/10/2020 18:50:47'!
Luz class
	instanceVariableNames: 'color estado'!

ObjectBuilder create: #Timer asChildOf: DenotativeObject collaboratorNames: '' in: 'Semaforo'!

!classDefinition: #Timer category: #Semaforo stamp: 'MSM 9/10/2020 18:50:59'!
DenotativeObject subclass: #Timer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Timer class' category: #Semaforo stamp: 'MSM 9/10/2020 18:50:59'!
Timer class
	instanceVariableNames: ''!

ObjectBuilder create: #semaforo asChildOf: DenotativeObject collaboratorNames: '' in: 'Semaforo'!

!classDefinition: #semaforo category: #Semaforo stamp: 'MSM 9/10/2020 18:54:40'!
DenotativeObject subclass: #semaforo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'semaforo class' category: #Semaforo stamp: 'MSM 9/10/2020 18:54:40'!
semaforo class
	instanceVariableNames: ''!
!semaforo class methodsFor: 'no messages' stamp: 'MSM 9/10/2020 18:55:34'!
prender! !

!classRenamed: #semaforo as: #Semaforo stamp: 'MSM 9/10/2020 18:57:10'!
Smalltalk renameClassNamed: #semaforo as: #Semaforo!

!classRenamed: #Semaforo as: #unSemaforo stamp: 'MSM 9/10/2020 19:01:50'!
Smalltalk renameClassNamed: #Semaforo as: #unSemaforo!
!unSemaforo class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:18:55' prior: 50832351!
prender
	LuzAmarilla prender.
	(Delay for:0.5*second)wait.
	LuzAmarilla apagar.
	(Delay for:0.5*second)wait.! !
!LuzAmarilla class methodsFor: 'nil' stamp: 'MSM 9/10/2020 19:19:09'!
prender! !
!LuzAmarilla class methodsFor: 'nil' stamp: 'MSM 9/10/2020 19:19:14'!
apagar! !
!unSemaforo class methodsFor: 'nil' stamp: 'MSM 9/10/2020 19:27:46'!
titilarLuzAmarilla

	LuzAmarilla prender.
	(Delay for:0.5*second)wait.
	LuzAmarilla apagar.
	(Delay for:0.5*second)wait.! !
!unSemaforo class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:29:10' prior: 50832363!
prender
	
	self titilarLuzAmarilla.
	self titilarLuzAmarilla.
	self titilarLuzAmarilla.
	self titilarLuzAmarilla.
	self titilarLuzAmarilla.
	! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:29:44' prior: 50832372!
apagar

	self color: 'black'.! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:30:00' prior: 50832369!
prender

	self color:'yellow'.! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:30:14' prior: 50832396!
prender

	self color: Color yellow.! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:30:30' prior: 50832391!
apagar

	self color: Color black.! !

unSemaforo prender.!

LuzAmarilla
	asChildOf: 'Light'
	collaboratorNames: ''
	in: 'Semaforo'!
!unSemaforo class methodsFor: 'nil' stamp: 'MSM 9/10/2020 19:35:30'!
avisarPrecaucionPorEncendido

	5 timesRepeat: [self titilarLuzAmarilla]! !
!unSemaforo class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:35:50' prior: 50832375!
titilarLuzAmarilla

	! !
!unSemaforo class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:36:13' prior: 50832419!
titilarLuzAmarilla

	LuzAmarilla prender.
	(Delay for:0.5*second)wait.
	LuzAmarilla apagar.
	(Delay for:0.5*second)wait.
	! !

LuzAmarilla
	asChildOf: Light
	collaboratorNames:''
	in: 'Semaforo'!

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/10/2020 19:45:58'!
Light subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/10/2020 19:45:58'!
LuzAmarilla class
	instanceVariableNames: ''!

[unSemaforo prender] fork.!

Light!
!unSemaforo class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:48:56' prior: 50832383!
prender
	
	self avisarPrecaucionPorEncendido.
	! !

LuzAmarilla
	asChildOf: Light
	collaboratorNames: ''
	in: 'Semaforo'!

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/10/2020 19:49:27'!
Light subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/10/2020 19:49:27'!
LuzAmarilla class
	instanceVariableNames: ''!
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 20:02:23' prior: 50832406!
apagar

	^self color: Color black.! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 20:02:29' prior: 50832401!
prender

	^self color: Color yellow.! !

[unSemaforo prender] fork.!

[unSemaforo prender] fork.!

 nil !

[unSemaforo prender] fork.!

ObjectBuilder create: #VerdaderoYFalsoTest
	collaboratorNames: ''
	in: 'Ejercicio Verdadero y Falso'
	!

!classDefinition: #VerdaderoYFalsoTest category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/10/2020 21:11:00'!
DenotativeObject subclass: #VerdaderoYFalsoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio Verdadero y Falso'!

!classDefinition: 'VerdaderoYFalsoTest class' category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/10/2020 21:11:00'!
VerdaderoYFalsoTest class
	instanceVariableNames: ''!

!classDefinition: #Falso category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/10/2020 21:15:18'!
DenotativeObject subclass: #Falso
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio Verdadero y Falso'!

!classDefinition: #Verdadero category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/10/2020 21:15:20'!
DenotativeObject subclass: #Verdadero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio Verdadero y Falso'!
!VerdaderoYFalsoTest class methodsFor: 'nil' stamp: 'MSM 9/10/2020 21:15:38'!
test01NoVerdaderoEsFalso
	"comment stating purpose of message"

	Assert that: Falso isEqualTo: Verdadero no.! !

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/10/2020 21:16:22'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/10/2020 21:16:22'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/10/2020 21:16:54'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/10/2020 21:16:54'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/10/2020 21:17:15'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/10/2020 21:17:15'!
ERROR!
!Verdadero class methodsFor: 'operaciones' stamp: 'MSM 9/10/2020 21:17:34'!
no
	self shouldBeImplemented.! !
!Verdadero class methodsFor: 'operaciones' stamp: 'MSM 9/10/2020 21:18:06' prior: 50832532!
no
	^Falso! !

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/10/2020 21:18:24'!
PASSED!

| b x y |!

'a' hasLiterals: 'a'.!

'a' hasLiterals: 'a'.!

'a' hasLiterals: 'a'.!

'a' hasLiteral: 'a'.!

| b x y |!

x = y!

x = y!

x = y!

----End fileIn of /home/mariano/Documentos/Ing1/linux64/Packages/DevTools/ClassCommentBrowser.pck.st----!

isLiteral.!

isLiteral.!

isLiteral.!

x isLiteral!

true!

----STARTUP---- (14 September 2020 20:41:49) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


!classDefinition: #Luces category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #Luces
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luces class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
Luces class
	instanceVariableNames: ''!

!classDefinition: #Luces category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #Luces
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luces class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
Luces class
	instanceVariableNames: ''!

!classDefinition: #Luz category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #Luz
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luz class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
Luz class
	instanceVariableNames: ''!

!classDefinition: #Luz category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #Luz
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luz class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
Luz class
	instanceVariableNames: ''!

!classDefinition: #LuzRoja category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #LuzRoja
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzRoja class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
LuzRoja class
	instanceVariableNames: ''!

!classDefinition: #LuzRoja category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #LuzRoja
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzRoja class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
LuzRoja class
	instanceVariableNames: ''!

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
LuzAmarilla class
	instanceVariableNames: ''!

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
LuzAmarilla class
	instanceVariableNames: ''!

!classDefinition: #LuzVerdes category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
DenotativeObject subclass: #LuzVerdes
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzVerdes class' category: #Semaforo stamp: 'MSM 9/14/2020 20:41:59'!
LuzVerdes class
	instanceVariableNames: ''!

!classDefinition: #LuzVerdes category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #LuzVerdes
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzVerdes class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
LuzVerdes class
	instanceVariableNames: ''!

!classDefinition: #Luz category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #Luz
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luz class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
Luz class
	instanceVariableNames: 'color estado'!

!classDefinition: #Luz category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #Luz
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Luz class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
Luz class
	instanceVariableNames: 'color estado'!

!classDefinition: #Timer category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #Timer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Timer class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
Timer class
	instanceVariableNames: ''!

!classDefinition: #Timer category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #Timer
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'Timer class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
Timer class
	instanceVariableNames: ''!

!classDefinition: #semaforo category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #semaforo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'semaforo class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
semaforo class
	instanceVariableNames: ''!

!classDefinition: #semaforo category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #semaforo
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'semaforo class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
semaforo class
	instanceVariableNames: ''!
!semaforo class methodsFor: 'no messages' stamp: 'MSM 9/10/2020 18:55:34'!
prender! !
!LuzAmarilla class methodsFor: 'nil' stamp: 'MSM 9/10/2020 19:19:09'!
prender! !
!LuzAmarilla class methodsFor: 'nil' stamp: 'MSM 9/10/2020 19:19:14'!
apagar! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:29:44' prior: 50833516!
apagar

	self color: 'black'.! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:30:00' prior: 50833513!
prender

	self color:'yellow'.! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:30:14' prior: 50833525!
prender

	self color: Color yellow.! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 19:30:30' prior: 50833520!
apagar

	self color: Color black.! !

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
Light subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
LuzAmarilla class
	instanceVariableNames: ''!

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
Light subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
LuzAmarilla class
	instanceVariableNames: ''!

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
Light subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
LuzAmarilla class
	instanceVariableNames: ''!

!classDefinition: #LuzAmarilla category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
Light subclass: #LuzAmarilla
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Semaforo'!

!classDefinition: 'LuzAmarilla class' category: #Semaforo stamp: 'MSM 9/14/2020 20:42:00'!
LuzAmarilla class
	instanceVariableNames: ''!
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 20:02:23' prior: 50833535!
apagar

	^self color: Color black.! !
!LuzAmarilla class methodsFor: 'as yet unclassified' stamp: 'MSM 9/10/2020 20:02:29' prior: 50833530!
prender

	^self color: Color yellow.! !

!classDefinition: #VerdaderoYFalsoTest category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #VerdaderoYFalsoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio Verdadero y Falso'!

!classDefinition: 'VerdaderoYFalsoTest class' category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/14/2020 20:42:00'!
VerdaderoYFalsoTest class
	instanceVariableNames: ''!

!classDefinition: #VerdaderoYFalsoTest category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #VerdaderoYFalsoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio Verdadero y Falso'!

!classDefinition: 'VerdaderoYFalsoTest class' category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/14/2020 20:42:00'!
VerdaderoYFalsoTest class
	instanceVariableNames: ''!

!classDefinition: #Falso category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #Falso
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio Verdadero y Falso'!

!classDefinition: #Verdadero category: #'Ejercicio Verdadero y Falso' stamp: 'MSM 9/14/2020 20:42:00'!
DenotativeObject subclass: #Verdadero
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Ejercicio Verdadero y Falso'!
!VerdaderoYFalsoTest class methodsFor: 'nil' stamp: 'MSM 9/10/2020 21:15:38'!
test01NoVerdaderoEsFalso
	"comment stating purpose of message"

	Assert that: Falso isEqualTo: Verdadero no.! !
!Verdadero class methodsFor: 'operaciones' stamp: 'MSM 9/10/2020 21:17:34'!
no
	self shouldBeImplemented.! !
!Verdadero class methodsFor: 'operaciones' stamp: 'MSM 9/10/2020 21:18:06' prior: 50833642!
no
	^Falso! !

!classDefinition: #CommentGuide category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
AbstractHierarchicalList subclass: #CommentGuide
	instanceVariableNames: 'window rootNames root browser subList index key'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: #CommentGuide category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
AbstractHierarchicalList subclass: #CommentGuide
	instanceVariableNames: 'window rootNames root browser subList index key'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: 'CommentGuide class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
CommentGuide class
	instanceVariableNames: 'topics'!

!classDefinition: 'CommentGuide class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
CommentGuide class
	instanceVariableNames: 'topics'!

!classDefinition: #NotCommented category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
ActiveModel subclass: #NotCommented
	instanceVariableNames: 'classList bumList bumListIndex'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: #NotCommented category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
ActiveModel subclass: #NotCommented
	instanceVariableNames: 'classList bumList bumListIndex'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: 'NotCommented class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
NotCommented class
	instanceVariableNames: ''!

!classDefinition: 'NotCommented class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
NotCommented class
	instanceVariableNames: ''!

!classDefinition: #CommentGuideListMorph category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
HierarchicalListMorph subclass: #CommentGuideListMorph
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: #CommentGuideListMorph category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
HierarchicalListMorph subclass: #CommentGuideListMorph
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: 'CommentGuideListMorph class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
CommentGuideListMorph class
	instanceVariableNames: ''!

!classDefinition: 'CommentGuideListMorph class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
CommentGuideListMorph class
	instanceVariableNames: ''!

!classDefinition: #CommentGuideWindow category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
SystemWindow subclass: #CommentGuideWindow
	instanceVariableNames: 'listMorph textMorph nwin hwin'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: #CommentGuideWindow category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
SystemWindow subclass: #CommentGuideWindow
	instanceVariableNames: 'listMorph textMorph nwin hwin'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: 'CommentGuideWindow class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
CommentGuideWindow class
	instanceVariableNames: ''!

!classDefinition: 'CommentGuideWindow class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
CommentGuideWindow class
	instanceVariableNames: ''!

!classDefinition: #NoCommentsWindow category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
SystemWindow subclass: #NoCommentsWindow
	instanceVariableNames: 'aList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: #NoCommentsWindow category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
SystemWindow subclass: #NoCommentsWindow
	instanceVariableNames: 'aList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: 'NoCommentsWindow class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
NoCommentsWindow class
	instanceVariableNames: ''!

!classDefinition: 'NoCommentsWindow class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
NoCommentsWindow class
	instanceVariableNames: ''!

!classDefinition: #CommentGuideWrapper category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
ObjectExplorerWrapper subclass: #CommentGuideWrapper
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: #CommentGuideWrapper category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
ObjectExplorerWrapper subclass: #CommentGuideWrapper
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ClassCommentBrowser'!

!classDefinition: 'CommentGuideWrapper class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
CommentGuideWrapper class
	instanceVariableNames: ''!

!classDefinition: 'CommentGuideWrapper class' category: #ClassCommentBrowser stamp: 'MSM 9/14/2020 20:42:00'!
CommentGuideWrapper class
	instanceVariableNames: ''!
!CommentGuide commentStamp: 'dhn 5/11/2019 14:52:06' prior: 0!
Class comments browser for Cuis

To open, evaluate:
	CommentGuide open.

Class names are organized into "categories" according to whether a certain string can be found in the class name. The categories consist of all terms and acronyms which appear in Cuis class names. Terms are strings with initial caps. Acronyms are strings of all-caps.

This class provides the model for browsing class comments based on class names which contain categories such as:

	Pluggable
	Morphic
	ST80
	93
	Debug
	Text
	Morph
	
The view for this model is CommentGuideWindow.!
!NotCommented commentStamp: '<historical>' prior: 0!
The model for view of classes without comments.!
!CommentGuideListMorph commentStamp: 'dhn 6/15/2016 17:30' prior: 0!
A list of terms and acronyms which occur in class names. Selection can be made by typed key, arrows, or clicks.

This class enables access to the scroller, which is needed for selection by typed key.!
!CommentGuideWindow commentStamp: 'dhn 5/11/2019 14:50:00' prior: 0!
Show a window for browsing class comments based on class names which contain terms such as:

	Pluggable
	Morphic
	ST80
	93
	Debug
	Text
	Morph

Use the menu 'World > Help... > Class Comment Browser' or: 

CommentGuide open.	
	
The window has a text pane with a list pane beside it. 

The categories appear in a hierarchical list whose elements can be expanded into class names. When a class name is selected, its class comment appears in an adjacent pane.

Class additions and deletions are automatically reflected in the list.

Within the class names of a category, a pop-up menu enables:

- browsing the class
- browsing the hierarchy of the class
- browsing the protocol of the class
- browsing versions of the class comment
- searching the comments of all classes in a category
 
In the outer list of categories, a pop-up menu enables:

- searches over the names of all classes
- searches over all class comments
!
!NoCommentsWindow commentStamp: '<historical>' prior: 0!
A view for listing classes without comments.!
!CommentGuideWrapper commentStamp: 'dhn 9/12/2015 12:35' prior: 0!
Provide the wrapper for a list item in CommentGuideWindow.

Removes the undesired cruft after the item name.!
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 10/6/2015 20:43'!
commentOf: aString
	"Answer the class comment of the class named aString"

	| className |
	
	window setLabel: 'Class Comment for ', aString.
	
	className _ Smalltalk at: aString asSymbol.
	browser setClass: className selector: nil.
	^ browser classCommentText
! !
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 10/7/2015 13:29' overrides: 16882850!
editorClassFor: textGetter

	^ SmalltalkEditor
! !
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 11/5/2015 14:58' overrides: 16777534!
getCurrentSelection
	"Send the class comment to the text pane"
	| str |

	super getCurrentSelection.
	currentSelection ifNotNil: [
		currentSelection withoutListWrapper class == String
			ifTrue: [str _ self commentOf: currentSelection item]
			ifFalse: [
				str _ ''.
				window setLabel: 'Class Comment Browser'.
				root _ currentSelection].
		window textMorph model actualContents: str].
	^ currentSelection
! !
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 9/24/2015 09:08'!
getList
	"Answer the roots of the hierarchical list"
	| arr k |
	arr _ Array new: rootNames size.
	k _ 0.
	rootNames keys asSortedCollection do: [:ea |
		k _ k + 1.
		arr at: k put: (
			CommentGuideWrapper
				with: (rootNames at: ea) asSortedCollection
				name: ea
				model: self)].
	^ arr
! !
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 11/5/2015 15:22'!
indexOf: aChar
	"Set the current selection to the root which starts with aChar"
	| sel ch |

	key = aChar
		ifTrue: [
			index _ index + 1.
			index > subList size
				ifTrue: [index _ 1]]
		ifFalse: [
			index _ 1.
			key _ aChar.
			ch _ key asString capitalized.
			subList _ self getList select: [:ea | ch  = ea itemName first asString].
			window setLabel: 'Class Comment Browser'.
			window textMorph model actualContents: ''].
	subList ifEmpty: [window listMorph flash.	^ 0].
	sel _ subList at: index.
	currentSelection _ sel.
	currentSelection ifNil: [^self].
	currentSelection sendSettingMessageTo: self
! !
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 9/15/2015 18:51'!
root
	"Answer the value of root"

	^ root! !
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 9/22/2015 17:04'!
rootNames: anObject
	"Set the value of rootNames"

	rootNames _ anObject! !
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 9/17/2015 21:01'!
selectedRoot
	"Answer the class names containing root as a substring"
	^ rootNames at: root itemName! !
!CommentGuide methodsFor: 'accessing' stamp: 'dhn 9/9/2015 18:24'!
window: anObject
	"Set the value of window"

	window _ anObject! !
!CommentGuide methodsFor: 'initialization' stamp: 'dhn 10/6/2015 20:40' overrides: 16896425!
initialize
	"Establish the database for the class comment browser"
	
	super initialize.
	
	self rootNames: self setList.
	browser _ Browser new
! !
!CommentGuide methodsFor: 'initialization' stamp: 'dhn 11/25/2015 10:23'!
setList
	"Answer the dictionary of roots and their children for the hierarchical list"
	| dx |
	dx _ Dictionary new.
	self parseClassNames do: [:n | dx at: n put: OrderedCollection new].
	
	Smalltalk classNames do: [:ea |
		| in |
		in _ ea asString.
		(self parseName: in) do: [:term | (dx at: term) add: in]].
	^ dx! !
!CommentGuide methodsFor: 'parsing' stamp: 'dhn 9/21/2015 16:50'!
parseClassNames
	"Answer a set of initial-caps terms and acronyms which appear in class names"
	| set terms |
	set _ Set new.
	Smalltalk classNames do: [:c |
		terms _ self parseName: c asString.
		terms do: [:ea | set add: ea]].
	^ set asSortedCollection! !
!CommentGuide methodsFor: 'parsing' stamp: 'dhn 1/28/2016 17:24'!
parseName: aString
	"Answer the initial-caps components and acronyms of aString"
	| tokens acronym str |
	
	tokens _ aString 
		findTokens: self class tokenChars 
		keep: self class tokenChars.
	str _ OrderedCollection new.
	acronym _ ''.
	tokens do: [:ea |
		(ea first isUppercase or: ea first isDigit)
			ifTrue: [acronym _ acronym, ea first asString]
			ifFalse: [
				(acronym size > 1) 
					ifTrue: [
						str add: (acronym copyFrom: 1 to: acronym size - 1).
						acronym _ acronym last asString].
				str add: acronym, ea.
				acronym _ '']].
	acronym isEmpty ifFalse: [str add: acronym].
	^ str! !
!CommentGuide class methodsFor: 'instance creation' stamp: 'dhn 9/11/2015 21:05'!
how
"
	CommentGuide open.
"! !
!CommentGuide class methodsFor: 'instance creation' stamp: 'dhn 9/23/2015 18:29'!
open
"
	CommentGuide open.
"
	(CommentGuideWindow
		open: self new
		label: 'Class Comment Browser')
		setWindowColor:  Theme current browser! !
!CommentGuide class methodsFor: 'parsing' stamp: 'dhn 1/28/2016 17:12'!
tokenChars
	"Answer the alphabet, capitalized, plus the digits"
	^ ($A to: $Z), ($0 to: $9)! !
!NotCommented methodsFor: 'operating' stamp: 'dhn 5/10/2019 21:08:59'!
bumListIndex
	"Answer the value of bumListIndex"
	
	bumListIndex ifNil: [bumListIndex _ 0].
	^ bumListIndex! !
!NotCommented methodsFor: 'operating' stamp: 'dhn 5/10/2019 21:11:02'!
bumListIndex: anIndex
	"Set the value of bumListIndex"
	
	bumListIndex _ anIndex.
	self changed: #bumListIndex! !
!NotCommented methodsFor: 'accessing' stamp: 'dhn 5/10/2019 21:34:40'!
bumList
	"Answer the list of classes"
	
	^ bumList! !
!NotCommented methodsFor: 'accessing' stamp: 'dhn 5/10/2019 21:35:36'!
bumList: aCollection
	"Set the list of classes"
	
	bumList _ aCollection! !
!NotCommented methodsFor: 'accessing' stamp: 'dhn 5/9/2019 21:12:37'!
classList
	"Answer the value of classList"

	classList ifNil: [classList _ OrderedCollection new].
	^ classList! !
!NotCommented methodsFor: 'accessing' stamp: 'dhn 5/9/2019 21:07:40'!
classList: anObject
	"Set the value of classList"

	classList _ anObject! !
!NotCommented methodsFor: 'accessing' stamp: 'dhn 5/9/2019 21:43:01'!
getList

	^ self bumList! !
!NotCommented methodsFor: 'initialization' stamp: 'dhn 5/10/2019 13:01:53' overrides: 16896425!
initialize

	bumList _ OrderedCollection new.
	bumListIndex _ 0! !
!CommentGuideListMorph methodsFor: 'events-processing' stamp: 'dhn 6/15/2016 16:56'!
keySelection
	"Scroll the hiearchical list based on a keystroke"
	| i |
	
	model getCurrentSelection ifNil: [^self selectionIndex: 0].
	i _ scroller submorphs findFirst: [:m | m contents == model getCurrentSelection itemName].
	^ self selectionIndex: i! !
!CommentGuideWindow methodsFor: 'browsing' stamp: 'dhn 11/5/2015 14:53'!
browseClass
	"Open a browser on the selected class"
	model getCurrentSelection item class == String
		ifTrue: [
			BrowserWindow 
				fullOnClass: (Smalltalk at: model getCurrentSelection item asSymbol) 
				selector: nil]! !
!CommentGuideWindow methodsFor: 'browsing' stamp: 'dhn 1/11/2018 16:48:17'!
browseFullProtocol
	"Create and schedule a new protocol browser on the currently selected class"

	| aPBrowser class label |
	model getCurrentSelection item class == String
		ifTrue: [
			class _ Smalltalk at: model getCurrentSelection item asSymbol.
			aPBrowser _ ProtocolBrowser new on: class.
			label _ 'Entire protocol of: ', class name.
			ProtocolBrowserWindow open: aPBrowser label: label] ! !
!CommentGuideWindow methodsFor: 'browsing' stamp: 'dhn 11/5/2015 14:54'!
browseHierarchy
	"Create and schedule a class list browser on the selected class' hierarchy."

	model getCurrentSelection item class == String
		ifTrue: [
			HierarchyBrowserWindow
				onClass: (Smalltalk at: model getCurrentSelection item asSymbol)
				selector: nil]! !
!CommentGuideWindow methodsFor: 'browsing' stamp: 'dhn 11/5/2015 14:54'!
browseVersions
	"Open a browser on the versions of the selected class' comment"
	model getCurrentSelection item class == String
		ifTrue: [
			VersionsBrowserWindow 
				browseCommentOf: (Smalltalk at: model getCurrentSelection item asSymbol)]! !
!CommentGuideWindow methodsFor: 'browsing' stamp: 'dhn 5/11/2019 14:06:50'!
help
	"Information on how to use Class Coment Browser"
	
	^ 'Two different pop-up menus appear, depending on whether there is a selection in the list or not.

If no selection:
	Search all class comments - which contain a string.
	Search all class names - using a fragment or a full name.
	Help... - show this page.
	
If selection (expanded or not):
	Search comments - of a class or all classes in the selection.
	Comment versions - open a version window for the class comment
	Browse full - open a browser for the named class
	Browse hierarchy - open a hierarchy browser for the named class
	Browse protocol - open a protocol browser for the named class
	Help... - show this page.

Typing a character causes the list to scroll to the next entry which begins with that character. The same character can be repeated to cycle through that part of the list.

This browser lists all the terms, acronyms, and numbers which appear in ''Smalltalk classNames''. It finds the complete class names containing these.
'
	
	! !
!CommentGuideWindow methodsFor: 'browsing' stamp: 'dhn 5/11/2019 12:44:12'!
openHelp
	"Show help screen"
	
	hwin _ (TextModel new contents: self help; openLabel: 'Class Comment Guide Help')
		morphExtent: 600@500! !
!CommentGuideWindow methodsFor: 'browsing' stamp: 'dhn 5/19/2016 11:19'!
scrollToClass: aString
	"Scroll to an entry for the class named aString"
	| cat m1 m2 str |
	
	"ensure that the first category which contains aString is expanded"
	cat _ (model parseName: aString) first.
	m1 _ listMorph findDeepSubmorphThat: [:ea | 
		(ea respondsTo: #contents) and: [ea contents includesSubString: cat]] ifAbsent: [nil].
	m1 ifNotNil: [m1 isExpanded ifFalse: [listMorph toggleExpandedState: m1]].
	
	"select the class entry and scroll it into view"
	str _  aString asString printString.
	m2 _ listMorph findDeepSubmorphThat: [:ea | 
		(ea respondsTo: #contents) and: [ea contents includesSubString: str]] ifAbsent: [nil].
	m2 ifNotNil: [
		listMorph 
			setSelectedMorph: m2;
			scrollSelectionIntoView]! !
!CommentGuideWindow methodsFor: 'browsing' stamp: 'dhn 5/9/2019 17:07:07'!
showFind: aName
	"Cause the class comment for aName to display; answer the comment"
	| cmt |

	cmt _ model commentOf: aName.
	textMorph model actualContents: cmt.
	self scrollToClass: aName.
	^ cmt! !
!CommentGuideWindow methodsFor: 'instance creation' stamp: 'dhn 6/16/2016 13:08'!
buildMorphicWindow
	"Answer a window for the class comment browser"
	| row |
	listMorph _ CommentGuideListMorph
		model: model
		listGetter: #getList
		indexGetter: #getCurrentSelection
		indexSetter: #noteNewSelection:
		mainView: self
		menuGetter: #commentGuideMenu
		keystrokeAction: #respondToKey:.
	listMorph name: #Hierarchy.
	self when: #getList send: #update: to: listMorph withArguments: #(#getList).
	textMorph _ TextModelMorph textProvider: model.
	textMorph 
		name: 'Class Comment';
		askBeforeDiscardingEdits: false.
	row _ LayoutMorph newRow.
	row
		addMorph: listMorph fixedWidth: 250;
		addAdjusterAndMorph: textMorph proportionalWidth: 1.0.
	self layoutMorph
		addMorph: row.
	model window: self! !
!CommentGuideWindow methodsFor: 'instance creation' stamp: 'dhn 6/16/2016 13:17'!
refreshList
	"Re-build the hierarchical list"
	model 
		noteNewSelection: nil;
		rootNames: model setList.
	self triggerEvent: #getList 	"needed when a class is added or deleted"! !
!CommentGuideWindow methodsFor: 'instance creation' stamp: 'dhn 9/24/2015 08:45'!
refreshListAfterDelay
	"The pause that refreshes"

	self addAlarm: #refreshList after: 20 "milliseconds" ! !
!CommentGuideWindow methodsFor: 'menu' stamp: 'dhn 5/11/2019 12:10:21'!
commentGuideMenu
	"Show the popup menu"
	
	| aMenu |
	aMenu _ MenuMorph new defaultTarget: self.
	model getCurrentSelection
		ifNil: [
			aMenu
				add: 'Search all class comments'	action: #searchAllComments;
				add: 'Search all class names'		action: #searchClassNames;
				add: 'Classes without comments'	action: #noComment;
				add: 'Help...'							action: #openHelp]
		ifNotNil: [
			aMenu
				add: 'Search comments'		action: #searchComment;
				add: 'Comment versions'		action: #browseVersions;
				add: 'Browse full'			action: #browseClass;
				add: 'Browse hierarchy'		action: #browseHierarchy;
				add: 'Browse protocol'		action: #browseFullProtocol;
				add: 'Help...'					action: #openHelp].
	^ aMenu! !
!CommentGuideWindow methodsFor: 'initialization' stamp: 'dhn 9/24/2015 08:47' overrides: 50559914!
initialize

	super initialize.

	SystemChangeNotifier uniqueInstance removeActionsWithReceiver: self.

	SystemChangeNotifier uniqueInstance
		when: #classAdded send: #refreshListAfterDelay to: self;
		when: #classCommented send: #refreshListAfterDelay to: self;
		when: #classDefinitionChanged send: #refreshListAfterDelay to: self;
		when: #classRecategorized send: #refreshListAfterDelay to: self;
		when: #classRemoved send: #refreshListAfterDelay to: self;
		when: #classRenamed send: #refreshListAfterDelay to: self
! !
!CommentGuideWindow methodsFor: 'accessing' stamp: 'dhn 10/27/2015 20:49'!
listMorph
	"Answer the value of listMorph"

	^ listMorph! !
!CommentGuideWindow methodsFor: 'accessing' stamp: 'dhn 8/19/2015 19:47'!
textMorph
	"Answer the value of textMorph"

	^ textMorph! !
!CommentGuideWindow methodsFor: 'events' stamp: 'dhn 6/15/2016 16:56'!
respondToKey: aChar
	"Take action when a key is struck. The key value is aChar"

	model indexOf: aChar.
	listMorph keySelection! !
!CommentGuideWindow methodsFor: 'searching' stamp: 'dhn 5/11/2019 13:40:32'!
noComment
	"Search for classes with no comments"
	| hits mod |
	
	hits _ Smalltalk allClasses select: [:eaClass | 
		eaClass organization classComment size<10].
	hits
		ifEmpty: [listMorph flash]
		ifNotEmpty: [
			mod _ NotCommented new.
			mod bumList: hits.
			nwin _ (NoCommentsWindow open: mod label: 'Classes with no Comments') morphExtent: 400@600]! !
!CommentGuideWindow methodsFor: 'searching' stamp: 'dhn 5/9/2019 16:53:44'!
searchAllComments
	"Search for a string in class comments of all classes"
	| arg hits caption menu |
	
	arg _ ''.
	arg _ FillInTheBlankMorph request: 'Search All Class Comments for:'.
	caption _ 'Classes with Comments containing "', arg, '"'.
			
	hits _ self searchIn: Smalltalk classNames for: arg.
	hits 
		ifEmpty: [listMorph flash]
		ifNotEmpty: [
			(menu _ MenuMorph entitled: caption)
				defaultTarget: self;
				addStayUpIcons.
				hits do: [:h | menu add: h target: self action: #showFind: argument: h].
				menu 
					openInWorld;
					morphPosition: self morphPosition + (-70@50)].
					
	^ nil! !
!CommentGuideWindow methodsFor: 'searching' stamp: 'dhn 9/18/2018 17:55:56'!
searchClassNames
	"Search class names for a string"
	| arg str hits menu |
	arg _ FillInTheBlankMorph request: 'Search Class Names for:'.
	arg 
		ifNotEmpty: [
			hits _ OrderedCollection new.
			(menu _ MenuMorph entitled: 'Class Names With "', arg, '"')
				defaultTarget: self;
				addStayUpIcons.
			Smalltalk classNames do: [:ea |
				str _ ea asString.
				(str findString: arg startingAt: 1 caseSensitive: false) > 0
					ifTrue: [
						hits addLast: ea asString.
			]].
		hits 
			ifEmpty: [listMorph flash]
			ifNotEmpty: [
				hits do: [:h | menu add: h target: self action: #showFind: argument: h].
				menu 
					openInWorld;
					morphPosition: self morphPosition + (-70@50)]]! !
!CommentGuideWindow methodsFor: 'searching' stamp: 'dhn 9/18/2018 18:16:02'!
searchComment
	"Search for a string in class comments of root siblings"
	| arg hits col nam menu |
	arg _ ''.
	(model getCurrentSelection item isKindOf: String)
		ifTrue: [	"searching from the leaf"
			col _ model selectedRoot.
			nam _ model root itemName]
		ifFalse: [	"searching from the root"
			col _ model getCurrentSelection item.	"gather every leaf"
			nam _ model getCurrentSelection itemName].
		arg _ FillInTheBlankMorph request: 'Search Root Named "', nam, '"'.
		(menu _ MenuMorph entitled: 'Comments in Root with "', arg, '"')
			defaultTarget: self;
			addStayUpIcons.

		hits _ self searchIn: col for: arg.
		hits 
			ifEmpty: [listMorph flash]
			ifNotEmpty: [
				hits do: [:h | menu add: h target: self action: #showFind: argument: h].
				menu 
					openInWorld;
					morphPosition: self morphPosition + (-70@50)].
	^ nil! !
!CommentGuideWindow methodsFor: 'searching' stamp: 'dhn 11/5/2015 16:13'!
searchIn: aCollection for: aString
	"Answer the names of classes in aCollection whose comments include aString"
	| str hits |
	hits _ OrderedCollection new.
	aCollection do: [:ea |
		str _ model commentOf: ea.
		(str findString: aString startingAt: 1 caseSensitive: false) > 0
			ifTrue: [hits addLast: ea]].
	^ hits! !
!CommentGuideWindow methodsFor: 'open/close' stamp: 'dhn 5/11/2019 12:45:22' overrides: 16926548!
closeBoxHit
	"Close the window of classes with no comments and help window, if any"
	
	nwin ifNotNil: [nwin delete].
	hwin ifNotNil: [hwin delete].
	super closeBoxHit! !
!NoCommentsWindow methodsFor: 'initialization' stamp: 'dhn 5/10/2019 21:31:05'!
buildMorphicWindow
	"Build the window for the list of classes without comments"
	
	aList _ (PluggableListMorph
				model: model
				listGetter: #bumList  "answers the list content"
				indexGetter: #bumListIndex  "answers the selection made in the list"
				indexSetter: #bumListIndex:  "sets the list index"
				mainView: self
				menuGetter: nil
				keystrokeAction: nil)
					name: 'The List'.
	layoutMorph addMorphUseAll: aList
! !
!CommentGuideWrapper methodsFor: 'access' stamp: 'dhn 9/12/2015 11:31' overrides: 16883557!
asString
	"Answer the string for the hierarchical list category"
	^ itemName! !

----SNAPSHOT----(14 September 2020 20:42:46) CuisUniversity-4137.image priorSource: 16018632!

----SNAPSHOT----(14 September 2020 20:42:57) CuisUniversity-4137.image priorSource: 16089679!

ObjectBuilder create: #NumerosDePeanoTest
	collaboratorNames: ''
	in: 'Numeros De Peano'
	!

!classDefinition: #NumerosDePeanoTest category: #'Numeros De Peano' stamp: 'MSM 9/14/2020 20:44:09'!
DenotativeObject subclass: #NumerosDePeanoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'NumerosDePeanoTest class' category: #'Numeros De Peano' stamp: 'MSM 9/14/2020 20:44:09'!
NumerosDePeanoTest class
	instanceVariableNames: ''!

!classDefinition: #I category: #'Numeros De Peano' stamp: 'MSM 9/14/2020 20:46:40'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano' stamp: 'MSM 9/14/2020 20:46:41'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/14/2020 20:46:38'!
test01SiguienteIESII

	Assert that: I next isEqualTo: II.
	! !

	Assert that: I next isEqualTo: II.!

	Assert that: I next isEqualTo: II.!
!I class methodsFor: 'nil' stamp: 'MSM 9/14/2020 20:48:41'!
next

	^II! !

	Assert that: I next isEqualTo: II.!

	Assert that: I next isEqualTo: II.!

I next.!

II
	asChildOf: I
	collaboratorNames: ''
	in: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano' stamp: 'MSM 9/15/2020 17:01:26'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'II class' category: #'Numeros De Peano' stamp: 'MSM 9/15/2020 17:01:26'!
II class
	instanceVariableNames: ''!

self!

I!
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:22:36'!
+ unNumero
	
	^self next.
	! !
!II class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:34:04' overrides: 50834515!
+ unNumero

	^ (unNumero previous + self) next.! !
!II class methodsFor: 'nil' stamp: 'MSM 9/15/2020 17:34:58'!
previous

	^self parent.! !

self addChildDenotativeObject!

self addChildDenotativeObject!

#addChildDenotativeObject!
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:50:16' prior: 50834496!
next

	^self addDenotativeObjectNamed: (self asString,I) asChildOf: self inCategory:  'Numeros De Peano'! !

^self addDenotativeObjectNamed: (self asString,I) asChildOf: self inCategory:  'Numeros De Peano'!
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:50:34' prior: 50834530!
next

	^self addDenotativeObjectNamed: (self asString,'I') asChildOf: self inCategory:  'Numeros De Peano'! !

^self addDenotativeObjectNamed: (self asString,'I') asChildOf: self inCategory:  'Numeros De Peano'!

Browser addDenotativeObjectNamed: (self asString,'I') asChildOf: self inCategory:  'Numeros De Peano'!
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:54:25' prior: 50834540!
next

	^DenotativeObject addDenotativeObjectNamed: (self asString,'I') asChildOf: self inCategory:  'Numeros De Peano'! !

	^DenotativeObject addDenotativeObjectNamed: (self asString,'I') asChildOf: self inCategory:  'Numeros De Peano'!

	^DenotativeObject addDenotativeObjectNamed: (self asString,'I') asChildOf: self inCategory:  'Numeros De Peano'!
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:55:49' prior: 50834553!
next

! !
!II class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:55:58' overrides: 50834567!
next! !

!methodRemoval: II class #next stamp: 'MSM 9/15/2020 17:56:05'!
next!
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 17:56:41'!
test02SiguienteIIESIII! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 17:58:03'!
Test03PreviousIIEsI! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 17:58:09'!
test03PreviousIIEsI! !

!methodRemoval: NumerosDePeanoTest class #Test03PreviousIIEsI stamp: 'MSM 9/15/2020 17:58:14'!
Test03PreviousIIEsI!
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:00:53'!
test04OrdenDeSuma

	Assert that: I + II isEqualTo: II + I.! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:03:08'!
test05SumaIMasIESII

	^Assert that: I + I isEqualTo: II! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:05:35'!
test06SumaIIIMasIIIII
! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:10:22'!
test07SumaConmutativa

	^Assert that: I + II isEqualTo: II + I.! !

!classDefinition: #III category: #'Numeros De Peano' stamp: 'MSM 9/15/2020 18:12:38'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:12:35'!
test08SumaAsociativa

	^Assert that: (I + II) + III isEqualTo: I + (II + III). ! !

III
	asChildOf: 'II'
	collaboratorNames: ''
	in: 'Numeros De Peano'!

III
	asChildOf: II
	collaboratorNames: ''
	in: 'Numeros De Peano'!

!classDefinition: #III category: #'Numeros De Peano' stamp: 'MSM 9/15/2020 18:13:00'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'III class' category: #'Numeros De Peano' stamp: 'MSM 9/15/2020 18:13:00'!
III class
	instanceVariableNames: ''!
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:16:22'!
test09ProductoIxI! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:16:56'!
test10ProductoIxII! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:17:18'!
test11ProductoIIxII! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:19:27'!
Producto12OrdenDeProducto! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:19:38'!
test12OrdenDeProducto! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:20:21'!
test13ProductoDistributiva! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:21:38'!
test14ProductoConmutativa! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:21:57'!
test15ProductoAsociativa! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:22:44'!
test16DivisionPorI! !

----STARTUP---- (16 September 2020 18:29:44) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


!classDefinition: #NumerosDePeanoTest category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
DenotativeObject subclass: #NumerosDePeanoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'NumerosDePeanoTest class' category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
NumerosDePeanoTest class
	instanceVariableNames: ''!

!classDefinition: #NumerosDePeanoTest category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
DenotativeObject subclass: #NumerosDePeanoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'NumerosDePeanoTest class' category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
NumerosDePeanoTest class
	instanceVariableNames: ''!

!classDefinition: #I category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: #II category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/14/2020 20:46:38'!
test01SiguienteIESII

	Assert that: I next isEqualTo: II.
	! !
!I class methodsFor: 'nil' stamp: 'MSM 9/14/2020 20:48:41'!
next

	^II! !

!classDefinition: #II category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'II class' category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
II class
	instanceVariableNames: ''!

!classDefinition: #II category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'II class' category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
II class
	instanceVariableNames: ''!
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:22:36'!
+ unNumero
	
	^self next.
	! !
!II class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:34:04' overrides: 50834746!
+ unNumero

	^ (unNumero previous + self) next.! !
!II class methodsFor: 'nil' stamp: 'MSM 9/15/2020 17:34:58'!
previous

	^self parent.! !
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:50:16' prior: 50834722!
next

	^self addDenotativeObjectNamed: (self asString,I) asChildOf: self inCategory:  'Numeros De Peano'! !
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:50:34' prior: 50834758!
next

	^self addDenotativeObjectNamed: (self asString,'I') asChildOf: self inCategory:  'Numeros De Peano'! !
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:54:25' prior: 50834764!
next

	^DenotativeObject addDenotativeObjectNamed: (self asString,'I') asChildOf: self inCategory:  'Numeros De Peano'! !
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:55:49' prior: 50834771!
next

! !
!II class methodsFor: 'Operaciones' stamp: 'MSM 9/15/2020 17:55:58' overrides: 50834778!
next! !

!methodRemoval: II class #next stamp: 'MSM 9/16/2020 18:29:47'!
next!
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 17:56:41'!
test02SiguienteIIESIII! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 17:58:03'!
Test03PreviousIIEsI! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 17:58:09'!
test03PreviousIIEsI! !

!methodRemoval: NumerosDePeanoTest class #Test03PreviousIIEsI stamp: 'MSM 9/16/2020 18:29:47'!
Test03PreviousIIEsI!
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:00:53'!
test04OrdenDeSuma

	Assert that: I + II isEqualTo: II + I.! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:03:08'!
test05SumaIMasIESII

	^Assert that: I + I isEqualTo: II! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:05:35'!
test06SumaIIIMasIIIII
! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:10:22'!
test07SumaConmutativa

	^Assert that: I + II isEqualTo: II + I.! !

!classDefinition: #III category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
DenotativeObject subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:12:35'!
test08SumaAsociativa

	^Assert that: (I + II) + III isEqualTo: I + (II + III). ! !

!classDefinition: #III category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'III class' category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
III class
	instanceVariableNames: ''!

!classDefinition: #III category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'III class' category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 18:29:47'!
III class
	instanceVariableNames: ''!
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:16:22'!
test09ProductoIxI! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:16:56'!
test10ProductoIxII! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:17:18'!
test11ProductoIIxII! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:19:27'!
Producto12OrdenDeProducto! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/15/2020 18:19:38'!
test12OrdenDeProducto! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:20:21'!
test13ProductoDistributiva! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:21:38'!
test14ProductoConmutativa! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:21:57'!
test15ProductoAsociativa! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/15/2020 18:22:44'!
test16DivisionPorI! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/16/2020 18:47:26' prior: 50834718!
test01SiguienteIESII

	^Assert that: I next isEqualTo: II.
	! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/16/2020 18:47:57' prior: 50834857!
test09ProductoIxI

	^Assert that: I * I isEqualTo: I! !
!I class methodsFor: 'Operaciones' stamp: 'MSM 9/16/2020 19:00:29'!
/ unNumero

	^unNumero == self ifTrue:[I] ifFalse: [1 + (self - unNumero / unNumero)]! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/16/2020 19:01:47' prior: 50834788!
test02SiguienteIIESIII

	^Assert that: II next isEqualTo: III.! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/16/2020 19:02:14' prior: 50834796!
test03PreviousIIEsI

	^Assert that: II previous isEqualTo: II.! !

!classDefinition: #IIIII category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 19:13:24'!
DenotativeObject subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/16/2020 19:13:20' prior: 50834814!
test06SumaIIIMasIIIII

	^Assert that: III + IIIII isEqualTo: II! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/16/2020 19:13:57' prior: 50834861!
test10ProductoIxII

	^Assert that: I * II isEqualTo: II! !

!classDefinition: #IIIIIIII category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 19:14:42'!
DenotativeObject subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/16/2020 19:14:41' prior: 50834928!
test06SumaIIIMasIIIII

	^Assert that: III + IIIII isEqualTo: IIIIIIII! !
!NumerosDePeanoTest class methodsFor: 'as yet unclassified' stamp: 'MSM 9/16/2020 19:15:34' prior: 50834873!
test12OrdenDeProducto

	^Assert that: I * II isEqualTo: II * I! !

!classDefinition: #IIII category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 19:17:42'!
DenotativeObject subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/16/2020 19:17:37' prior: 50834865!
test11ProductoIIxII

	^Assert that: II * II isEqualTo: IIII.! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/16/2020 19:18:34' prior: 50834877!
test13ProductoDistributiva

	^Assert that: II * (I + I) isEqualTo: (II * I) + (II * I).! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/16/2020 19:19:19' prior: 50834881!
test14ProductoConmutativa

	^Assert that: II * III * IIII isEqualTo: III * IIII * II! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/16/2020 19:21:48' prior: 50834885!
test15ProductoAsociativa

	^Assert that: (II * II) * III isEqualTo: (II * III) * II.! !
!NumerosDePeanoTest class methodsFor: 'nil' stamp: 'MSM 9/16/2020 19:22:02' prior: 50834889!
test16DivisionPorI

	^Assert that: II / I isEqualTo: II! !

!methodRemoval: NumerosDePeanoTest class #Producto12OrdenDeProducto stamp: 'MSM 9/16/2020 19:22:34'!
Producto12OrdenDeProducto!

IIII
	asChildOf: III
	collaboratorNames: ''
	in: 'Numeros De Peano'!

!classDefinition: #IIII category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 19:23:39'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'IIII class' category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 19:23:39'!
IIII class
	instanceVariableNames: ''!

IIIII
	asChildOf: IIII
	collaboratorNames: ''
	in: 'Numeros De Peano'!

!classDefinition: #IIIII category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 19:23:56'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Numeros De Peano'!

!classDefinition: 'IIIII class' category: #'Numeros De Peano' stamp: 'MSM 9/16/2020 19:23:56'!
IIIII class
	instanceVariableNames: ''!
!NumerosDePeanoTest class methodsFor: 'Tests' stamp: 'MSM 9/16/2020 19:24:31'!
test17DivisionIIIIPorII! !
!NumerosDePeanoTest class methodsFor: 'Tests' stamp: 'MSM 9/16/2020 19:25:31'!
test18DivisionIIIPorII

! !
!NumerosDePeanoTest class methodsFor: 'Tests' stamp: 'MSM 9/16/2020 19:25:47' prior: 50835026!
test18DivisionIIIPorII

		^Assert that: II / I isEqualTo: II

! !
!NumerosDePeanoTest class methodsFor: 'Tests' stamp: 'MSM 9/16/2020 19:25:58' prior: 50835022!
test17DivisionIIIIPorII

	^Assert that: IIII / II isEqualTo: II! !
!NumerosDePeanoTest class methodsFor: 'Tests' stamp: 'MSM 9/16/2020 19:27:14' prior: 50835030!
test18DivisionIIIPorII

		^Assert failWhen: III / II.

! !
!NumerosDePeanoTest class methodsFor: 'Tests' stamp: 'MSM 9/16/2020 19:29:16' prior: 50835042!
test18DivisionIIIPorII

		^Assert signalFailure: III / II.

! !

----SNAPSHOT----(16 September 2020 20:06:06) CuisUniversity-4137.image priorSource: 16089774!

----QUIT----(16 September 2020 20:06:33) CuisUniversity-4137.image priorSource: 16108831!

----STARTUP---- (16 September 2020 20:06:41) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----End fileIn of /home/mariano/Documentos/Ing1/linux64/NumerosDePeano.st----!

Assert signalFailure: III / II.!

III/II!

IIII/II!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/16/2020 20:08:05'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/16/2020 20:08:05'!
II class
	instanceVariableNames: ''!

----SNAPSHOT----(16 September 2020 20:08:19) CuisUniversity-4137.image priorSource: 16108926!

----STARTUP---- (17 September 2020 13:57:09) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----End fileIn of /home/mariano/Documentos/Ing1/linux64/NumerosDePeano.st----!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
ERROR!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:25'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:25'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:26'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:26'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:26'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:26'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:26'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:26'!
ERROR!
!NumerosDePeanoTest class methodsFor: 'Tests' stamp: 'MSM 9/17/2020 14:00:41' prior: 50834915!
test03PreviousIIEsI

	^Assert that: II previous isEqualTo: I.! !

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:52'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:52'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:53'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:53'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:53'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 14:00:53'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:53'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:53'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 14:00:53'!
ERROR!

----SNAPSHOT----(17 September 2020 14:06:37) CuisUniversity-4137.image priorSource: 16113348!

----QUIT----(17 September 2020 14:06:42) CuisUniversity-4137.image priorSource: 16190988!

----STARTUP---- (17 September 2020 14:27:07) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


a!

a:= #(1,2,3).!

b!

b copy: a!

a copy!

a copy!

(a copy at: 1 put: 3)!

a!

((a copy) at: 1 put: 3) !

a !

b:= [(a copy) at: 1 put: 3 ]!

1 < 2!

I < II!

I < II!

----STARTUP---- (17 September 2020 16:40:00) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


!classDefinition: #I category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: #I category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'I class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I class
	instanceVariableNames: ''!

!classDefinition: 'I class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I class
	instanceVariableNames: ''!
!I class methodsFor: 'operaciones' stamp: 'FR 9/16/2020 18:36:34' prior: 50835217!
* unNumero
	^unNumero == I ifTrue: [self] ifFalse: [self + (self*(unNumero previous))]. ! !
!I class methodsFor: 'operaciones' stamp: 'FR 9/17/2020 12:57:21' prior: 50835223!
+ unNumero
	^unNumero next.! !
!I class methodsFor: 'operaciones' stamp: 'FR 9/17/2020 13:26:55' prior: 50835227!
- unNumero
	^self error:'ElResultadoNoPuedeSerRepresentadoEnLosNaturales'.! !
!I class methodsFor: 'operaciones' stamp: 'FR 9/17/2020 13:18:05' prior: 50835233!
/ unNumero
	self printString < unNumero printString ifTrue: [self error:'DivisorMuyGrandeParaDividendo'].	
	^unNumero == self ifTrue: [I] ifFalse: [ I + ((self-unNumero)/unNumero) ]. ! !
!I class methodsFor: 'operaciones' stamp: 'FR 9/14/2020 21:50:20' prior: 50835242!
next
	^self createChildNamed: self name,'I'.! !

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!
!II class methodsFor: 'operaciones' stamp: 'FR 9/16/2020 18:34:07' prior: 50835264 overrides: 50837656!
+ unNumero
	^(self previous + unNumero) next. ! !
!II class methodsFor: 'operaciones' stamp: 'FR 9/17/2020 13:26:44' prior: 50835269 overrides: 50837660!
- unNumero
	^unNumero == I ifTrue: [self previous] ifFalse: [self previous - unNumero previous ].! !
!II class methodsFor: 'operaciones' stamp: 'FR 9/14/2020 21:53:27' prior: 50835275!
previous
	^self parent.! !

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: #TestsDeVerificacion category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
DenotativeObject subclass: #TestsDeVerificacion
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: #TestsDeVerificacion category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
DenotativeObject subclass: #TestsDeVerificacion
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'TestsDeVerificacion class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
TestsDeVerificacion class
	instanceVariableNames: ''!

!classDefinition: 'TestsDeVerificacion class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
TestsDeVerificacion class
	instanceVariableNames: ''!
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'ARM 3/26/2018 12:51:26' prior: 50835321!
test01UnoMasUnSumandoEsElProximoDelSumando

	Assert that: I + II isEqualTo: II next.! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'FR 9/17/2020 13:12:17' prior: 50835327!
test02NumerosMayoresaUnoSumanBien

	Assert that: II + II isEqualTo: IIII.
! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'ARM 3/26/2018 13:12:19' prior: 50835333!
test03UnNumeroMenosUnoEsElPrevioDelNumero

	Assert that: II - I isEqualTo: II previous.! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'FR 9/17/2020 13:13:04' prior: 50835339!
test04NumerosMayoresaUnoRestanBien

	Assert that: IIII - II isEqualTo: II.
! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'FR 9/17/2020 13:24:47' prior: 50835345!
test05RestaNoSoportaNumerosNegativos

	Assert should: [ I - II ] signal: Error withDescription: 'ElResultadoNoPuedeSerRepresentadoEnLosNaturales'.
! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'ARM 3/26/2018 13:15:53' prior: 50835353!
test06UnNumeroMultiplicadoPorUnoEsIgualAlNumero

	Assert that: II * I isEqualTo: II.! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'FR 9/17/2020 13:12:53' prior: 50835359!
test07NumerosMayoresaUnoMultiplicanBien

	Assert that: II * II isEqualTo: IIII.! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'ARM 3/26/2018 13:16:46' prior: 50835365!
test08UnoMultiplicadoUnoEsIgualAUno

	Assert that: I * I isEqualTo: I.! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'FR 9/17/2020 13:10:50' prior: 50835371!
test09NumerosMayoresaUnoDividenBien

	Assert that: IIII / II isEqualTo: II.
! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'ARM 3/26/2018 13:17:28' prior: 50835377!
test10UnNumeroDivididoUnoEsIgualAlNumero

	Assert that: II / I isEqualTo: II.! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'ARM 3/26/2018 13:17:38' prior: 50835383!
test11UnoDivididoUnoEsIgualAUno

	Assert that: I / I isEqualTo: I.! !
!TestsDeVerificacion class methodsFor: 'as yet unclassified' stamp: 'FR 9/17/2020 13:24:23' prior: 50835389!
test12DivisionNoSoportaDividirPorUnNumeroMayor

	Assert should: [ III /  IIII ] signal: Error withDescription: 'DivisorMuyGrandeParaDividendo'.
	
	Assert should: [ I /  II] signal: Error withDescription: 'DivisorMuyGrandeParaDividendo'.
! !

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:34'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!
!NumerosDePeanoTest class methodsFor: 'Tests' stamp: 'MSM 9/17/2020 14:00:41' prior: 50836507!
test03PreviousIIEsI

	^Assert that: II previous isEqualTo: I.! !

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:35'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
II class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:50:36'!
II class
	instanceVariableNames: ''!

!methodRemoval: NumerosDePeanoTest class #test01NextDeUnoEsDos stamp: 'MSM 9/17/2020 16:51:33'!
next
	^self createChildNamed: self name,'I'.!

!methodRemoval: NumerosDePeanoTest class #test02NextDeDosEsTres stamp: 'MSM 9/17/2020 16:51:40'!
eano'!

!methodRemoval: NumerosDePeanoTest class #test03SumaDeUnoYUnoEsElSiguienteDeUno stamp: 'MSM 9/17/2020 16:51:48'!
lDictionaries: ''
	category: 'NumerosDePeano'!

!methodRemoval: NumerosDePeanoTest class #test04SumaDeUnoMasUnNumero stamp: 'MSM 9/17/2020 16:51:54'!
DePeano stamp: 'MSM 9/17/2020 13:59:29'!

!methodRemoval: NumerosDePeanoTest class #test05SumaDefinirTitulo stamp: 'MSM 9/17/2020 16:52:00'!
Numero) next. !

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:07'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:07'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:07'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
IIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:07'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:07'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:07'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #IIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIIIIIIIIIIIIIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIIIIIIIIIIIIIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIIIIIIIIIIIIIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!classDefinition: #IIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIII class
	instanceVariableNames: ''!

!classDefinition: #IIIIIIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIIIIIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIIIIIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIII class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'IIII class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
IIII class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
ERROR!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III class
	instanceVariableNames: ''!

!classDefinition: #II category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'II class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II class
	instanceVariableNames: ''!

!classDefinition: #III category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classDefinition: 'III class' category: #NumerosDePeano stamp: 'MSM 9/17/2020 16:52:08'!
III class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'MSM 9/17/2020 16:52:08'!
ERROR!

----SNAPSHOT----(17 September 2020 16:52:48) CuisUniversity-4137.image priorSource: 16191083!

!classRemoval: #TestsDeVerificacion stamp: 'MSM 9/17/2020 16:53:28'!
DenotativeObject subclass: #TestsDeVerificacion
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #NumerosDePeanoTest stamp: 'MSM 9/17/2020 16:53:28'!
DenotativeObject subclass: #NumerosDePeanoTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:29'!
IIIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:29'!
IIIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:30'!
IIIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:30'!
IIIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:30'!
IIIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:30'!
IIIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:31'!
IIIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:31'!
IIIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:31'!
IIIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:32'!
IIIIIIIIIIIIII subclass: #IIIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:32'!
IIIIIIIIIIIII subclass: #IIIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:32'!
IIIIIIIIIIII subclass: #IIIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:33'!
IIIIIIIIIII subclass: #IIIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIIII stamp: 'MSM 9/17/2020 16:53:33'!
IIIIIIIIII subclass: #IIIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIIII stamp: 'MSM 9/17/2020 16:53:33'!
IIIIIIIII subclass: #IIIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIIII stamp: 'MSM 9/17/2020 16:53:34'!
IIIIIIII subclass: #IIIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIIII stamp: 'MSM 9/17/2020 16:53:34'!
IIIIIII subclass: #IIIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIIII stamp: 'MSM 9/17/2020 16:53:34'!
IIIIII subclass: #IIIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIIII stamp: 'MSM 9/17/2020 16:53:34'!
IIIII subclass: #IIIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIIII stamp: 'MSM 9/17/2020 16:53:35'!
IIII subclass: #IIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #IIII stamp: 'MSM 9/17/2020 16:53:35'!
III subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #III stamp: 'MSM 9/17/2020 16:53:35'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #II stamp: 'MSM 9/17/2020 16:53:36'!
I subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

!classRemoval: #I stamp: 'MSM 9/17/2020 16:53:36'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NumerosDePeano'!

----End fileIn of /home/mariano/Documentos/Ing1/linux64/NumerosDePeano.st----!

----QUIT----(17 September 2020 18:28:21) CuisUniversity-4137.image priorSource: 16301962!

----STARTUP---- (17 September 2020 18:28:32) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----QUIT----(17 September 2020 18:45:16) CuisUniversity-4137.image priorSource: 16325056!

----STARTUP---- (8 October 2020 10:10:07) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----End fileIn of /home/mariano/Documentos/Ing1/linux64/ISW1-2020-1C-Parcial-Solucion.st----!

----STARTUP---- (8 October 2020 10:43:14) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----End fileIn of /home/mariano/Documentos/Ing1/linux64/ISW1-2020-1C-Parcial-Solucion.st----!

----QUIT----(8 October 2020 10:45:53) CuisUniversity-4137.image priorSource: 16325262!

----STARTUP---- (11 October 2020 14:21:58) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----STARTUP---- (14 October 2020 22:52:00) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----STARTUP---- (15 October 2020 20:06:33) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----End fileIn of /home/mariano/Documentos/Ing1/linux64/ISW1-2020-2C-Parcial-Enunciado.st----!

DoorState subclass: #Closed
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classDefinition: #Closed category: #'ISW1-2020-2C-Parcial-Enunciado' stamp: 'MSM 10/15/2020 20:08:28'!
DoorState subclass: #Closed
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

DoorState subclass: #KeyClosed
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classDefinition: #KeyClosed category: #'ISW1-2020-2C-Parcial-Enunciado' stamp: 'MSM 10/15/2020 20:08:48'!
DoorState subclass: #KeyClosed
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

DoorState subclass: #Opened
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classDefinition: #Opened category: #'ISW1-2020-2C-Parcial-Enunciado' stamp: 'MSM 10/15/2020 20:09:07'!
DoorState subclass: #Opened
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!
!Closed methodsFor: 'nil' stamp: 'MSM 10/15/2020 20:09:28' overrides: 50844942!
close

	self error: Door alreadyClosedErrorDescription.! !
!Closed methodsFor: 'nil' stamp: 'MSM 10/15/2020 20:09:37' overrides: 50844954!
isOpen
	^ false.! !
!Closed methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:09:48' overrides: 50844946!
open
	^ door openClosed.! !
!Closed methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:09:57' overrides: 50844950!
openUsing: arg1

	self error: Door noNeedForAKeyErrorDescription.! !
!Closed methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:10:06'!
toBeUsedBy: arg1

	door toBeOpenedBy: arg1.! !
!KeyClosed methodsFor: 'nil' stamp: 'MSM 10/15/2020 20:10:22' overrides: 50844942!
close

	self error: Door alreadyClosedErrorDescription.! !
!KeyClosed methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:10:32' overrides: 50844954!
isOpen
	^ false.! !
!KeyClosed methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:10:41' overrides: 50844946!
open
	self error: Door closedWithKeyErrorDescription.! !
!KeyClosed methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:10:48' overrides: 50844950!
openUsing: arg1
	(door isDoorKey: arg1) ifTrue: [ ^ door openClosed ].
	self error: Door notCorrectKeyErrorDescription.! !
!KeyClosed methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:10:58'!
toBeUsedBy: arg1
	^ door toBeOpenedBy: arg1.! !
!Opened methodsFor: 'nil' stamp: 'MSM 10/15/2020 20:11:11' overrides: 50844942!
close
	^ door closeOpen.! !
!Opened methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:11:20' overrides: 50844954!
isOpen
	^ true.! !
!Opened methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:11:26' overrides: 50844946!
open
	self error: Door alreadyOpenedErrorDescription.! !
!Opened methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:11:34' overrides: 50844950!
openUsing: arg1
	self error: Door alreadyOpenedErrorDescription.! !
!Opened methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:11:42'!
toBeUsedBy: arg1
	^ door toBeClosedBy: arg1.! !
!Door class methodsFor: 'instance creation' stamp: 'MSM 10/15/2020 20:12:26' prior: 50845143!
closed
	| temp1 |
	temp1 _ Door new.
	temp1 initializeClosed.
	^ temp1.! !
!Door class methodsFor: 'instance creation' stamp: 'MSM 10/15/2020 20:12:38' prior: 50845149!
closedWith: arg1
	| temp2 |
	temp2 _ Door new.
	temp2 initializeKeyClosedUsing: arg1.
	^ temp2.! !
!Door class methodsFor: 'instance creation' stamp: 'MSM 10/15/2020 20:12:51' prior: 50845155!
opened
	| temp1 |
	temp1 _ Door new.
	temp1 initializeOpened.
	^ temp1.! !
!Door methodsFor: 'initialization' stamp: 'MSM 10/15/2020 20:13:07'!
initializeClosed
	state :=  Closed for: self.
! !
!Door methodsFor: 'initialization' stamp: 'MSM 10/15/2020 20:13:29'!
initializeKeyClosedUsing: aKey.

	state := KeyClosed for: self.
	key _ aKey..
! !
!Door methodsFor: 'initialization' stamp: 'MSM 10/15/2020 20:13:37' prior: 50845511!
initializeKeyClosedUsing: aKey.

	state := KeyClosed for: self.
	key _ aKey.
! !
!Door methodsFor: 'initialization' stamp: 'MSM 10/15/2020 20:13:42'!
initializeOpened
	state := Opened for: self.
! !
!Door methodsFor: 'nil' stamp: 'MSM 10/15/2020 20:13:57'!
isDoorKey: arg1
	^ key == arg1.! !
!Door methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:14:05' prior: 50845072!
isOpen

	^state isOpen.! !
!Door methodsFor: 'as yet unclassified' stamp: 'MSM 10/15/2020 20:14:14' prior: 50845530!
isOpen

	^state isOpen.! !
!Door methodsFor: 'playable character reactions' stamp: 'MSM 10/15/2020 20:14:30'!
openClosed
	^ state _ Opened for: self.! !
!Door methodsFor: 'playable character reactions' stamp: 'MSM 10/15/2020 20:14:44' prior: 50845086 overrides: 50845039!
toBeClosedBy: arg1

	state := state close.! !
!Door methodsFor: 'playable character reactions' stamp: 'MSM 10/15/2020 20:14:52' prior: 50845098 overrides: 50845044!
toBeOpenedBy: arg1
		
	state open.! !
!Door methodsFor: 'playable character reactions' stamp: 'MSM 10/15/2020 20:15:06' prior: 50845110 overrides: 50845049!
toBeOpenedBy: arg1 using: arg2
	
	state openUsing: arg2.! !
!Door methodsFor: 'playable character reactions' stamp: 'MSM 10/15/2020 20:15:16' prior: 50845124 overrides: 50845055!
toBeUsedBy: arg1

	state toBeUsedBy: arg1.! !

----STARTUP---- (15 October 2020 20:48:27) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----End fileIn of /home/mariano/Documentos/Ing1/linux64/ISW1-2020-2C-Parcial-Enunciado.st----!

!classRemoval: #PointsPortableObject stamp: 'MSM 10/15/2020 20:49:53'!
PortableObject subclass: #PointsPortableObject
	instanceVariableNames: 'points'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #NoPointsPortableObject stamp: 'MSM 10/15/2020 20:49:53'!
PortableObject subclass: #NoPointsPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PortableObject stamp: 'MSM 10/15/2020 20:49:54'!
StageObject subclass: #PortableObject
	instanceVariableNames: 'name weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Door stamp: 'MSM 10/15/2020 20:49:54'!
StageObject subclass: #Door
	instanceVariableNames: 'state key'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #StageObject stamp: 'MSM 10/15/2020 20:49:55'!
Object subclass: #StageObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PlayableCharacter stamp: 'MSM 10/15/2020 20:49:55'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'name backpack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorState stamp: 'MSM 10/15/2020 20:49:55'!
Object subclass: #DoorState
	instanceVariableNames: 'door'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Backpack stamp: 'MSM 10/15/2020 20:49:56'!
Object subclass: #Backpack
	instanceVariableNames: 'weightCapacity gamePointsCapacity container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorTest stamp: 'MSM 10/15/2020 20:49:56'!
TestCase subclass: #DoorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #BackpackTest stamp: 'MSM 10/15/2020 20:49:57'!
TestCase subclass: #BackpackTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

----End fileIn of /home/mariano/Documentos/Ing1/linux64/ISW1-2020-2C-Parcial-Solucion.st----!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'MSM 10/15/2020 20:50:38'!
PASSED!

!testRun: #DoorTest #test01ADoorOpenedCanNotBeOpenedAgain stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test02ADoorOpenedCanBeClosed stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test03ADoorClosedCanNotBeClosedAgain stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test04ADoorClosedCanBeOpened stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test05ADoorClosedCanNotBeOpenedWithAKey stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test06ADoorKeyClosedCanNotBeClosedAgain stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test07ADoorKeyClosedCanNotBeOpenedWithoutAKey stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test08ADoorKeyClosedCanNotBeOpenWithAnyKey stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test09ADoorKeyClosedCanBeOpenWithTheCorrectKey stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test10WhenUsingADoorClosedGetsOpened stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test11WhenUsingADoorOpenedGetsClosed stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

!testRun: #DoorTest #test12WhenUsingADoorKeyClosedCanNotBeOpened stamp: 'MSM 10/15/2020 20:50:44'!
PASSED!

----QUIT----(15 October 2020 20:50:49) CuisUniversity-4137.image priorSource: 16406574!

----STARTUP---- (15 October 2020 20:56:57) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


!testRun: #DoorTest #test01ADoorOpenedCanNotBeOpenedAgain stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test02ADoorOpenedCanBeClosed stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test03ADoorClosedCanNotBeClosedAgain stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test04ADoorClosedCanBeOpened stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test05ADoorClosedCanNotBeOpenedWithAKey stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test06ADoorKeyClosedCanNotBeClosedAgain stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test07ADoorKeyClosedCanNotBeOpenedWithoutAKey stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test08ADoorKeyClosedCanNotBeOpenWithAnyKey stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test09ADoorKeyClosedCanBeOpenWithTheCorrectKey stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test10WhenUsingADoorClosedGetsOpened stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test11WhenUsingADoorOpenedGetsClosed stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!testRun: #DoorTest #test12WhenUsingADoorKeyClosedCanNotBeOpened stamp: 'MSM 10/15/2020 20:57:02'!
PASSED!

!classRemoval: #PointsPortableObject stamp: 'MSM 10/15/2020 20:57:37'!
PortableObject subclass: #PointsPortableObject
	instanceVariableNames: 'points'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #NoPointsPortableObject stamp: 'MSM 10/15/2020 20:57:37'!
PortableObject subclass: #NoPointsPortableObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PortableObject stamp: 'MSM 10/15/2020 20:57:38'!
StageObject subclass: #PortableObject
	instanceVariableNames: 'name weight'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Door stamp: 'MSM 10/15/2020 20:57:38'!
StageObject subclass: #Door
	instanceVariableNames: 'state key'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #StageObject stamp: 'MSM 10/15/2020 20:57:38'!
Object subclass: #StageObject
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #PlayableCharacter stamp: 'MSM 10/15/2020 20:57:39'!
Object subclass: #PlayableCharacter
	instanceVariableNames: 'name backpack'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Opened stamp: 'MSM 10/15/2020 20:57:39'!
DoorState subclass: #Opened
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #KeyClosed stamp: 'MSM 10/15/2020 20:57:39'!
DoorState subclass: #KeyClosed
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Closed stamp: 'MSM 10/15/2020 20:57:40'!
DoorState subclass: #Closed
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorState stamp: 'MSM 10/15/2020 20:57:40'!
Object subclass: #DoorState
	instanceVariableNames: 'door'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #Backpack stamp: 'MSM 10/15/2020 20:57:40'!
Object subclass: #Backpack
	instanceVariableNames: 'weightCapacity gamePointsCapacity container'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #DoorTest stamp: 'MSM 10/15/2020 20:57:41'!
TestCase subclass: #DoorTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

!classRemoval: #BackpackTest stamp: 'MSM 10/15/2020 20:57:41'!
TestCase subclass: #BackpackTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'ISW1-2020-2C-Parcial-Enunciado'!

----End fileIn of /home/mariano/Documentos/Ing1/linux64/ISW1-2020-2C-Parcial-Enunciado.st----!

!testRun: #BackpackTest #test01CanNotCreateBackpackWithZeroMaxWeight stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test02CanNotCreateBackpackWithNegativeMaxWeight stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test03CanNotCreateBackpackWithZeroMaxPoints stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test04CanNotCreateBackpackWithNegativeMaxPoints stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test05CanNotCreateBackpackWithNoIntegerMaxWeight stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test06CanNotCreateBackpackWithNoIntegerMaxPoints stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test07ShouldNotAddNoPointsPortableObjectIfWeightExceeded stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test08ShouldNotAddPointsPortableObjectIfWeightExceeded stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test09ShouldAddPortableObjectsIfWeightUnderMaxWeightCapacity stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test10ShouldAddPortableObjectsIfWeightEqualsMaxWeightCapacity stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test11ShouldAddZeroWeightWhenEmpty stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test12ShouldAddWeightWhenAddingPortableObjects stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test13ShouldAddZeroPointsWhenEmpty stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test14ShouldAddPointsWhenAddingPointsPortableObjects stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #BackpackTest #test15ShouldNotAddPointsWhenAddingNoPointsPortableObjects stamp: 'MSM 10/15/2020 20:58:14'!
PASSED!

!testRun: #DoorTest #test01ADoorOpenedCanNotBeOpenedAgain stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test02ADoorOpenedCanBeClosed stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test03ADoorClosedCanNotBeClosedAgain stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test04ADoorClosedCanBeOpened stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test05ADoorClosedCanNotBeOpenedWithAKey stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test06ADoorKeyClosedCanNotBeClosedAgain stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test07ADoorKeyClosedCanNotBeOpenedWithoutAKey stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test08ADoorKeyClosedCanNotBeOpenWithAnyKey stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test09ADoorKeyClosedCanBeOpenWithTheCorrectKey stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test10WhenUsingADoorClosedGetsOpened stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test11WhenUsingADoorOpenedGetsClosed stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

!testRun: #DoorTest #test12WhenUsingADoorKeyClosedCanNotBeOpened stamp: 'MSM 10/15/2020 20:58:37'!
PASSED!

----QUIT----(15 October 2020 20:59:23) CuisUniversity-4137.image priorSource: 16480691!

----STARTUP---- (18 October 2020 20:33:49) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----QUIT----(19 October 2020 19:08:04) CuisUniversity-4137.image priorSource: 16524116!

----STARTUP---- (25 October 2020 00:11:34) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----End fileIn of /home/mariano/Documentos/Ing1/linux64/MarsRover - Exercise.st----!

Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandHandler category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:16:43'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommandHandler subclass: #MarsRoverMoveFoward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverMoveFoward category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:17:11'!
MarsRoverCommandHandler subclass: #MarsRoverMoveFoward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommandHandler subclass: #MarsRoverMoveBackwards
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverMoveBackwards category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:17:34'!
MarsRoverCommandHandler subclass: #MarsRoverMoveBackwards
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommandHandler subclass: #RotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #RotateLeft category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:18:19'!
MarsRoverCommandHandler subclass: #RotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommandHandler subclass: #RotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #RotateRight category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:18:29'!
MarsRoverCommandHandler subclass: #RotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 00:22:26'!
test11isAtPositionFacingCoordinatesWorksProperly

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.
	
	
	self assert: (marsRover isAt: 1@1 facing: south)! !

Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: 'MarsRover'
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: 'Rover'
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandHandler category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:24:55'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: 'Rover'
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'RoverCommands'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverOrientation category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:26:44'!
Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'RoverCommands'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverOrientation methodsFor: 'initialization' stamp: 'MSM 10/25/2020 00:27:15' prior: 50848288!
initializeFor: aRoverCommand

	RoverCommands _ aRoverCommand ! !

Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'MarsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverOrientation category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:37:52'!
Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'MarsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'arsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverOrientation category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:38:09'!
Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'arsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverOrientation category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:38:10'!
Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 00:40:53' prior: 50848171!
process: aCommand

	
"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
"
	self error: self class invalidCommandErrorDescription.
	^aCommand execute.! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 00:42:22' prior: 50848694!
process: aCommand

	
"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
"
	self error: self class invalidCommandErrorDescription.
	^aCommand executeWith: orientation.! !
!MarsRoverMoveBackwards methodsFor: 'nil' stamp: 'MSM 10/25/2020 00:42:44'!
executeWith: orientation

	^orientation moveBackwards.! !
!MarsRoverCommandHandler methodsFor: 'nil' stamp: 'MSM 10/25/2020 00:45:24'!
executeWith: orientation! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 00:45:36' prior: 50848726!
executeWith: orientation

	self subclassResponsibility.! !
!MarsRoverOrientation methodsFor: 'initialization' stamp: 'MSM 10/25/2020 00:46:05' prior: 50848649!
initializeFor: aMarsRover

	marsRover _ aMarsRover.! !

Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandHandler category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:47:09'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverMoveFoward methodsFor: 'nil' stamp: 'MSM 10/25/2020 00:47:24' overrides: 50848731!
executeWith: orientation! !
!RotateLeft methodsFor: 'nil' stamp: 'MSM 10/25/2020 00:47:38' overrides: 50848731!
executeWith: orientation! !
!RotateRight methodsFor: 'nil' stamp: 'MSM 10/25/2020 00:47:52' overrides: 50848731!
executeWith: orientation! !
!MarsRoverMoveFoward methodsFor: 'execution' stamp: 'MSM 10/25/2020 00:48:18' prior: 50848754 overrides: 50848731!
executeWith: orientation

	^orientation moveBackwards.! !
!RotateLeft methodsFor: 'execution' stamp: 'MSM 10/25/2020 00:48:34' prior: 50848758 overrides: 50848731!
executeWith: orientation

	^orientation rotateLeft.! !
!RotateRight methodsFor: 'excution' stamp: 'MSM 10/25/2020 00:48:46' prior: 50848762 overrides: 50848731!
executeWith: orientation

	^orientation rotateRight.! !

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation commandList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRover category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 00:49:27'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation commandList'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 00:51:02'!
loadComands: aCommand

	commandList addLast: aCommand.! !
!MarsRover methodsFor: 'initialization' stamp: 'MSM 10/25/2020 00:51:37' prior: 50848159!
initializeAt: aPosition facing: aCardinalPoint 
	
	position _ aPosition.
	commandList _ OrderedCollection new.
	orientation _ MarsRoverOrientation facing: aCardinalPoint for: self! !

Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandHandler category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 01:19:20'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandHandler category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 01:19:55'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 01:21:07' prior: 50848707!
process: aCommand

	
"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
"
	
	^aCommand executeWith: orientation.! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 01:21:51'!
move
	
	commandList do: [ :aCommand | self process: aCommand]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 01:22:30' prior: 50848849!
move
	
	commandList do: [ :aCommand | self process: aCommand]

	
	! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 01:22:47' prior: 50848854!
move
	
	commandList do: [ :aCommand | self process: aCommand]

	
	! !
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 01:23:45' prior: 50848061!
test01EmptyCommandListDoesNothing

	| marsRover |
	
	marsRover _ MarsRover at: 1@1 facing: south.

	marsRover move.
	
	self assert: (marsRover isAt: 1@1 facing: south)! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 01:23:48'!
PASSED!
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 01:24:19' prior: 50848837!
process: aCommand

	
"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
"

	^aCommand executeWith: orientation.! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 01:28:41'!
loadCommands: aCommand

	commandList addLast: aCommand.! !

!methodRemoval: MarsRover #loadComands: stamp: 'MSM 10/25/2020 01:28:41'!
loadComands: aCommand

	commandList addLast: aCommand.!
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 01:30:11' prior: 50848888!
loadCommands: aCommand

	(aCommand isKindOf: MarsRoverCommandHandler) ifTrue:[commandList addLast: aCommand]
	ifFalse:[self error: self class] .
	! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 01:30:43' prior: 50848897!
loadCommands: aCommand

	(aCommand isKindOf: MarsRoverCommandHandler) ifTrue:[commandList addLast: aCommand]
	ifFalse:[self error: self class invalidCommandErrorDescription] .
	! !

String variableByteSubclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classRemoval: #MarsRoverMoveBackwards stamp: 'MSM 10/25/2020 01:36:16'!
MarsRoverCommandHandler subclass: #MarsRoverMoveBackwards
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRenamed: #MarsRoverCommandHandler as: #MarsRoverCommand stamp: 'MSM 10/25/2020 01:36:32'!
Smalltalk renameClassNamed: #MarsRoverCommandHandler as: #MarsRoverCommand!
!MarsRover methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 01:36:32' prior: 50848905!
loadCommands: aCommand

	(aCommand isKindOf: MarsRoverCommand) ifTrue:[commandList addLast: aCommand]
	ifFalse:[self error: self class invalidCommandErrorDescription] .
	! !

String variableByteSubclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classDefinition: #MarsRoverCommandHandler category: #'Kernel-Text' stamp: 'MSM 10/25/2020 01:37:12'!
String variableByteSubclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classRemoval: #MarsRoverMoveFoward stamp: 'MSM 10/25/2020 01:38:34'!
MarsRoverCommand subclass: #MarsRoverMoveFoward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommandHandler variableByteSubclass: #MarsRoverMoveFoward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classDefinition: #MarsRoverMoveFoward category: #'Kernel-Text' stamp: 'MSM 10/25/2020 01:39:04'!
MarsRoverCommandHandler variableByteSubclass: #MarsRoverMoveFoward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

MarsRoverCommandHandler variableByteSubclass: #MarsRoverMoveBackwars
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classDefinition: #MarsRoverMoveBackwars category: #'Kernel-Text' stamp: 'MSM 10/25/2020 01:39:18'!
MarsRoverCommandHandler variableByteSubclass: #MarsRoverMoveBackwars
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classRemoval: #RotateLeft stamp: 'MSM 10/25/2020 01:39:39'!
MarsRoverCommand subclass: #RotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #RotateRight stamp: 'MSM 10/25/2020 01:39:43'!
MarsRoverCommand subclass: #RotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommandHandler variableByteSubclass: #RotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classDefinition: #RotateLeft category: #'Kernel-Text' stamp: 'MSM 10/25/2020 01:40:14'!
MarsRoverCommandHandler variableByteSubclass: #RotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

MarsRoverCommandHandler variableByteSubclass: #RotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classDefinition: #RotateRight category: #'Kernel-Text' stamp: 'MSM 10/25/2020 01:40:22'!
MarsRoverCommandHandler variableByteSubclass: #RotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!
!MarsRoverCommandHandler methodsFor: 'nil' stamp: 'MSM 10/25/2020 01:45:38'!
asMessage

	! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 01:46:00' prior: 50849026!
asMessage

	^self asMessageWithAll: #().

	! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 01:47:01' prior: 50849030!
asMessage

	^self asMessageWithAll: #().

	! !
!MarsRoverCommandHandler methodsFor: 'nil' stamp: 'MSM 10/25/2020 01:50:11'!
asMessageWithAll: aCollaborators

	^Message selector: self arguments: aCollaborators ! !

#().!

Symbol rehash!

!classRemoval: #MarsRoverMoveFoward stamp: 'MSM 10/25/2020 02:04:03'!
MarsRoverCommandHandler variableByteSubclass: #MarsRoverMoveFoward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classRemoval: #MarsRoverMoveBackwars stamp: 'MSM 10/25/2020 02:04:03'!
MarsRoverCommandHandler variableByteSubclass: #MarsRoverMoveBackwars
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classRemoval: #RotateLeft stamp: 'MSM 10/25/2020 02:04:04'!
MarsRoverCommandHandler variableByteSubclass: #RotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classRemoval: #RotateRight stamp: 'MSM 10/25/2020 02:04:04'!
MarsRoverCommandHandler variableByteSubclass: #RotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

!classRemoval: #MarsRoverCommandHandler stamp: 'MSM 10/25/2020 02:04:04'!
String variableByteSubclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Kernel-Text'!

Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandHandler category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 02:04:34'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

----STARTUP---- (25 October 2020 02:06:47) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----End fileIn of /home/mariano/Documentos/Ing1/linux64/MarsRover - Exercise.st----!
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 02:12:42'!
test11NegativeCoordinates

	| marsRover |
	
	marsRover _ MarsRover at: -1@1 facing: south.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: -1@1 facing: south)! !

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:12:49'!
PASSED!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:13:44'!
PASSED!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:14:20'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 02:14:31' prior: 50848542!
test11NegativeCoordinates

	| marsRover |
	
	marsRover _ MarsRover at: -1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: -1@1 facing: east)! !
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 02:14:35' prior: 50848559!
test11NegativeCoordinates

	| marsRover |
	
	marsRover _ MarsRover at: -1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: -2@1 facing: east)! !

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:14:39'!
FAILURE!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:14:39'!
FAILURE!
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 02:14:56' prior: 50848567!
test11NegativeCoordinates

	| marsRover |
	
	marsRover _ MarsRover at: -1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: east)! !

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:15:01'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 02:15:10' prior: 50848582!
test11NegativeCoordinates

	| marsRover |
	
	marsRover _ MarsRover at: -1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: -1@1 facing: east)! !

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:15:13'!
FAILURE!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:15:13'!
FAILURE!
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 02:15:19' prior: 50848593!
test11NegativeCoordinates

	| marsRover |
	
	marsRover _ MarsRover at: -1@1 facing: east.
	
	marsRover move: 'f'.
	
	self assert: (marsRover isAt: 0@1 facing: east)! !

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:15:22'!
PASSED!
!MarsRoverTests methodsFor: 'tests' stamp: 'MSM 10/25/2020 02:16:01' prior: 50848608!
test11NegativeCoordinates

	| marsRover |
	
	marsRover _ MarsRover at: -1@1 facing: south.
	
	marsRover move: ''.
	
	self assert: (marsRover isAt: -1@1 facing: south)! !

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 02:16:06'!
PASSED!

SymbolTable!

#HOLA!

----QUIT----(25 October 2020 02:39:45) CuisUniversity-4137.image priorSource: 16524318!

----STARTUP---- (25 October 2020 02:51:21) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: 'commandsDictionary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandHandler category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 02:52:38'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: 'commandsDictionary'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

Object subclass: #MarsRover
	instanceVariableNames: 'position orientation commandsHandler'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRover category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 02:53:25'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation commandsHandler'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverCommandHandler methodsFor: 'nil' stamp: 'MSM 10/25/2020 02:54:12' overrides: 16896425!
initialize

! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 02:54:40' prior: 50848666 overrides: 16896425!
initialize

	commandsDictionary _ Dictionary new.

! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 02:59:20' prior: 50848171!
process: aCommandList

	^commandsHandler execute: aCommandList.
	"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription 
	"! !
!MarsRoverCommandHandler methodsFor: 'nil' stamp: 'MSM 10/25/2020 02:59:58'!
execute: aCommand! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 03:00:09' prior: 50848676!
process: aCommand

	^commandsHandler execute: aCommand.
	"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription 
	"! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:01:56' prior: 50848690!
execute: aCommand

	commandsDictionary at: aCommand ifAbsent: [self error: MarsRover class].! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:04:03' prior: 50848709!
execute: aCommand
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover class  invalidCommandErrorDescription ].
	parsedCommand execute.! !

Object subclass: #MarsRoverCommands
	instanceVariableNames: 'position orientation commandsHandler'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommands category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 03:04:23'!
Object subclass: #MarsRoverCommands
	instanceVariableNames: 'position orientation commandsHandler'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:05:12' prior: 50848671 overrides: 16896425!
initialize

	commandsDictionary _ Dictionary new.

! !

Object subclass: #MarsRoverCommands
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommands category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 03:05:33'!
Object subclass: #MarsRoverCommands
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 03:06:03' prior: 50848694!
process: aCommand

	^commandsHandler execute: aCommand with: orientation.
	"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription 
	"! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:06:55'!
execute: aCommand with: orientation
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover class  invalidCommandErrorDescription ].
	parsedCommand execute.! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:07:04' prior: 50848773!
execute: aCommand with: orientation
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover class  invalidCommandErrorDescription ].
	parsedCommand execute: orientation.! !

!methodRemoval: MarsRoverCommandHandler #execute: stamp: 'MSM 10/25/2020 03:07:10'!
execute: aCommand
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover class  invalidCommandErrorDescription ].
	parsedCommand execute.!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:07:24'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:07:44'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:07:44'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:00'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:06'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:13'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:18'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:20'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:21'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:22'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:22'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:08:25'!
ERROR!
!MarsRover methodsFor: 'initialization' stamp: 'MSM 10/25/2020 03:10:13' prior: 50848159!
initializeAt: aPosition facing: aCardinalPoint 
	
	position _ aPosition.
	orientation _ MarsRoverOrientation facing: aCardinalPoint for: self.
	commandsHandler _ MarsRoverCommandHandler new.! !

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:10:24'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:10:24'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:11:10'!
ERROR!
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:12:42' prior: 50848783!
execute: aCommand with: orientation
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover class  invalidCommandErrorDescription ].
	parsedCommand execute: orientation.! !
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:13:15' prior: 50848862!
execute: aCommand with: orientation
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover invalidCommandErrorDescription ].
	parsedCommand execute: orientation.! !

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:13:23'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:13:23'!
ERROR!
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:15:15' prior: 50848741 overrides: 16896425!
initialize

	commandsDictionary _ Dictionary new.
	commandsDictionary at: $f put: ''

! !

MarsRoverCommands subclass: #MarsRoverCommandsMoveFoward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandsMoveFoward category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 03:15:46'!
MarsRoverCommands subclass: #MarsRoverCommandsMoveFoward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommands subclass: #MarsRoverCommandsMoveBackwards
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandsMoveBackwards category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 03:15:57'!
MarsRoverCommands subclass: #MarsRoverCommandsMoveBackwards
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommands subclass: #MarsRoverCommandsRotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandsRotateLeft category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 03:16:10'!
MarsRoverCommands subclass: #MarsRoverCommandsRotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

MarsRoverCommands subclass: #MarsRoverCommandsRotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandsRotateRight category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 03:16:16'!
MarsRoverCommands subclass: #MarsRoverCommandsRotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:17:23' prior: 50848891 overrides: 16896425!
initialize

	commandsDictionary _ Dictionary new.
	commandsDictionary at: $f put: MarsRoverCommandsMoveFoward new.
	commandsDictionary at: $b put: MarsRoverCommandsMoveBackwards new.
	commandsDictionary at: $l put: MarsRoverCommandsRotateLeft new.
	commandsDictionary at: $r put: MarsRoverCommandsRotateRight new.

! !

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:18:56'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:18:56'!
ERROR!

!classRenamed: #MarsRoverCommandsMoveFoward as: #MarsRoverCommandsMoveForward stamp: 'MSM 10/25/2020 03:20:01'!
Smalltalk renameClassNamed: #MarsRoverCommandsMoveFoward as: #MarsRoverCommandsMoveForward!
!MarsRoverCommandHandler methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:20:01' prior: 50848955 overrides: 16896425!
initialize

	commandsDictionary _ Dictionary new.
	commandsDictionary at: $f put: MarsRoverCommandsMoveForward new.
	commandsDictionary at: $b put: MarsRoverCommandsMoveBackwards new.
	commandsDictionary at: $l put: MarsRoverCommandsRotateLeft new.
	commandsDictionary at: $r put: MarsRoverCommandsRotateRight new.

! !
!MarsRoverCommandsMoveForward methodsFor: 'nil' stamp: 'MSM 10/25/2020 03:20:34'!
execute: orientation

	^orientation moveForward.! !
!MarsRoverCommandsMoveBackwards methodsFor: 'nil' stamp: 'MSM 10/25/2020 03:20:51'!
execute: orientation

	^orientation moveBackwards.! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 03:21:35' prior: 50848758!
process: aCommand

	^commandsHandler execute: aCommand with: orientation.
	"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription 
	"! !
!MarsRoverCommandsRotateLeft methodsFor: 'nil' stamp: 'MSM 10/25/2020 03:21:56'!
execute: orientation

	^orientation rotateLeft.! !
!MarsRoverCommandsRotateRight methodsFor: 'nil' stamp: 'MSM 10/25/2020 03:22:17'!
execute: orientation

	^orientation rotateRight.! !

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:22:30'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 03:22:42'!
PASSED!

Object subclass: #NameOfSubclass
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #NameOfSubclass category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 03:31:38'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #NameOfSubclass stamp: 'MSM 10/25/2020 03:31:47'!
Object subclass: #NameOfSubclass
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: 'commandsDictionary marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classDefinition: #MarsRoverCommandHandler category: #'MarsRover - Exercise' stamp: 'MSM 10/25/2020 03:32:01'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: 'commandsDictionary marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!
!MarsRoverCommandHandler class methodsFor: 'no messages' stamp: 'MSM 10/25/2020 03:33:12'!
for: aMarsRover

	self initializeWith: aMarsRover.! !
!MarsRoverCommandHandler methodsFor: 'initialization' stamp: 'MSM 10/25/2020 03:33:48'!
initializeWith

	commandsDictionary _ Dictionary new.
	commandsDictionary at: $f put: MarsRoverCommandsMoveForward new.
	commandsDictionary at: $b put: MarsRoverCommandsMoveBackwards new.
	commandsDictionary at: $l put: MarsRoverCommandsRotateLeft new.
	commandsDictionary at: $r put: MarsRoverCommandsRotateRight new.

! !

!methodRemoval: MarsRoverCommandHandler #initialize stamp: 'MSM 10/25/2020 03:33:48'!
initialize

	commandsDictionary _ Dictionary new.
	commandsDictionary at: $f put: MarsRoverCommandsMoveForward new.
	commandsDictionary at: $b put: MarsRoverCommandsMoveBackwards new.
	commandsDictionary at: $l put: MarsRoverCommandsRotateLeft new.
	commandsDictionary at: $r put: MarsRoverCommandsRotateRight new.

!
!MarsRoverCommandHandler methodsFor: 'initialization' stamp: 'MSM 10/25/2020 03:34:36'!
initializeWith: aMarsRover

	commandsDictionary _ Dictionary new.
	commandsDictionary at: $f put: MarsRoverCommandsMoveForward new.
	commandsDictionary at: $b put: MarsRoverCommandsMoveBackwards new.
	commandsDictionary at: $l put: MarsRoverCommandsRotateLeft new.
	commandsDictionary at: $r put: MarsRoverCommandsRotateRight new.

! !

!methodRemoval: MarsRoverCommandHandler #initializeWith stamp: 'MSM 10/25/2020 03:34:36'!
initializeWith

	commandsDictionary _ Dictionary new.
	commandsDictionary at: $f put: MarsRoverCommandsMoveForward new.
	commandsDictionary at: $b put: MarsRoverCommandsMoveBackwards new.
	commandsDictionary at: $l put: MarsRoverCommandsRotateLeft new.
	commandsDictionary at: $r put: MarsRoverCommandsRotateRight new.

!
!MarsRoverCommandHandler methodsFor: 'initialization' stamp: 'MSM 10/25/2020 03:35:15' prior: 50849138!
initializeWith: aMarsRover

	marsRover _ aMarsRover.
	commandsDictionary _ Dictionary new.
	commandsDictionary at: $f put: MarsRoverCommandsMoveForward new.
	commandsDictionary at: $b put: MarsRoverCommandsMoveBackwards new.
	commandsDictionary at: $l put: MarsRoverCommandsRotateLeft new.
	commandsDictionary at: $r put: MarsRoverCommandsRotateRight new.

! !
!MarsRover methodsFor: 'orientation' stamp: 'MSM 10/25/2020 03:36:05'!
orientation

	^orientation.! !
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 03:36:16' prior: 50849006!
process: aCommand

	^commandsHandler execute: aCommand.
	"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription 
	"! !
!MarsRoverCommandHandler methodsFor: 'execution' stamp: 'MSM 10/25/2020 03:36:47'!
execute: aCommand
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover invalidCommandErrorDescription ].
	parsedCommand execute: marsRover orientation.! !

!methodRemoval: MarsRoverCommandHandler #execute:with: stamp: 'MSM 10/25/2020 03:36:51'!
execute: aCommand with: orientation
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover invalidCommandErrorDescription ].
	parsedCommand execute: orientation.!
!MarsRoverCommandHandler methodsFor: 'execution' stamp: 'MSM 10/25/2020 03:37:11' prior: 50849197!
execute: aCommand
	|parsedCommand|
	parsedCommand := commandsDictionary at: aCommand ifAbsent: [self error: MarsRover invalidCommandErrorDescription ].
	parsedCommand executeWith: marsRover orientation.! !
!MarsRoverCommands methodsFor: 'nil' stamp: 'MSM 10/25/2020 03:37:41'!
executeWith: aOrientation

	self subclassResponsibility.! !
!MarsRoverCommandsMoveBackwards methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:38:20' overrides: 50849225!
executeWith: orientation

	^orientation moveBackwards.! !

!methodRemoval: MarsRoverCommandsMoveBackwards #execute: stamp: 'MSM 10/25/2020 03:38:20'!
execute: orientation

	^orientation moveBackwards.!
!MarsRoverCommandsRotateRight methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:38:58' overrides: 50849225!
executeWith: orientation

	^orientation rotateRight.! !

!methodRemoval: MarsRoverCommandsRotateRight #execute: stamp: 'MSM 10/25/2020 03:38:58'!
execute: orientation

	^orientation rotateRight.!
!MarsRoverCommandsRotateLeft methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:39:29' overrides: 50849225!
executeWith: orientation

	^orientation rotateLeft.! !

!methodRemoval: MarsRoverCommandsRotateLeft #execute: stamp: 'MSM 10/25/2020 03:39:29'!
execute: orientation

	^orientation rotateLeft.!
!MarsRoverCommandsMoveForward methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:39:58' overrides: 50849225!
executeWith: orientation

	^orientation moveForward.! !

!methodRemoval: MarsRoverCommandsMoveForward #execute: stamp: 'MSM 10/25/2020 03:39:58'!
execute: orientation

	^orientation moveForward.!
!MarsRover methodsFor: 'initialization' stamp: 'MSM 10/25/2020 03:43:34' prior: 50848842!
initializeAt: aPosition facing: aCardinalPoint 
	
	position _ aPosition.
	orientation _ MarsRoverOrientation facing: aCardinalPoint for: self.
	commandsHandler _ MarsRoverCommandHandler for: self.! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'MSM 10/25/2020 03:43:39'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 03:43:39'!
ERROR!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:43:49'!
ERROR!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:43:49'!
ERROR!
!MarsRoverCommandHandler class methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:44:31' prior: 50849107!
for: aMarsRover

	self initializeWith: aMarsRover.! !
!MarsRoverCommandHandler class methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:45:05' prior: 50849326!
for: aMarsRover

	self new initializeWith: aMarsRover.! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:45:11'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:45:11'!
ERROR!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:45:11'!
ERROR!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'MSM 10/25/2020 03:45:11'!
ERROR!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'MSM 10/25/2020 03:45:11'!
ERROR!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:45:11'!
ERROR!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:45:11'!
ERROR!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'MSM 10/25/2020 03:45:11'!
ERROR!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'MSM 10/25/2020 03:45:11'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'MSM 10/25/2020 03:45:11'!
FAILURE!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 03:45:11'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:45:41'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:45:44'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:45:44'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 03:46:12' prior: 50849183!
process: aCommand

	^commandsHandler executeWith: aCommand.
	"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription 
	"! !

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:46:20'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:46:20'!
ERROR!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:46:20'!
ERROR!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'MSM 10/25/2020 03:46:20'!
ERROR!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'MSM 10/25/2020 03:46:20'!
ERROR!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:46:20'!
ERROR!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:46:20'!
ERROR!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'MSM 10/25/2020 03:46:20'!
ERROR!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'MSM 10/25/2020 03:46:20'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'MSM 10/25/2020 03:46:20'!
FAILURE!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 03:46:20'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:46:25'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:46:25'!
ERROR!
!MarsRover methodsFor: 'movement' stamp: 'MSM 10/25/2020 03:46:48' prior: 50849386!
process: aCommand

	^commandsHandler execute: aCommand.
	"
	aCommandList = $f ifTrue: [^orientation moveForward].
	aCommandList = $b ifTrue: [^orientation moveBackwards].
	aCommandList = $l ifTrue: [^orientation rotateLeft].
	aCommandList = $r ifTrue: [^orientation rotateRight].
	
	self error: self class invalidCommandErrorDescription 
	"! !

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:47:21'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:47:21'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:48:33'!
ERROR!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:48:33'!
ERROR!
!MarsRoverCommandHandler class methodsFor: 'as yet unclassified' stamp: 'MSM 10/25/2020 03:49:38' prior: 50849332!
for: aMarsRover

	^self new initializeWith: aMarsRover.! !

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:49:45'!
PASSED!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 03:49:48'!
PASSED!

----SNAPSHOT----(25 October 2020 03:52:17) CuisUniversity-4137.image priorSource: 16543359!

----QUIT----(25 October 2020 03:52:21) CuisUniversity-4137.image priorSource: 16571852!

----STARTUP---- (25 October 2020 03:53:13) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


----QUIT----(25 October 2020 03:54:16) CuisUniversity-4137.image priorSource: 16571945!

----STARTUP---- (25 October 2020 12:01:33) as /home/mariano/Documentos/Ing1/linux64/CuisUniversity-4137.image!


!classRemoval: #WestOrientation stamp: 'MSM 10/25/2020 12:02:09'!
MarsRoverOrientation subclass: #WestOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #SouthOrientation stamp: 'MSM 10/25/2020 12:02:09'!
MarsRoverOrientation subclass: #SouthOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #NorthOrientation stamp: 'MSM 10/25/2020 12:02:09'!
MarsRoverOrientation subclass: #NorthOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #EastOrientation stamp: 'MSM 10/25/2020 12:02:10'!
MarsRoverOrientation subclass: #EastOrientation
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverOrientation stamp: 'MSM 10/25/2020 12:02:10'!
Object subclass: #MarsRoverOrientation
	instanceVariableNames: 'marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverCommandsRotateRight stamp: 'MSM 10/25/2020 12:02:10'!
MarsRoverCommands subclass: #MarsRoverCommandsRotateRight
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverCommandsRotateLeft stamp: 'MSM 10/25/2020 12:02:11'!
MarsRoverCommands subclass: #MarsRoverCommandsRotateLeft
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverCommandsMoveForward stamp: 'MSM 10/25/2020 12:02:11'!
MarsRoverCommands subclass: #MarsRoverCommandsMoveForward
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverCommandsMoveBackwards stamp: 'MSM 10/25/2020 12:02:11'!
MarsRoverCommands subclass: #MarsRoverCommandsMoveBackwards
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverCommands stamp: 'MSM 10/25/2020 12:02:12'!
Object subclass: #MarsRoverCommands
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverCommandHandler stamp: 'MSM 10/25/2020 12:02:12'!
Object subclass: #MarsRoverCommandHandler
	instanceVariableNames: 'commandsDictionary marsRover'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRover stamp: 'MSM 10/25/2020 12:02:12'!
Object subclass: #MarsRover
	instanceVariableNames: 'position orientation commandsHandler'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

!classRemoval: #MarsRoverTests stamp: 'MSM 10/25/2020 12:02:13'!
TestCase subclass: #MarsRoverTests
	instanceVariableNames: 'south north east west'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'MarsRover - Exercise'!

----End fileIn of /home/mariano/Documentos/Ing1/linux64/MarsRover - Exercise.st----!

!testRun: #MarsRoverTests #test01EmptyCommandListDoesNothing stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test02MovingForwardWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test03MovingBackwardsWorksProperlyOnYAxis stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test04RotatingRightWorksProperly stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test05RotatingLeftWorksProperly stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test06MovingForwardWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test07MovingBackwardsWorksProperlyOnXAxis stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test08CommandListWithMoreThanOneCommandExecutesProperly stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test09CreatingAMarsRoverWithAnInvalidCardinalPointShouldFail stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test10CommandListWithAnInvalidCommandShouldExecuteUntilItsFoundAndNoFurther stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

!testRun: #MarsRoverTests #test11NegativeCoordinates stamp: 'MSM 10/25/2020 12:02:43'!
PASSED!

----QUIT----(25 October 2020 12:02:48) CuisUniversity-4137.image priorSource: 16572147!